000100171206      * %ATTR DBGVIEW(*SOURCE)
000200060828       IDENTIFICATION DIVISION.
000300101021       PROGRAM-ID.    ACCRIF2.
000400060828       AUTHOR.        Richard Salire.
000500210807       INSTALLATION.  CITIGROUP.
000600060828       DATE-WRITTEN.  August 2006.
000700210807       DATE-COMPILED.
000800171128      ******************************************************************
000900171128      * PROGRAMMER *DATE OF CHANGE* DESCRIPTION OF CHANGE              *
001000171128      ******************************************************************
001100171128      * RichardS   * 2006/08/22   * RFS 35267 - new program            *
001200061215      * Bharti M   * 2006/10/26   * RFS34838 - Recompile.
001300061215      *            *              * MFAACLIFP & MFAACRIFP expanded.
001400171128      * Pubudu Jay * 2006/12/11   * RFS 38651 - Fix Market Value Date. *
001500171128      *            *              *                                    *
001600200415      * Pawel A    * 2007/11/26   * RFS 40942 - Five for f f  product  *
001700171128      *            *              *             processing             *
001800171128      * Frank Hong * 2008/02/13   * RFS 40942. Defect #19.             *
001900171128      *            *              * GWA is not updated.                *
002000171128      * Bojana J.  * 2008/05/06   * RFS 51776 - Recompile (MFAACCCIP). *
002100171128      * Fatema Haji* 2008/08/18   * RFS 55960 - Recompile (MFAACCONP). *
002200171128      * Andy Chan  * 2008/92/03   * RFS 52816 - Calculate GLWA RIF     *
002300171128      *            *              * Minimum                            *
002400171128      * Meynard B  * 2008/11/18   * RFS 59997 - Reset RIF Minimum with *
002500171128      *            *              * Annuitant age +1                   *
002600090218      * Lev O      *  2009/02/17  * RFS55414 - change interface to     ng
002700090218      *            *              *   FXACCANUIT.                      ng
002800171128      * Sanjeev P  * 2009/03/30   * RFS 54661 - Locked In Plan Enhance-*
002900171128      *            *              * ment                               *
003000171128      * Pawel A    * 2010/02/18   * RFS 78327 - RIF minimum amount not *
003100171128      *            *              * updated in MFAACCONP for GLWB Accts*
003200171128      * Lev O      * 2010/05/27   * RFS80602 - use proportional        *
003300171128      *            *              *   calculation if applicable.       *
003400171128      * Emman. Yala* 2010/08/26   * RFS82787 - Incorrect Current Minim *
003500171128      *            *              * when using Spouse age > Annuit age *
003600171128      *            *              *                                    *
003700171128      * SANKARAN R * 2010/10/11   * RFS85276 - RIF/LIF Calculator      *
003800171128      *            *              *                                    *
003900171128      * SANKARAN R * 2010/12/13   * RFS89935 - Include DateforCalc for *
004000171128      *            *              *            claculating Investor Age*
004100171128      * Emman. Yala* 2011/01/06   * RFS90552- Incorrect GLWA (Curr YR &*
004200171128      *            *              * Remaining YTD) after Year End batch*
004300171128      *            *              * Shld be 0 when Annuit age is ineligible
004400171128      * Emman. Yala* 2011/03/01   * RFS91599 - Recompile for 80605
004500171128      *            *              * Replaced Implicit Join by Inner Join
004600171128      * Prince     * 2011/06/23   * RFS88038 - Calculate AWD Amounts
004700171128      *            *              *                                    n
004800171128      * Nasra F    * 2011/09/22   * RFS100978- Rollback 88038 - code is
004900171128      *            *              * in RFS100978/PHKQSRC
005000171128      * Emman. Yala* 2011/09/26   * RFS101037- Reinstate 88038
005100171128      * Pawel A    * 2011/10/04   * RFS100853- Update Excess amount    *
005200171128      *            *              * if GLWB amount > Requested          *
005300171128      * Lev O      * 2011/10/07   * RFS100853.A-set up current account *
005400171128      *            *              *   before CalcGLWBAmt.              *
005500171128      *Alan Andrade* 2012/01/10   * RFS92818 - Ensure LIF accounts     *
005600171128      *            *              * on workfile are deleted from file  *
005700171128      *            *              * MFAACWATP.                         *
005800171128      * Lev O      * 2012/02/27   * RFS105383 -                        *
005900171128      *            *              * #2,#3 - fix withdrawal amounts.    *
006000171128      *            *              * #4    - fix number of payments.    *
006100171128      * Pawel A    * 2012/05/23   * RFS 109552 Incorrect AWD paid and  *
006200171128      *            *              * IFPAY TAXSEL split                 *
006300171128      *            *              *                                    *
006400171128      * Venkatesh C* 2012/05/30   * RFS109551 - Fix to determine       *
006500171128      *            *              * AWD restart date                   *
006600171128      * Pawel A    * 2012/07/31   * RFS 112498 Incorrect AWD Split if  *
006700171128      *            *              * no AWD option selected             *
006800171128      * Thilaga K  * 2012/08/28   * RFS112468 - AWD number of pymts in *
006900171128      *            *              * error when Active status           *
007000171128      * Thilaga K  * 2012/08/13   * RFS107585- Recompile for MFASGSTOP *
007100171128      * Venkatesh C* 2012/10/19   * RFS117298 - Recompile for MFAACCONP*
007200171128      * Ambikapathy* 2012/12/14   * RFS112135 - Recompile for MFASGSTOP*
007300171128      * Ganbold L  * 2013/02/19   * RFS119993 - Recompile MFATRNMSCP   *
007400171128      * Nagamani S * 2013/04/22   * RFS122007- Recompile for MFAGDTHCSP*
007500130513      * Callista N * 2013/05/10   * RFS108944 - Recompile.             *
007600130830      * Andy Chan  * 2013/08/30   * RFS127401 - Recompile for CPFXSGMTVA
007700131021      * Sairam     * 2013/09/13   * RFS127038 - Recompile.             *
007800131016      * Deepika    * 2013/09/18   * RFS121426 - Recompile.
007900140122      * Thilaga K  * 2014/01/21   * RFS133150 - Recompile for MFATRCODP
008000171128      *            *              *                                    *
008100140602      * Abhisek M  * 2014/02/12   * RFS129784 - Recompile
008200140602      * Thilaga K  * 2014/02/18   * RFS132733 - Recompile for MFAGDTHVP
008300140711      * Abhisek M  * 2014/04/01   * RFS129478 - GLWB enhancements
008400171128      * Siddharth N* 2014/06/11   * RFS130316 -  Changing the DELETE   *
008500171128      *            *              *    from MFAACWATP SQL clause       *
008600171128      *            *              *                                    *
008700140711      * Abhisek M  * 2014/06/19   * RFS138028 - Recompile for MFAACCONP
008800140710      * Manjusha V * 2014/04/01   *RFS129902 - Recompile for CPGLWBRULE*
008900140725      * TamilSelvi * 2014/06/03   * RFS137220 - Recompile for MFAGDTHCP
009000140813      * Nagamnai S * 2014/08/13   *RFS139007 - Recompile for CPGLWBRULE*
009100140909      * Waldi R.   * 2014/09/08   * RFS137082 - GLWB Enhancements
009200140909      *            *              * Original GWA/LWA
009300141210      * Thilaga K  * 2014/12/03   * RFS142721 - GLWA Previous Field
009400141210      *            *              * value not updated for RRIF Accounts
009500150512      * Thilaga K  * 2015/05/12   * RFS145136 - Recompile for MFAACCNNP
009600171206      * Arthy K    * 2017/08/11   * RFS173685 Fix for Minimum amt being
009700171206      *            *              * paid out incorrectly in RRIF account
009800180619      * Ragavi S   * 2018/03/22   * RFS177195 - AWD amount was incorrectly
009900180619      *            *              * updated 
010000190226      * Kavya K    *  2019/02/25  * RFS181057 - Recompile for MFAACMDP  *
010100190530      * Sethu B    *  2019/05/07  * RFS 182324 - In age related calc
010200190530      *            *              * primary annuitant DOB should be used
010300190530      *            *              * even after deceased
010400191007      * Bathuu L   *  2019/10/08  * RFS184855 - Populate tax file.      *
010500200224      * SasiKumar  *  2020/02/24  * RFS185169 - Account level GLWB
010600200224      *            *              * enhancements
010700200629      * SasiKumar  *  2020/04/15  * RFS185170 - Optional Riders
010800200610      * Vignesh    * 2020/06/10   * RFS185171 - Recompile for MFAACLBENP
010900200706      * Ashwini B  * 2020/06/20   * RFS184676 - Recompile for MFAGDTHVP*
011000200706      * Chaya sp   * 2020/07/06   * RFS185172 - Recompile for MFAACCONP*
011100200708      * Vignesh    *  2020/06/25  * RFS183812 - Recompile for MFASGSTOP
011200200713      * M K SINDHU * 2020/07/08   * RFS185172 - Recompile for MFAGDTHCSP,
011300200713      *            *              * MFAGDTHVP and MFATRCODP
011400200722      * Bagathsingh*  2020/06/02  * RFS185171 - To update AWD option as  *
011500200722      *            *              * 'G' when GWA > Account market value  *
011600200728      *            *              * AWD setup for GPP  when MV = 0.      *
011700200728      * Niranjan   * 2020/07/28   * RFS186053 - Use the investment       *
011800200728      *            *              * determined by withdrawal hierarchy   *
011900200811      *            *              * for accounts without investment      *
012000200914      * Gomathi S  * 2020/09/14   * RFS1103875 - YE20: RRIF & LIF details*
012100201127      *            *              * screen not updated after YE batch run*
012200201127      * Sasikumar  * 2020/11/4    * RFS1105650 - ACCGWDT- RRIF Minimum   *
012300201127      *            *              * Amount is not updated.               *
012400201127      *            *              * Changes are also tagged as 105650    *
012500201016      * Kavya K    * 2020/10/13   * RFS186497 - Recompile for MFAACMDP   *
012600201221      * Chaya SP   * 2020/10/19   * RFS180721 - Recompile for MFATRCODP, *
012700201221      *                           * MFAACLBENP                           *
012800210224      * Ashwini B  * 2021/02/08   * RFS187046 - Recompile for MFAACLBENP
012900210224      * Kavin      * 2021/02/17   * RFS186290 - Recompile only
013000210713      * Vignesh    * 2021/07/07   * RFS187254 - Recompile for MFATRCODP
013100210706      * Swathi J   * 2021/06/25   * RFS186771 - Tax NR4 Issue with PPPA
013200210807      * Kavin K    * 2021/08/07   * RFS187471 - Recompile for MFAGDTHVP  *
013300211008      * Swathi J   * 2021/10/08   * RFS1121738- PPPA warranty issues     *
013400211008      *            *              * from RFS: 186771 testing
013500180619      ******************************************************************
013600171128      *===============================================================*
013700190226       ENVIRONMENT DIVISION.
013800060828       CONFIGURATION SECTION.
013900060828       SOURCE-COMPUTER. IBM-AS400.
014000200706       OBJECT-COMPUTER. IBM-AS400.
014100060922       SPECIAL-NAMES. LOCAL-DATA IS WS-LOCAL
014200200224185169      DATA-AREA    IS WS-DTAARA-MFASEGPARM,
014300100607                      LINKAGE TYPE IS PROCEDURE FOR "FXREMPAY"
014400100607      * RFS80602 - Begin
014500100607                      LINKAGE TYPE IS PROCEDURE FOR "FXSEGMATVA".
014600100607      * RFS80602 - End
014700060922
014800060828      *
014900060828       INPUT-OUTPUT SECTION.
015000060828       FILE-CONTROL.
015100060828
015200060828       DATA DIVISION.
015300060828       FILE SECTION.
015400060828
015500060828      * ---------------------------------
015600060828       WORKING-STORAGE SECTION.
015700060828      * ---------------------------------
015800060828          COPY Cpysqlfld
015900060828               REPLACING == "CURRENT_PROGRAM" == BY == "ACCRIF2" ==.
016000060828      *
016100060828           EXEC SQL
016200060828             INCLUDE SQLCA
016300060828           END-EXEC.
016400060828
016500171128      * Error Codes, Uniquely Identify where the error happened
016600060828       01 Ws-Err-Code                 PIC X(02) VALUE SPACES.
016700060828          88 Ws-Err-Ok                          VALUE "00".
016800060828          88 Ws-Err-01                          VALUE "01".
016900060828          88 Ws-Err-02                          VALUE "02".
017000060828          88 Ws-Err-03                          VALUE "03".
017100060828          88 Ws-Err-04                          VALUE "04".
017200060906          88 Ws-Err-05                          VALUE "05".
017300060907          88 Ws-Err-06                          VALUE "06".
017400060907          88 Ws-Err-07                          VALUE "07".
017500060907          88 Ws-Err-08                          VALUE "08".
017600060907          88 Ws-Err-09                          VALUE "09".
017700060907          88 Ws-Err-10                          VALUE "10".
017800060914          88 Ws-Err-11                          VALUE "11".
017900060914          88 Ws-Err-12                          VALUE "12".
01800007112640942     88 Ws-Err-13                          VALUE "13".
01810008021340942     88 Ws-Err-14                          VALUE "14".
01820008091152816     88 Ws-Err-15                          VALUE "15".
01830008091152816     88 Ws-Err-16                          VALUE "16".
01840008091152816     88 Ws-Err-17                          VALUE "17".
018500100603      * RFS80602 - Begin: added new error codes
018600100603          88 Ws-Err-18                          VALUE "18".
018700100603      * RFS80602 - End
018800140711129478    88 Ws-Err-19                          VALUE "19".
018900140909137082    88 Ws-Err-20                          VALUE "20".
019000191007      *RFS184855 - Start
019100191007          88 Ws-Err-21                          VALUE "21".
019200191007      *RFS184855 - End
019300200224185169    88 Ws-Err-22                          VALUE "22".
019400200512  |       88 Ws-Err-23                          VALUE "23".
019500200512  |       88 Ws-Err-24                          VALUE "24".
019600200512  |       88 Ws-Err-25                          VALUE "25".
019700200624  |       88 Ws-Err-26                          VALUE "26".
019800200624185169    88 Ws-Err-27                          VALUE "27".
019900200725185171    88 Ws-Err-28                          VALUE "28".
020000200725185171    88 Ws-Err-29                          VALUE "29".
020100200725185171    88 Ws-Err-30                          VALUE "30".
020200200725185171    88 Ws-Err-31                          VALUE "31".
020300200725185171    88 Ws-Err-32                          VALUE "32".
020400200725185171    88 Ws-Err-33                          VALUE "33".
020500200811185171    88 Ws-Err-34                          VALUE "34".
020600200811185171    88 Ws-Err-35                          VALUE "35".
020700200811185171    88 Ws-Err-36                          VALUE "36".
020800200224
020900060828       01 lc_ErrorCodeDescr           PIC X(50) VALUE SPACES.
021000060828          88 lncc_ErrCodeDescr01                VALUE
021100060906             "Error in create table Sbaccrif".
021200060906          88 lncc_ErrCodeDescr02                VALUE
021300060906             "Error in declare cursor c_Rrif".
021400060906          88 lncc_ErrCodeDescr03                VALUE
021500060906             "Unable to open cursor c_Rrif".
021600060906          88 lncc_ErrCodeDescr04                VALUE
021700060906             "Error in doing INSERT Sbaccrif".
021800060906          88 lncc_ErrCodeDescr05                VALUE
021900060908             "Error in UPDATE Mfaivrapip".
022000060907          88 lncc_ErrCodeDescr06                VALUE
022100060907             "Error in DELETE Mfaacwatp".
022200060907          88 lncc_ErrCodeDescr07                VALUE
022300060907             "Error in DELETE Mfaaccaip".
022400060907          88 lncc_ErrCodeDescr08                VALUE
022500060907             "Error in declare cursor c_RrifDtls".
022600060907          88 lncc_ErrCodeDescr09                VALUE
022700060907             "Error in open cursor c_RrifDtls".
022800060907          88 lncc_ErrCodeDescr10                VALUE
022900060914             "Error in INSERT Mfaaccaip".
023000060914          88 lncc_ErrCodeDescr11                VALUE
023100060914             "Error in INSERT Mfaaccwatp".
023200060914          88 lncc_ErrCodeDescr12                VALUE
023300060914             "Error in UPDATE Mfaaccawp".
02340007112640942     88 lncc_ErrCodeDescr13                VALUE
02350007112640942        "Error getting GWAAmount".
02360008021340942     88 lncc_ErrCodeDescr14                VALUE
02370008021340942        "Error updating Mfaacconp".
02380008091152816     88 lncc_ErrCodeDescr15                VALUE
02390008091152816        "Error getting Contract Info".
02400008091152816     88 lncc_ErrCodeDescr16                VALUE
02410008091152816        "Error getting Primary Annuitant".
02420008091152816     88 lncc_ErrCodeDescr17                VALUE
02430008091152816        "Error getting Default Annuitant".
024400100603      * RFS80602 - Begin: added new error codes
024500100603          88 lncc_ErrCodeDescr18                VALUE
024600100603             "Error opening lcu_rrifMin cursor".
024700140711129478    88 lncc_ErrCodeDescr19                VALUE
024800140711129478       "Error updating lifetime withdrawal amount".
024900191007      *RFS184855 - Start
025000191007          88 lncc_ErrCodeDescr21                VALUE
025100191007             "Error in INSERT Mfaacprevp".
025200191007      *RFS184855 - End
025300200224185169    88 lncc_ErrCodeDescr22                VALUE
025400200512  |          "Error while selecting Acct level Market Value".
025500200512  |       88 lncc_ErrCodeDescr23                VALUE
025600200512  |          "Error updating Mfaaclbenp".
025700200512  |       88 lncc_ErrCodeDescr24                VALUE
025800200512  |          "Error opening lcu_rrifMinAclbenp cursor".
025900200512  |       88 lncc_ErrCodeDescr25                VALUE
026000200512  |          "Error while Fetch lcu_rrifMinAclbenp cursor".
026100200512  |       88 lncc_ErrCodeDescr26                VALUE
026200200624  |          "Error getting Mfaaclbenp-GWAAmount".
026300200624  |       88 lncc_ErrCodeDescr27                VALUE
026400200811185169       "Error getting Account Info".
026500200725185171    88 lncc_ErrCodeDescr28                VALUE
026600200725185171       "Error while Selecting AWD MFAACCAIP".
026700200725185171    88 lncc_ErrCodeDescr29                VALUE
026800200725185171       "Error while Deleting AWD MFAACCAIP".
026900200725185171    88 lncc_ErrCodeDescr30                VALUE
027000200725185171       "Error while Inserting AWD MFAACCAIP".
027100200725185171    88 lncc_ErrCodeDescr31                VALUE
027200200725185171       "Error while Selecting RIF MFAACRIVP".
027300200725185171    88 lncc_ErrCodeDescr32                VALUE
027400200725185171       "Error while Deleting RIF MFAACRIVP".
027500200725185171    88 lncc_ErrCodeDescr33                VALUE
027600200725185171       "Error while Inserting RIF MFAACRIVP".
027700200811185171    88 lncc_ErrOpenAWDSPLIT               VALUE
027800200811185171       "Error while Opening AWDSplit cursor".
027900200811185171    88 lncc_ErrFetchAWDSPLIT              VALUE
028000200811185171       "Error while Fetching AWDSplit cursor".
028100200811185171    88 lncc_ErrCloseAWDSPLIT              VALUE
028200200811185171       "Error while Closing AWDSplit cursor".
028300100603      * Flag to check end of the cursor/read
028400100603       01 lc_rrifMinFlag                  PIC X(1) VALUE SPACES.
028500100603         88 lncc_rrifMinStart             VALUE SPACES.
028600100603         88 lncc_rrifMinEnd               VALUE "9".
028700100607       01 lc_clcContractRrifMinFlag       PIC X(1) VALUE SPACES.
028800100607         88 lncc_clcContractRrifMinNo     VALUE SPACES.
028900200624         88 lncc_clcContractRrifMinYes    VALUE "Y".
029000100603      * RFS80602 - End
029100200224185169 01 lc_clcAccountRrifMinFlag       PIC X(1) VALUE SPACES.
029200200224185169   88 lncc_clcAccountRrifMinNo     VALUE SPACES.
029300200224185169   88 lncc_clcAccountRrifMinYes    VALUE "Y".
029400200811185171 01 lncc_GLWBacctFlag              PIC X(1) VALUE SPACE.
029500200811185171   88 lncc_GLWBAcctno              VALUE "N".
029600200811185171   88 lncc_GLWBAcctYes             VALUE "Y".
029700060828
029800060901       01  li_MaxRows                 PIC S9(07) BINARY VALUE 300.
029900060901
030000060830       01  ltb_FetchRec.
030100060914           04 ltb_AcctArray                OCCURS 300 TIMES.
030200060920              06 li_ArrAccountNo           PIC S9(09).
030300060901              06 lc_ArrPayTypeCode         PIC  X(01).
030400061024              06 li_ArrMinWithdrawalAmt    PIC S9(11)V9(02) COMP-3.
030500061024              06 li_ArrSpecifiedPayAmt     PIC S9(11)V9(02) COMP-3.
030600061024              06 li_ArrReqAnnualPayment    PIC S9(11)V9(02) COMP-3.
030700060905              06 li_ArrInvestorNo          PIC S9(09).
030800060905              06 lc_ArrDealerCode          PIC  X(04).
030900060905              06 lc_ArrDealerRepCode       PIC  X(06).
031000060905              06 lc_ArrAccountTypeCode     PIC  X(05).
031100060901              06 li_ArrMinPayFactor        PIC S9(03)V9(04) COMP-3.
031200060901              06 lc_ArrPayInstrType        PIC  X(01).
031300060905              06 li_ArrIvrapipIvrNo        PIC S9(09).
031400060901              06 li_ArrPrevCalculatedAmt   PIC S9(11)V9(02) COMP-3.
031500060901              06 li_ArrPercentIncrease     PIC S9(03)V9(02) COMP-3.
031600060905              06 li_ArrAccountMV           PIC S9(11)V9(02) COMP-3.
03170008090352816         06 lc_ArrNominee             PIC  X(01).
03180008090352816         06 ld_ArrCalcDOB             PIC S9(09).
03190008090352816         06 lc_ArrQualifyingFlag      PIC  X(01).
03200008090352816         06 ld_ArrInvestorDOB         PIC S9(09).
032100210615186771        06 lc_ArrInvestorCntry       PIC  X(03).
032200210708186771        06 li_ArrPPPAMonth           PIC S9(02).
032300060828
032400060907       01  ltb_FetchDtlRec.
032500060914           04 ltb_DtlArray                 OCCURS 300 TIMES.
032600060914      *    04 ltb_DtlArray                 OCCURS 10 TIMES.
032700060907              06 li_DtlArrAccountNo        PIC S9(09).
032800060907              06 li_DtlArrMinWithdrawalAmt PIC S9(11)V9(02) COMP-3.
032900060907              06 li_DtlArrExcessPayAmt     PIC S9(11)V9(02) COMP-3.
033000060907              06 lc_DtlArrFedTaxOpt        PIC  X(01).
033100060907              06 lc_DtlArrSplitOptCode     PIC  X(01).
033200060911              06 lc_DtlArrContrRedemCode   PIC  X(06).
033300060920
033400060907              06 li_DtlArrStartDate        PIC S9(08).
033500060907              06 li_DtlArrHoldUntilDate    PIC S9(08).
033600060907
033700060907              06 lc_DtlArrInvCode          PIC  X(05).
033800060907              06 lc_DtlArrConfirm          PIC  X(01).
033900060907              06 lc_DtlArrGrossOrNet       PIC  X(01).
034000060907              06 li_DtlArrAnnualAmt        PIC S9(11)V9(02) COMP-3.
034100060908              06 lc_DtlArrWaiveDsc         PIC  X(01).
034200060908              06 lc_DtlArrWaiveReasonCode  PIC  X(04).
034300060907
034400060912              06 lc_DtlArrNxtYrFreqCode    PIC  X(02).
034500060907              06 li_DtlArrPayPerAnnumRrif  PIC S9(03).
034600060912              06 lc_DtlArrFrequencyCode    PIC  X(02).
034700060907              06 li_DtlArrPayPerAnnumAwd   PIC S9(03).
034800060907
034900060907              06 lc_DtlArrContrRedemCdRule PIC  X(02).
035000060907
035100060908              06 lc_DtlArrPayTaxOnB        PIC  X(01).
035200060907              06 lc_DtlArrSplitOptCodeRegB PIC  X(01).
035300060907              06 lc_DtlArrAddReplceTaxRegB PIC  X(01).
035400060907              06 li_DtlArrFedTaxAmtRegB    PIC S9(11)V9(02) COMP-3.
035500060907              06 li_DtlArrFedTaxPrcntRegB  PIC S9(03)V9(02) COMP-3.
035600060907              06 li_DtlArrProvTaxAmtRegB   PIC S9(11)V9(02) COMP-3.
035700060907              06 li_DtlArrProvTaxPrcntRegB PIC S9(03)V9(02) COMP-3.
035800060907
035900060908              06 lc_DtlArrPayTaxOnE        PIC  X(01).
036000060907              06 lc_DtlArrSplitOptCodeRegE PIC  X(01).
036100060907              06 lc_DtlArrAddReplceTaxRegE PIC  X(01).
036200060907              06 li_DtlArrFedTaxAmtRegE    PIC S9(11)V9(02) COMP-3.
036300060907              06 li_DtlArrFedTaxPrcntRegE  PIC S9(03)V9(02) COMP-3.
036400060907              06 li_DtlArrProvTaxAmtRegE   PIC S9(11)V9(02) COMP-3.
036500060907              06 li_DtlArrProvTaxPrcntRegE PIC S9(03)V9(02) COMP-3.
036600060907
036700060908              06 lc_DtlArrPayTaxOnM        PIC  X(01).
036800060907              06 lc_DtlArrSplitOptCodeRegM PIC  X(01).
036900060907              06 lc_DtlArrAddReplceTaxRegM PIC  X(01).
037000060907              06 li_DtlArrFedTaxAmtRegM    PIC S9(11)V9(02) COMP-3.
037100060907              06 li_DtlArrFedTaxPrcntRegM  PIC S9(03)V9(02) COMP-3.
037200060907              06 li_DtlArrProvTaxAmtRegM   PIC S9(11)V9(02) COMP-3.
037300060907              06 li_DtlArrProvTaxPrcntRegM PIC S9(03)V9(02) COMP-3.
037400120828112468        06 li_DtlArrNextPayDate      PIC S9(08).
037500180402177195        06 lc_DtlArrAWDStatus        PIC X(02).
037600210707186771        06 li_DtlArrEntitlment       PIC S9(13)V9(02) COMP-3.
037700211007112173        06 li_DtlArrRequestedAmt     PIC S9(13)V9(02) COMP-3.
037800210617
037900060908       01  ltb_DtlRecord.
038000060907           04 ltb_DtlRec.
038100060908              06 li_DtlAccountNo           PIC S9(09).
038200210617              06 li_DtlMinWithdrawalAmt    PIC S9(11)V9(02) COMP-3.
038300060908              06 li_DtlExcessPayAmt        PIC S9(11)V9(02) COMP-3.
038400060908              06 lc_DtlFedTaxOpt           PIC  X(01).
038500060908              06 lc_DtlSplitOptCode        PIC  X(01).
038600060911              06 lc_DtlContrRedemCode      PIC  X(06).
038700060920
038800060908              06 li_DtlStartDate           PIC S9(08).
038900060908              06 li_DtlHoldUntilDate       PIC S9(08).
039000060908
039100060908              06 lc_DtlInvCode             PIC  X(05).
039200060908              06 lc_DtlConfirm             PIC  X(01).
039300060908              06 lc_DtlGrossOrNet          PIC  X(01).
039400060908              06 li_DtlAnnualAmt           PIC S9(11)V9(02) COMP-3.
039500060908              06 lc_DtlWaiveDsc            PIC  X(01).
039600060908              06 lc_DtlWaiveReasonCode     PIC  X(04).
039700060908
039800060912              06 lc_DtlNxtYrFreqCode       PIC  X(02).
039900060908              06 li_DtlPayPerAnnumRrif     PIC S9(03).
040000060912              06 lc_DtlFrequencyCode       PIC  X(02).
040100060908              06 li_DtlPayPerAnnumAwd      PIC S9(03).
040200060908
040300060908              06 lc_DtlContrRedemCdRule    PIC  X(02).
040400060908
040500060908              06 lc_DtlPayTaxOnB           PIC  X(01).
040600060908              06 lc_DtlSplitOptCodeRegB    PIC  X(01).
040700060908              06 lc_DtlAddReplceTaxRegB    PIC  X(01).
040800060921              06 li_DtlFedTaxAmtRegB       PIC S9(11)V9(02) COMP-3.
040900060921              06 li_DtlFedTaxPrcntRegB     PIC S9(03)V9(02) COMP-3.
041000060921              06 li_DtlProvTaxAmtRegB      PIC S9(11)V9(02) COMP-3.
041100060921              06 li_DtlProvTaxPrcntRegB    PIC S9(03)V9(02) COMP-3.
041200060907
041300060908              06 lc_DtlPayTaxOnE           PIC  X(01).
041400060908              06 lc_DtlSplitOptCodeRegE    PIC  X(01).
041500060908              06 lc_DtlAddReplceTaxRegE    PIC  X(01).
041600060921              06 li_DtlFedTaxAmtRegE       PIC S9(11)V9(02) COMP-3.
041700060921              06 li_DtlFedTaxPrcntRegE     PIC S9(03)V9(02) COMP-3.
041800060921              06 li_DtlProvTaxAmtRegE      PIC S9(11)V9(02) COMP-3.
041900060921              06 li_DtlProvTaxPrcntRegE    PIC S9(03)V9(02) COMP-3.
042000060908
042100060908              06 lc_DtlPayTaxOnM           PIC  X(01).
042200060908              06 lc_DtlSplitOptCodeRegM    PIC  X(01).
042300060908              06 lc_DtlAddReplceTaxRegM    PIC  X(01).
042400060921              06 li_DtlFedTaxAmtRegM       PIC S9(11)V9(02) COMP-3.
042500060921              06 li_DtlFedTaxPrcntRegM     PIC S9(03)V9(02) COMP-3.
042600060921              06 li_DtlProvTaxAmtRegM      PIC S9(11)V9(02) COMP-3.
042700060921              06 li_DtlProvTaxPrcntRegM    PIC S9(03)V9(02) COMP-3.
042800120828112468        06 li_DtlNextPayDate         PIC S9(08).
042900180402177195        06 lc_AWDStatus              PIC X(02).
043000210707186771        06 li_DtlPPPAEntitlment      PIC S9(13)V9(02) COMP-3.
043100211007112173        06 li_DtlRequestedAmt        PIC S9(13)V9(02) COMP-3.
043200200725      * RFS185171 - Begin
043300200725       01  ltb_RifRecord.
043400200725           04 ltb_RifAwdRec.
043500200725              06 li_RifAccountNo           PIC  S9(09).
043600200725              06 li_RifAwdSeqNo            PIC  S9(03).
043700200725              06 lc_RifInvCode             PIC  X(05).
043800200725              06 li_RifAwdAmt              PIC  S9(13)V9(2).
043900200725              06 li_RifAwdPercent          PIC  S9(07)V9(2).
044000200725              06 li_RifAwdUnit             PIC  S9(13)V9(3).
044100200725              06 lc_RifSplitOptCode        PIC  X(01).
044200200725              06 lc_RifConfirm             PIC  X(01).
044300200725              06 lc_RifGrossOrNet          PIC  X(01).
044400200725              06 lc_RifContrRedemCode      PIC  X(06).
044500200725              06 lc_RifIntConfirm          PIC  X(01).
044600200725              06 lc_RifWaiveDsc            PIC  X(01).
044700200725              06 lc_RifWaiveReasonCode     PIC  X(04).
044800200725
044900200725       01  ltb_InvRifRecord.
045000200725           04 ltb_InvRifAwdRec.
045100200725              06 li_InvRifAccountNo        PIC  S9(09).
045200200725              06 lc_InvRifInvCode          PIC  X(05).
045300200725              06 li_InvRifAnnualAmt        PIC  S9(13)V9(2).
045400200725              06 lc_InvRifGrossOrNet       PIC  X(01).
045500200725              06 lc_InvRifConfirm          PIC  X(01).
045600200725              06 lc_InvRifWaiveDsc         PIC  X(01).
045700200725              06 lc_InvRifWaiveReasonCode  PIC  X(04).
045800200725
045900200811       01  ltb_AWDSplit.
046000200811           03 ltb_AWDTable.
046100200811              05 ltb_SpArray               OCCURS 50 TIMES
046200200811                                           INDEXED BY li_CountA.
046300200811                 07 li_SpAccNo             PIC S9(09).
046400200811                 07 lc_SpContCode          PIC  X(06).
046500200811                 07 lc_SpSplitCode         PIC  X(1).
046600200811                 07 li_SpAWDAmt            PIC S9(13)V9(3).
046700200811                 07 li_SpAWDPerc           PIC S9(07)V9(2).
046800200811
046900200811       01  ltb_IndiAwdSplit.
047000200811           03 ltb_IndAWDSplitA             OCCURS 50 TIMES.
047100200811              07 ltb_IndiA                 PIC S9(04) BINARY
047200200811                                           OCCURS 5 TIMES.
047300200811
047400200725      * RFS185171 - End
047500060901       01  lc_Constants.
047600100602      * RFS80602 - Begin
047700100602           03 lncc_Closed                PIC X(01) VALUE "C".
047800100604           03 lncc_RIFGEN                PIC X(08) VALUE "RIFGEN".
047900100604           03 lncc_AuditUser             PIC X(10) VALUE "ACCRIF2".
048000140711      * RRFS129478 - Begin
048100140711           03 lnc_Rule5                  PIC X(01) VALUE "5".
048200140711      * RRFS129478 - END
048300100604           03 lncc_glwaRRIFMinCategory   PIC X(20) VALUE
048400100604              "GLWA RRIF MIN".
048500100607           03 lncc_originalGLWACategory  PIC X(20) VALUE
048600100607              "Original GLWA (RRIF)".
048700100602      * RFS80602 - End
048800060828           03 lc_EndOfProcess            PIC X(1) VALUE Space.
048900060828              88 lncc_EndOfProcess                VALUE "Y".
049000060828              88 lncc_NotEndOfProcess             VALUE "N".
049100060828           03 lc_CursorOpened            PIC X(1) VALUE Space.
049200060828              88 lncc_CursorOpenedYes             VALUE "Y".
049300060828              88 lncc_CursorOpenedNo              VALUE "N".
049400060907           03 lc_Cursor2Opened           PIC X(1) VALUE Space.
049500060907              88 lncc_Cursor2OpenedYes            VALUE "Y".
049600060907              88 lncc_Cursor2OpenedNo             VALUE "N".
049700060828           03 lc_EndOfFetch              PIC X(1) VALUE Space.
049800060828              88 lncc_EndOfFetchYes               VALUE "Y".
049900060828              88 lncc_EndOfFetchNo                VALUE "N".
050000060828           03 lc_ArrayMaxReached         PIC X(1) VALUE Space.
050100060828              88 lncc_ArrayMaxReachedYes          VALUE "Y".
050200060828              88 lncc_ArrayMaxReachedNo           VALUE "N".
050300060901           03 lc_PaymentTypeCode         PIC X(01).
050400060901              88 lncc_PaymentTypeCodeA            VALUE "A".
050500060901              88 lncc_PaymentTypeCodeM            VALUE "M".
050600060901              88 lncc_PaymentTypeCodeS            VALUE "S".
050700060901              88 lncc_PaymentTypeCodeP            VALUE "P".
05080007112640942         88 lncc_PaymentTypeCodeG            VALUE "G".
050900060905              88 lncc_PaymentTypeCodeBlank        VALUE " ".
051000060905           03 lc_PayInstruction          PIC X(01).
051100060905              88 lncc_PayInstructionBlank         VALUE " ".
051200060912           03 lc_CalcOption              PIC X(01).
051300060912              88 lncc_CalcOptionMin               VALUE "M".
051400060912              88 lncc_CalcOptionExc               VALUE "E".
051500060912           03 lc_NewRrifAcct             PIC X(01).
051600060912              88 lncc_NewRrifAcctYes              VALUE "Y".
051700060912              88 lncc_NewRrifAcctNo               VALUE "N".
051800191007      *RFS184855 - Start
051900191007           03 lncc_JOBRIFGEN             PIC X(10) VALUE "JOBRIFGEN".
052000191007      *RFS184855 - End
052100210707      *RFS186771 - Starts
052200210707           03 lncc_CAN                   PIC X(03) Value "CAN".
052300210707           03 lncc_12                    PIC X(02) Value "12".
052400210707           03 lncc_NR4B                  PIC X(04) Value "NR4B".
052500210707           03 lncc_PPPANRAttr            PIC X(06) Value "PPPANR".
052600210707           03 lncc_PPPA10Attr            PIC X(06) Value "PPPA10".
052700210707           03 lncc_PPPA2XAttr            PIC X(06) Value "PPPA2X".
052800210707      *RFS186771 - Ends
052900200811      *RFS185171-STARTS
053000200811       01 lc_FXAWD_Parms.
053100200811           03 pi_AccountNo2         PIC S9(09) COMP-3.
053200200811           03 pc_Mode2              PIC X(01).
053300200811           03 pc_FrequencyCode2     PIC X(02).
053400200811           03 pn_IFPayAmount2       PIC S9(11)V9(02) COMP-3.
053500200811           03 pn_TaxselAmount2      PIC S9(11)V9(02) COMP-3.
053600200811           03 pc_RejectCode2        PIC X(02).
053700200811      *RFS185171-ENDS
053800060828
05390008091152816  01  lc_52816Variables.
05400008091152816      03 lc_LastInvestmentSeries    PIC X(05)  VALUE X'FFFFFFFFFF'.
054100200623185169     03 lc_LastInvestmentSeriesAclb    PIC X(05)
054200200623                                             VALUE X'FFFFFFFFFF'.
05430008091152816      03 lc_FlagDOB                 PIC X(01).
05440008091152816      03 lc_InvestmentSeries        PIC X(05).
05450008091152816      03 lc_InvestmentCode          PIC X(05).
05460008091152816      03 lc_GLWAminFlag             PIC X(01)  VALUE " ".
05470008091152816      88  lb_GLWAMinimum                       VALUE "Y".
05480008091152816      88  lb_NoGLWAMinimum                     VALUE "N".
05490008091152816      03 ln_TempRRIFMinimum         PIC S9(13)V9(02).
05500008091152816      03 ln_RRIFminimum             PIC S9(13)V9(02).
05510008103152816      03 ln_OriginalGWA             PIC S9(13)V9(02)  Value 0.
05520008091152816      03 lc_Nominee                 PIC  X(01).
05530008091152816      03 lc_EligDefaultStartAge     PIC  X(03).
05540008091152816      03 ln_EligDefaultStartAge  redefines lc_EligDefaultStartAge
05550008091152816                                    PIC S9(03).
05560008091152816      03 ld_CalcDOB                 PIC S9(09) COMP-3.
05570008091152816      03 lc_QualifyingFlag          PIC  X(01).
05580008091152816      03 ld_InvestorDOB             PIC S9(09) COMP-3.
05590008091252816      03 ld_TempDOB                 PIC S9(08).
05600008091252816      03 ld_TempDobYMD redefines ld_TempDOB.
05610008091252816      05 ld_TempDobYYYY             PIC S9(04).
05620008091252816      05 filler                     PIC  X(04).
05630008091152816      03 li_TempAge                 PIC S9(05) COMP-3.
05640008091152816      03 ld_SpouseDOB               PIC S9(09) COMP-3.
05650008091152816      03 li_TempMinPaymentFactor    PIC S9(07)V9(4) COMP-3.
05660008091152816      03 li_AnnuitantAge            PIC S9(05) COMP-3.
05670008091152816      03 li_DateOfBirth             PIC S9(08).
05680008091152816      03 li_DateOfBirthYMD redefines li_DateOfBirth.
05690008091152816            10 li_DateOfBirthYYYY   PIC S9(4).
05700008091152816            10 Filler               PIC X(04).
05710010021878327      03 lc_GLWBContratFound        PIC X(01)  VALUE " ".
057200100218  |        88  lb_GLWBContratFoundYes               VALUE "Y".
05730010021878327      88  lb_GLWBContratFoundNo                VALUE "N".
057400080911
057500060828      * lc_Variables
057600060828       01  lc_Variables.
057700060828           03 lc_ProcessDate.
057800060908              05 lc_AsAtDate             PIC X(08).
057900060828              05 li_AsAtDate REDEFINES lc_AsAtDate
058000060908                                         PIC S9(08).
058100171206173685*       05 FILLER                  PIC X(29).
058200171206173685        05 FILLER                  PIC X(04).
058300171206173685        05 YEAR-END                PIC X(01).
058400171206173685        05 FILLER                  PIC X(24).
058500060908              05 lc_YearStartDate        PIC X(08).
058600060828              05 li_YearStartDate REDEFINES lc_YearStartDate
058700060908                                         PIC S9(08).
058800060908              05 FILLER                  PIC X(48).
058900060908              05 lc_YearEndDate          PIC X(08).
059000060828              05 li_YearEndDate REDEFINES lc_YearEndDate
059100060908                                         PIC S9(08).
05920008090452816         05 li_YearEndDateYMD redefines lc_YearEndDate.
05930008090452816            10 li_YearEndDateYYYY   PIC S9(4).
05940008090452816            10 Filler               PIC X(04).
059500060908              05 FILLER                  PIC X(68).
059600060908           03 lc_ExchangeRateType        PIC X(01).
059700060828           03 lc_CurrentVars.
059800060905              05 li_CurrAccountNo        PIC S9(09).
059900060905              05 li_CurrInvestorNo       PIC S9(09).
060000060905              05 lc_CurrInvestmentCode   PIC X(05).
060100060905              05 lc_CurrAccountTypeCode  PIC X(05).
060200060905              05 lc_CurrDealerCode       PIC X(04).
060300060905              05 lc_CurrDealerRepCode    PIC X(06).
060400060905              05 lc_CurrCurrency         PIC X(03).
060500200811185171        05 li_GLWBaccounttNo       PIC S9(09).
060600191007      *RFS184855 - Start
060700191007           03 lc_JobKey.
060800191007              05 lc_Job                  PIC X(10).
060900191007              05 lc_User                 PIC X(10).
061000191007              05 lc_Number               PIC X(06).
061100191007      *RFS184855 - End
061200200728      * RFS186053 Starts
061300200819           03 lc_InvUpdCalledBy          PIC X(10).
061400200819           03 li_InvUpdAccountNo         PIC S9(9)  COMP-3.
061500200819           03 lc_InvUpdRC                PIC X(1).
061600200728      * RFS186053 Ends
061700171206      *RFS173685 Begin
061800171206       01  lc_Date1.
061900171206              05 li_Date1YYYYMM          PIC 9(06).
062000171206              05 li_Date1DD              PIC 9(2).
062100171206
062200171206       01  lc_Date2.
062300171206              05 li_Date2YYYYMM          PIC 9(06).
062400171206              05 li_Date2DD              PIC 9(02).
062500180402      *RFS177195 STARTS
062600180402       01 lc_Date2a  REDEFINES lc_Date2.
062700180402              05 li_Date2YYYY       PIC 9(4).
062800180402              05 li_Date2MM         PIC 9(2).
062900180402              05 li_Date2DDA        PIC 9(2).
063000180402      *RFS177195 ENDS
063100171206      *RFS173685 End
063200060828
063300060828      * li_Variables
063400060828       01  li_Variables.
063500060908           03 li_NoOfRowsFetched         PIC S9(03).
063600060908           03 li_Cntr                    PIC S9(03).
063700060911           03 li_Ctr1                    PIC S9(03).
063800060911           03 li_Ctr2                    PIC S9(03).
063900200811185171     03 li_NoOfRowsA               PIC S9(03) VALUE 0.
064000060908           03 li_ExchangeRate            PIC S9(2)V9(07) COMP-3.
064100060908           03 li_CurrUnitBal             PIC S9(09)V9(03) COMP-3.
064200060908           03 li_AccInvMarketV           PIC S9(11)V9(02) COMP-3.
064300060908           03 li_AccTotalMarketV         PIC S9(11)V9(02) COMP-3.
064400060908           03 li_UnitPrice               PIC S9(04)V9(04) COMP-3.
064500061211      * RFS 38651 - Start
064600061211      *    03 li_TradeDate               PIC S9(08).
064700061211      * RFS 38651 - End
064800060908           03 li_PrevMinWithdrawalAmt    PIC S9(11)V9(02) COMP-3.
064900060908           03 li_SpecifiedPayAmt         PIC S9(11)V9(02) COMP-3.
065000060908           03 li_MarketValue             PIC S9(11)V9(02) COMP-3.
065100060908           03 li_PrevCalculatedAmt       PIC S9(11)V9(02) COMP-3.
065200060908           03 li_MinWithdrawalAmt        PIC S9(11)V9(02) COMP-3.
065300060908           03 li_RequestedTotal          PIC S9(11)V9(02) COMP-3.
065400060908           03 li_ReqAnnualPayment        PIC S9(11)V9(02) COMP-3.
065500060908           03 li_NewReqAnnualPayment     PIC S9(11)V9(02) COMP-3.
065600060908           03 li_ExcessPayAmt            PIC S9(11)V9(02) COMP-3.
065700060908           03 li_PercentIncrease         PIC S9(03)V9(02) COMP-3.
065800060908           03 li_MinPayFactor            PIC S9(03)V9(04) COMP-3.
065900060908           03 li_NewPrevCalcAmt          PIC S9(11)V9(02) COMP-3.
066000060908           03 li_PayPerAnnum             PIC S9(03).
066100060908           03 li_TotalPayout             PIC S9(11)V9(02) COMP-3.
066200210401           03 li_PercentMin              PIC S9(02)V9(05) COMP-3.
066300210401           03 li_PercentExc              PIC S9(02)V9(05) COMP-3.
066400060912           03 li_InvCtr                  PIC S9(03).
066500060912           03 li_TotalInv                PIC S9(03).
066600060912           03 li_StartDate.
066700060912              05 li_StartDateYr          PIC S9(04).
066800060912              05 li_StartDateMmDd        PIC S9(04).
066900060912           03 li_ProcessDate.
067000060912              05 li_ProcessDateYr        PIC S9(04).
067100060912              05 li_ProcessDateMmDd      PIC S9(04).
067200060912           03 li_PrevAccountNo           PIC S9(09).
067300060912           03 li_AwdAmount               PIC S9(11)V9(02) COMP-3.
067400060912           03 li_TotAwdAmountMin         PIC S9(11)V9(02) COMP-3.
067500060912           03 li_TotAwdAmountExc         PIC S9(11)V9(02) COMP-3.
067600060912           03 li_MinDifference           PIC S9(03)V9(02) COMP-3.
067700060912           03 li_ExcDifference           PIC S9(03)V9(02) COMP-3.
067800060918           03 li_Rows                    PIC S9(9) comp-3.
06790007112640942      03 ln_GWAAmount               PIC S9(13)V9(02).
06800008021340942      03 li_ContractNo              PIC S9(09).
068100100604      * RFS80602 - Begin
068200100811           03 li_SaveContractNo         PIC S9(09).
068300100607           03 lc_changeCategory         PIC X(20).
068400100604           03 ln_contractRRIFMin        PIC S9(13)V9(02).
068500200224185169     03 ln_accountRRIFMin         PIC S9(13)V9(02).
068600200624185169     03 li_AccountNo              PIC S9(9).
068700100604           03 ln_segmatvaContractMV     PIC S9(11)V9(02) COMP-3.
06880010112385276      03 li_RemainAmt              PIC S9(11)V9(02) COMP-3.
06890010112385276      03 li_MinAmt                 PIC S9(11)V9(02) COMP-3.
06900010112385276      03 li_ExcAmt                 PIC S9(11)V9(02) COMP-3.
06910010112385276      03 li_GrossYTD               PIC S9(11)V9(02) COMP-3.
069200140711129478     03 lc_GwaCalcRule            PIC X(01).
069300140711129478     03 lc_GwaCalcRule1           PIC X(01).
069400140909137082     03 ln_OriginalLWA            PIC S9(13)V9(02)  Value 0.
069500140909137082     03 ln_LWAAmount              PIC S9(13)V9(02)  Value 0.
069600210625
069700210625      *RFS186771 Begins
069800210625       01 li_PPPAAnn                    PIC S9(13)V9(02)  Value 0.
069900210625       01 li_PPPAEntitlement            PIC S9(13)V9(02)  Value 0.
070000210625       01 li_PPPA10Amt                  PIC S9(13)V9(02)  Value 0.
070100210625       01 li_PPPA2XAmt                  PIC S9(13)V9(02)  Value 0.
070200210625       01 lc_PPPANR                     PIC X(01).
070300210625       01 ln_PPPA10                     PIC S9(16)V9(04)  Value 0.
070400210625       01 ln_PPPA2X                     PIC S9(16)V9(04)  Value 0.
070500210708       01 li_PPPAMonth                  PIC S9(02).
070600210625       01 lc_InvestorCntry              PIC  X(03).
070700210625      *RFS186771 Ends
070800100705      *
070900100705       01 lc_UpdateGWAFlag              PIC X(01) VALUE SPACE.
071000100705         88 lncc_UpdateGWAYes                     VALUE "Y".
071100100705         88 lncc_UpdateGWANo                      VALUE SPACE.
071200100705
071300140909137082 01 lc_UpdateLWAFlag              PIC X(01) VALUE SPACE.
071400140909137082   88 lncc_UpdateLWAYes                     VALUE "Y".
071500140909137082   88 lncc_UpdateLWANo                      VALUE SPACE.
071600140909
071700100705       01 lc_dateTimeVars.
071800100604           03 ln_logSysDate             PIC S9(9) COMP-3.
071900100604           03 ln_logSysTime             PIC S9(9) COMP-3.
072000100604      *
072100100604           03 lc_dateTimeOfQuote.
072200100604             05 ln_dateOfQuote               PIC 9(09).
072300100604             05 lc_dateOfQuote PIC X(09) REDEFINES ln_dateOfQuote.
072400100604             05 ln_systime                   PIC 9(08).
072500100604             05 lc_systime     REDEFINES ln_systime.
072600100604               07 lc_timeOfQuote               PIC X(06).
072700100604               07 ln_timeOfQuote REDEFINES lc_timeOfQuote  PIC 9(06).
072800100604               07 lc_timeOfQuoteCC             PIC X(02).
072900100604      * RFS80602 - End
073000100705
073100061211      * RFS 38651 - Start
073200061211       01  WorkingStorageVariables.
073300061212           03 li_TradeDate               PIC S9(09) VALUE 0.
073400071126      * RFS 40942 Begin
073500071126           03 lc_ModuleSegGLWB           PIC X(10) VALUE "SEGGLWB".
073600071126           03 lc_SegGLWB                 PIC X(01).
073700071126              88  lc_SegGLWBYes          VALUE "Y".
073800071126              88  lc_SegGLWBNo           VALUE "N".
073900071126      * RFS 40942 End
074000061211      * RFS 38651 - End
074100060828
074200060911       01  lf_MfaaccaipRecord.
074300060911           04 lf_MfaaccaipRec            OCCURS 600 TIMES.
074400060911                                         COPY DD-ALL-FORMATS
074500060911                                           OF Mfaaccaip.
074600060911       01  lf_MfaacwatpRecord.
074700060911           04 lf_MfaacwatpRec            OCCURS 600 TIMES.
074800060911                                         COPY DD-ALL-FORMATS
074900060911                                           OF Mfaacwatp.
075000060828       01 pc_Parameters.
075100060908          03 lc_ActivityCode             PIC  X(08) VALUE "RIFRECLC".
075200060908          03 li_ActivityDate1            PIC S9(08) VALUE 0.
075300060908          03 li_ActivityDate2            PIC S9(08) VALUE 0.
075400071126
075500110630      * RFS88038 Start
075600110630
075700110630        01  li_Account-No                   PIC S9(09).
075800110630        01  ln_Guar-Withdrawal-Amount       PIC S9(11)V9(02) COMP-3.
075900110630        01  ln_Gwa-Rif-Minimum              PIC S9(11)V9(02) COMP-3.
076000110630        01  ln_Original-Gwa                 PIC S9(11)V9(02) COMP-3.
076100110630        01  ln_Ytd-Guar-Withdrawal-Amount   PIC S9(11)V9(02) COMP-3.
076200110630        01  ln_Ytd-Excess-Withdrawal        PIC S9(11)V9(02) COMP-3.
076300110630        01  ln_Awd-Amount                   PIC S9(11)V9(02) COMP-3.
076400110630        01  lc_Awd-Option                   PIC  X(01).
076500110714        01  li_NoOfGLWBCont                 PIC S9(03).
076600110714        01  ln_RemainingPerCont             PIC S9(11)V9(02) COMP-3.
076700110714        01  ln_ExcessAmt                    PIC S9(11)V9(02) COMP-3.
076800110630      *
076900110630        01  ln_G-Ytd-Guar-Withdrawal-Amt    PIC S9(11)V9(02) COMP-3.
077000110630        01  ln_O-Ytd-Guar-Withdrawal-Amt    PIC S9(11)V9(02) COMP-3.
077100110630        01  ln_C-Ytd-Guar-Withdrawal-Amt    PIC S9(11)V9(02) COMP-3.
077200110630        01  ln_F-Ytd-Guar-Withdrawal-Amt    PIC S9(11)V9(02) COMP-3.
077300110630        01  ln_G-Ytd-Excess-Withdrawal      PIC S9(11)V9(02) COMP-3.
077400110630        01  ln_O-Ytd-Excess-Withdrawal      PIC S9(11)V9(02) COMP-3.
077500110630        01  ln_C-Ytd-Excess-Withdrawal      PIC S9(11)V9(02) COMP-3.
077600110630        01  ln_F-Ytd-Excess-Withdrawal      PIC S9(11)V9(02) COMP-3.
077700110630        01  ln_G-Guar-Withdrawal-Amount     PIC S9(11)V9(02) COMP-3.
077800110630        01  ln_O-Original-Gwa               PIC S9(11)V9(02) COMP-3.
077900110630        01  ln_C-Gwa-Rif-Minimum            PIC S9(11)V9(02) COMP-3.
078000110630        01  ln_F-Awd-Amount                 PIC S9(11)V9(02) COMP-3.
078100110630
078200110630        01  ln_GLWB-Contract-Amt-Total      PIC S9(11)V9(02) COMP-3.
078300110630        01  ln_Eligible-Amount              PIC S9(11)V9(02) COMP-3.
078400110630        01  ln_Deductibles                  PIC S9(11)V9(02) COMP-3.
078500110630        01  ln_AmtRemain                    PIC S9(11)V9(02) COMP-3.
078600110630        01  ln_IFPAYAWDAmt                  PIC S9(11)V9(02) COMP-3.
078700110630        01  ln_TAXSELAWDAmt                 PIC S9(11)V9(02) COMP-3.
078800110701        01  ln_AWDSplitRatio                PIC S9(07)V9(06) COMP-3.
078900110630
079000120301      * RFS105383 - Begin
079100120302       01  lc_nonGLWBFundExists             PIC X(1) VALUE SPACE.
079200120302       01  lc_BASEOnly                      PIC X(1) VALUE SPACE.
079300120302       01  lc_GLWBOnly                      PIC X(1) VALUE SPACE.
079400120302       01  lc_AllowMultContFlag             PIC X(1) VALUE SPACE.
079500120302       01  li_tmpDate                FORMAT DATE "@Y%m%d".
079600120302       01  ln_PeriodicAmt                   PIC S9(11)V9(02) COMP-3.
079700120302       01  ln_GLWBAmtToBeTaken              PIC S9(11)V9(02) COMP-3.
079800120302       01  ln_totalPaid                     PIC S9(11)V9(02) COMP-3.
079900120301      * RFS105383 - End
080000120302
080100110708        01  lncc_Is-It-A-GLWB-Calculation   PIC  X(1) VALUE SPACE.
080200110708            88  lncc_GLWB-Calculation                 VALUE "Y".
080300110708            88  lncc_No-GLWB-Calculation              VALUE SPACE.
080400140404
080500140711129478*
080600140711  |     01  ln_Lifetime-Withdrawal-Amt      PIC S9(11)V9(02) COMP-3.
080700140711  |     01  ln_L-Lifetime-Withdrawal-Amt    PIC S9(11)V9(02) COMP-3.
080800140711  |     01  ln_L-Ytd-Guar-Withdrawal-Amt    PIC S9(11)V9(02) COMP-3.
080900140711  |     01  ln_L-Ytd-Excess-Withdrawal      PIC S9(11)V9(02) COMP-3.
081000140711129478*
081100120302
081200201127105650  01 li_RifMinFactor                  PIC S9(07)V9(4) COMP-3.
081300201127
081400120301      * RFS105383 - Begin: change the name to more descriptive one
081500120302      * ---------------------------------------------------------------
081600120301      * 01  lncc_OptBlankExists             PIC  X(1) VALUE SPACE.
081700120301      *     88  lncc_OptBlankExistsYes                VALUE "Y".
081800120301      *     88  lncc_OptBlankExistsNo                 VALUE SPACE.
081900120302      * ---------------------------------------------------------------
082000120301        01  lncc_GLWBFund                   PIC  X(1) VALUE SPACE.
082100120301            88  lncc_GLWBFundYes                      VALUE "Y".
082200120301            88  lncc_GLWBFundNo                       VALUE SPACE.
082300120301      * RFS105383 - End
082400110630
082500110630      * RFS88038 End
08260008090352816 * ---------------------------------------------------------------
08270008090352816 * Copybook - start
08280008090352816 * ---------------------------------------------------------------
08290008090352816  COPY Cpscedtal1.
08300008090452816
08310008090452816  COPY CPACCANUIT.
08320008090452816
08330008090452816  COPY CPGLWBRULE.
08340008090452816
083500060912       COPY Cpyrempay.
083600100604      * RFS80602 - Begin
083700100604       COPY CPFXSGMTVA.
083800100604      * RFS80602 - Begin
083900060828      * Constants
084000060914       77  lnci_0                         PIC S9(01) VALUE 0.
084100060914       77  lnci_1                         PIC S9(01) VALUE 1.
084200200811185171 77  lnci_MaxFetchRec               PIC S9(03) VALUE 50.
084300060914       77  lncc_ProgramCode               PIC  X(08) VALUE "ACCRIFIV".
084400060914       77  lncc_ProgramAction             PIC  X(10) VALUE "DEFAULT".
084500060914       77  lncc_ActivityCode              PIC  X(08) VALUE "RIFRECLC".
084600060914       77  lncc_Yes                       PIC  X(01) VALUE "Y".
084700060914       77  lncc_No                        PIC  X(01) VALUE "N".
084800060914       77  lncc_Space                     PIC  X(01) VALUE " ".
084900060914       77  lncc_BaseCurrency              PIC  X(03) VALUE "CAD".
085000060914       77  lncc_Rif                       PIC  X(03) VALUE "RIF".
085100060914       77  lncc_E                         PIC  X(01) VALUE "E".
085200060914       77  lncc_M                         PIC  X(01) VALUE "M".
085300060914       77  lncc_B                         PIC  X(01) VALUE "B".
085400060914       77  lncc_X                         PIC  X(01) VALUE "X".
085500060914       77  lncc_Y                         PIC  X(01) VALUE "Y".
085600060914       77  lncc_N                         PIC  X(01) VALUE "N".
085700060914       77  lncc_W                         PIC  X(01) VALUE "W".
085800060914       77  lncc_Dollar                    PIC  X(01) VALUE "$".
085900060914       77  lncc_Percent                   PIC  X(01) VALUE "%".
086000060914       77  lncc_Variable                  PIC  X(02) VALUE "VR".
086100120302105383 77  lncc_WK                        PIC  X(02) VALUE "WK".
086200120302105383 77  lncc_BW                        PIC  X(02) VALUE "BW".
086300060914       77  lncc_27                        PIC  X(02) VALUE "27".
086400060914       77  lncc_Taxsel                    PIC  X(06) VALUE "TAXSEL".
086500060914       77  lncc_Ifpay                     PIC  X(05) VALUE "IFPAY".
086600110630 88038 77  lncc_GLWB                      PIC  X(04) VALUE "GLWB".
086700110630   |   77  lncc_C                         PIC  X(01) VALUE "C".
086800110630   |   77  lncc_O                         PIC  X(01) VALUE "O".
086900110630   |   77  lncc_F                         PIC  X(01) VALUE "F".
087000110630 88308 77  lncc_G                         PIC  X(01) VALUE "G".
087100110714 88308 77  lncc_Blank                     PIC  X(01) VALUE " ".
087200111025101037 77  lncc_BASE                      PIC X(04) VALUE "BASE".
087300140711129478 77  lncc_L                         PIC  X(01) VALUE "L".
087400200512185169 77  lncc_T                         PIC  X(01) VALUE "T".
087500060912
087600200224      * RFS185169 - Start
087700200224        01 lc_Mfasegparm.
087800200224          05 FILLER                    PIC X(50).
087900200224          05 Lc_AccountLevelGLWB       PIC X(1) VALUE SPACES.
088000200224            88  Lb_AccountLevelGlwbYes VALUE "Y".
088100200224            88  Lb_AccountLevelGlwbNo  VALUE "N".
088200200224
088300200224       01 li_AccountNo2             PIC S9(09) COMP-3 VALUE ZERO.
088400200224       01 ln_AccountMarketValue     PIC S9(11)V9(2) COMP-3 VALUE ZERO.
088500200224
088600200224       01 lc_GLWBAccountFound        PIC X(01)  VALUE " ".
088700200224          88  lb_GLWBAccountFoundYes               VALUE "Y".
088800200224          88  lb_GLWBAccountFoundNo                VALUE "N".
088900200512
089000200512      *Parms to call MKTVALTD
089100200512        01 COMM-DATE                      PIC S9(08).
089200200512        01 COMM-ACCOUNT-NO                PIC S9(09).
089300200512        01 COMM-INVESTMENT-CODE           PIC X(05).
089400200512        01 COMM-VALUE-INVESTMENT-CURRENCY PIC S9(11)V9(02).
089500200512        01 COMM-MARKET-VALUE-BASE         PIC S9(11)V9(02).
089600200512        01 COMM-BOOK-VALUE-BASE           PIC S9(11)V9(02).
089700200512        01 COMM-BOOK-VALUE-EXCHANGE       PIC S9(02)V9(07).
089800200512        01 COMM-TRAN-CLOS-UNIT-BAL        PIC S9(10)V9(03).
089900200512        01 COMM-BASE-UNIT-PRICE           PIC S9(05)V9(04).
090000200512        01 COMM-VALUE-BASE-CURRENCY       PIC S9(11)V9(02).
090100200512        01 COMM-ERROR-CODE                PIC X(01).
090200200512        01 COMM-DATE-IND                  PIC X(01).
090300200224
090400200224      * RFS185169 - End
090500200722      * RFS185171 STARTS
090600200722           03 ln_GuarWithAmount          PIC S9(13)V9(02)  Value 0.
090700200722           03 lc_AWDOption               PIC X(01) value space.
090800200722           03 lc_PaymtTypeCode           PIC X(01) value space.
090900200725           03 lc_GPPInvCode              PIC X(5)  VALUE SPACES.
091000200722      * RFS185171 ENDS
091100060828
091200200415      *RFS185170 - Begin
091300200427           EXEC SQL
091400200427             INCLUDE CPACCGLWBD
091500200427           END-EXEC.
091600200415      *RFS185170 - End
091700060828      *----------------------------------
091800101007       LINKAGE SECTION.
091900060828      *----------------------------------
092000171128      *RFS85276 - Begin
092100101020       01  pi_AccountNum                  PIC  S9(09).
092200101020       01  pi_DateforCalc                 PIC  S9(08).
092300101020       01  pi_MinWithdrawalAmt            PIC  S9(11)V9(02).
092400101015      * =================================
092500101020       PROCEDURE DIVISION USING pi_AccountNum
092600101020                                pi_DateforCalc
092700101020                                pi_MinWithdrawalAmt.
092800171128      *RFS85276 - End
092900101015
093000060828      * ---------------------------------
093100060828       Mainline.
093200060828      * ---------------------------------
093300171128      ********************************
093400171128      * This code should be in every *
093500171128      * SQL program                  *
093600171128      ********************************
093700060828           EXEC SQL
093800060828              WHENEVER SQLERROR CONTINUE
093900060828           END-EXEC.
094000060828
094100060828           PERFORM Initial-Logic.
094200060830           PERFORM Detail-Processing UNTIL lncc_EndOfProcess.
094300060828           PERFORM End-Job.
094400060828
094500060828       Initial-logic.
094600200224      * RFS185169 - Start
094700200224           INITIALIZE Lc_AccountLevelGLWB.
094800200224           ACCEPT lc_MfaSegParm FROM WS-DTAARA-MFASEGPARM
094900200224                                 FOR "MFASEGPARM".
095000200224      * RFS185169 - End
095100060906           SET Ws-Err-Ok TO TRUE.
095200060901           INITIALIZE lc_Variables.
095300171128      *RFS85276 - Begin
095400171128           INITIALIZE pi_MinWithdrawalAmt.
095500171128      *RFS85276 - End
09560010083182787      MOVE ZEROES TO li_AnnuitantAge  li_DateOfBirth
09570010083182787                     lc_EligDefaultStartAge
095800060905           MOVE lncc_No TO lc_EndOfProcess.
095900060828           CALL "RTVPRCDTP" USING lc_ProcessDate.
096000060828           CANCEL "RTVPRCDTP".
096100071126
096200071126      * RFS 40942 Begin
096300071126      * Get Special Module SEGGLWB
096400071126           CALL "RTVMODAUTH"  USING
096500071126                             lc_ModuleSegGLWB   lc_SegGLWB
096600071126      * RFS 40942 End
096700071126
096800100604      * RFS80602 - Begin
096900100604           ACCEPT ln_dateOfQuote FROM DATE YYYYMMDD.
097000100604           MOVE   ln_dateOfQuote TO ln_logSysDate.
097100100604           ACCEPT ln_systime     FROM TIME.
097200100604           MOVE   ln_systime     TO ln_logSysTime.
097300100604      * RFS80602 - End
097400080903      * RFS 52816 Begin
097500080903
097600080903           Set lb_NoGLWAMinimum to True.
097700080903
097800080903           If lc_SegGlwbYes
097900080911              MOVE "ACCCGWDT"    to Pass-Screen-Code
098000080911              MOVE "RIFGLW  "    to Pass-Edit-Code
098100080911              MOVE "A"           to Pass-Level-Code
098200080903
098300080903              CALL "FXSCEDTAL1" USING Pass-Screen-Code
098400080903                                      Pass-Edit-Code
098500080903                                      Pass-Level-Code
098600080903                                      Retn-Edit-Allowed-Flag
098700080903              If Retn-Edit-Allowed
098800080903                 Set lb_GLWAMinimum to True
098900080903              End-If
099000080903           End-If.
099100080903      * RFS 52816 End
099200060828
099300060828           EXEC SQL
099400060828                SELECT COALESCE(Exchange_Rate_Type, " ")
099500060828                  INTO :lc_ExchangeRateType
099600060828                  FROM Mfaprgerp
099700060828                 WHERE Program_Code   = :lncc_ProgramCode
099800060828                   AND Program_Action = :lncc_ProgramAction
099900060828           END-EXEC.
100000060828
100100060828           EXEC SQL
100200060828                SELECT COALESCE(Activity_Date_1, 0)
100300060828                  INTO :li_TradeDate
100400060828                  FROM Mfabusacp
100500060828                 WHERE Business_Day  = :li_AsAtDate
100600060828                   AND Activity_Code = :lncc_ActivityCode
100700060828           END-EXEC.
100800060828
100900210615      *RFS186771 Begins
101000210625
101100210625           INITIALIZE lc_PPPANR
101200210625                      ln_PPPA10
101300210625                      ln_PPPA2X.
101400210625
101500210615           EXEC SQL
101600210615            SELECT COALESCE("Y", "N")
101700210615            INTO :lc_PPPANR
101800210615            FROM MFAFRMATRP FRMATRP
101900210707            WHERE FORM_CODE    =  :lncc_NR4B
102000210707            AND ATTRIBUTE_CD =  :lncc_PPPANRAttr
102100210615            AND EFFECTIVE_DATE <= :li_AsAtDate
102200210615            ORDER BY EFFECTIVE_DATE DESC
102300210615            FETCH FIRST ROW ONLY
102400210615           END-EXEC.
102500210615
102600210706           MOVE SQLSTATE TO Ws-Sql-States.
102700210706
102800210615           EXEC SQL
102900210617           SELECT COALESCE(FORM_ATT_NUM_VAL, 0)
103000210615           INTO :ln_PPPA10
103100210615           FROM MFAFRMATRP FRMATRP
103200210707           WHERE FORM_CODE = :lncc_NR4B
103300210707           AND ATTRIBUTE_CD = :lncc_PPPA10Attr
103400210615           AND EFFECTIVE_DATE <= :li_AsAtDate
103500210615           ORDER BY EFFECTIVE_DATE DESC
103600210615           FETCH FIRST ROW ONLY
103700210615           END-EXEC.
103800210615
103900210706           MOVE SQLSTATE TO Ws-Sql-States.
104000210706
104100210615           EXEC SQL
104200210617           SELECT COALESCE(FORM_ATT_NUM_VAL, 0)
104300210615           INTO :ln_PPPA2X
104400210615           FROM MFAFRMATRP FRMATRP
104500210707           WHERE FORM_CODE = :lncc_NR4B
104600210707           AND ATTRIBUTE_CD = :lncc_PPPA2XAttr
104700210615           AND EFFECTIVE_DATE <= :li_AsAtDate
104800210615           ORDER BY EFFECTIVE_DATE DESC
104900210615           FETCH FIRST ROW ONLY
105000210615           END-EXEC.
105100210615
105200210706           MOVE SQLSTATE TO Ws-Sql-States.
105300210615      *RFS186771- Ends
105400210615
105500171128      *RFS85276 - Begin
105600101015           IF  pi_AccountNum = 0
105700101007               PERFORM Create-Table
105800171128      *RFS89935 - Begin
105900101213           ELSE
106000101213               MOVE pi_DateForCalc TO li_YearEndDate
106100171128      *RFS89935 - End
106200101015           END-IF.
106300210615      *RFS85276 - End
106400210615
106500191007      *RFS184855 - Start
106600191007           CALL "RTVJOBA" USING lc_Job, lc_User, lc_Number.
106700191007           CANCEL "RTVJOBA".
106800191007      *RFS184855 - End
106900191007
107000060828       Create-Table.
107100060828
107200060828           EXEC SQL
107300060829                CREATE TABLE Sbaccrif
107400060905                      (Account_No      FOR COLUMN F0000 NUMERIC (9)
107500060905                                       NOT NULL WITH DEFAULT,
107600060905                       Investor_No     FOR COLUMN F0001 NUMERIC (9)
107700060905                                       NOT NULL WITH DEFAULT,
107800060905                       Acct_Type_Code  FOR COLUMN F0002 CHAR (5)
107900060905                                       NOT NULL WITH DEFAULT,
108000060905                       Dealer_Code     FOR COLUMN F0003 CHAR (4)
108100060905                                       NOT NULL WITH DEFAULT,
108200060905                       Dealer_Rep_Code FOR COLUMN F0004 CHAR (6)
108300060905                                       NOT NULL WITH DEFAULT,
108400060905                       Pay_Type_Code   FOR COLUMN F0005 CHAR (1)
108500060905                                       NOT NULL WITH DEFAULT,
108600060905                       Min_Withdrl_Amt FOR COLUMN F0006 DECIMAL (13,2)
108700060905                                       NOT NULL WITH DEFAULT,
108800060905                       Spec_Pay_Amt    FOR COLUMN F0007 DECIMAL (13,2)
108900060905                                       NOT NULL WITH DEFAULT,
109000060905                       Req_Annual_Pay  FOR COLUMN F0008 DECIMAL (13,2)
109100060905                                       NOT NULL WITH DEFAULT,
109200060905                       Requested_Total FOR COLUMN F0009 DECIMAL (13,2)
109300060905                                       NOT NULL WITH DEFAULT)
109400060828           END-EXEC.
109500060828
109600060920           MOVE SQLSTATE TO Ws-Sql-States.
109700060828           IF NOT lncc_sqlSuccessful AND NOT lncc_sqlTblCrtedNotJrned
109800060906              SET Ws-Err-01 TO TRUE
109900060906              SET lncc_ErrCodeDescr01 TO TRUE
110000060828              PERFORM Set-Internal-Error
110100060828              PERFORM Dsp-Error
110200060828              PERFORM Force-Msgw
110300060828           END-IF.
110400060828
110500200224       Detail-Processing.
110600060914
110700191007      *RFS184855 - Start
110800191007           IF lc_Job = lncc_JOBRIFGEN
110900191007              PERFORM Insert-Acct-RLIF-Prev-Val
111000191007           END-IF.
111100191007      *RFS184855 - End
111200191007
111300060829           PERFORM Declare-Cursor.
111400060829
111500060907           PERFORM Open-Cursor-c_Rrif.
111600060907
111700060907           MOVE lncc_No TO lc_EndOfFetch.
111800060907           IF lncc_CursorOpenedYes
111900060907              PERFORM Fetch-Detail-Records
112000060907                UNTIL lncc_EndOfFetchYes
112100060907           ELSE
112200060907              MOVE lncc_Yes TO lc_EndOfProcess
112300060907           END-IF.
112400060907
112500060907           IF lncc_NotEndOfProcess
112600060907              PERFORM Delete-Acc-Awd-Add-Tax
112700060907           END-IF.
112800060914
112900200811      *RFS185171 - STARTS
113000200811           INITIALIZE SQLSTATE,
113100200811                      li_GLWBaccounttNo
113200200811
113300200811           SET   lncc_GLWBAcctno TO TRUE
113400200811           EXEC SQL
113500200811              SELECT COALESCE(ACCOUNT_NO,0)
113600200811               INTO :li_GLWBaccounttNo
113700200811               FROM MFAACLBENP
113800200811               WHERE ACCOUNT_NO = :li_CurrAccountNo
113900200811           END-EXEC.
114000200811           MOVE SQLSTATE TO lc_sqlStates
114100200811           EVALUATE TRUE
114200200811               WHEN lncc_sqlSuccessful
114300200811                    SET lncc_GLWBAcctYes TO TRUE
114400200811               WHEN OTHER
114500200811                    CONTINUE
114600200811           END-EVALUATE.
114700200811      *RFS185171 - ENDS
114800200811185171     IF lncc_GLWBAcctno
114900060918           IF lncc_NotEndOfProcess
115000060918              PERFORM Delete-Acc-Awd-Inv
115100200811185171     END-IF
115200060918           END-IF.
115300060918
115400200811185171     IF lncc_GLWBAcctno
115500060907           IF lncc_NotEndOfProcess
115600060913              PERFORM Recreate-Rrif-Details
115700200811185171     END-IF
115800060907           END-IF.
115900060914
116000060913           MOVE lncc_Y TO lc_EndOfProcess.
116100060913
116200060829       Declare-Cursor.
116300060829
116400060829           EXEC SQL
116500060829                DECLARE c_Rrif CURSOR FOR
116600060829                 SELECT Acrifp.Account_No,
116700060901                        Acrifp.Payment_Type_Code,
116800060901                        Acrifp.Min_Withdrawal_Amt,
116900060901                        Acrifp.Specified_Payment_Amt,
117000060901                        Acrifp.Requested_Annual_Payment,
117100060905                          Ivrp.Investor_No,
117200060905                        Accntp.Dealer_Code,
117300060905                        Accntp.Dealer_Rep_Code,
117400060905                        Accntp.Account_Type_Code,
117500060901                        COALESCE(Minfcp.Minimum_Payment_Factor, 0),
117600060901                        COALESCE(Pmityp.Payment_Instruction_Type, " "),
117700060905                        COALESCE(Ivrapip.Investor_No, 0),
117800060901                        COALESCE(Ivrapip.Previous_Calculated_Amount, 0),
117900060901                        COALESCE(Ivrapip.Percentage_Increase, 0),
118000060908                        Sqacrif.Acct_Mv
11810008090352816                   , Accntp.Nominee
11820008090352816                   , Acrifp.Calc_Date_Of_Birth
11830008090352816                   , Acrifp.Qualifying_Flag
11840008090352816                   , Ivrp.Date_Of_Birth
118500210615186817                  , Ivrp.Country_code
118600210615186771                  , Acrifp.PPPA_Eligible_Month
118700101101                   FROM Sqaccrif Sqacrif
118800060829                        INNER JOIN Mfaacrifp Acrifp
118900060908                           ON Sqacrif.Account_No = Acrifp.Account_No
119000060829                        INNER JOIN Mfaaccntp Accntp
119100060830                           ON Acrifp.Account_no = Accntp.Account_No
119200060829                        INNER JOIN Mfaacctyp Acctyp
119300060829                           ON Accntp.Account_Type_Code =
119400060830                              Acctyp.Account_type_Code
119500060829                        INNER JOIN Mfaivrp Ivrp
119600060829                           ON Accntp.Investor_No = Ivrp.Investor_No
119700060829                         LEFT OUTER JOIN Mfaivrapip Ivrapip
119800060829                           ON Ivrapip.Investor_No = Ivrp.Investor_No AND
119900060829                              Ivrapip.Account_No = Accntp.Account_No AND
120000060830                              Ivrapip.Plan_Code = :lncc_Rif AND
120100060829                              Ivrapip.Plan_Seq_No = :lnci_0
120200060901                         LEFT OUTER JOIN Mfapmityp Pmityp
120300060901                           ON Pmityp.Account_Type_Code =
120400060901                              Acctyp.Account_Type_Code AND
120500060901                              Pmityp.Payment_Instruction_Type =
120600060901                              Acrifp.Payment_Type_Code
120700060829                         LEFT OUTER JOIN Mfaminfcp Minfcp
120800060829                           ON Minfcp.Account_Type_Code =
120900060829                              Acctyp.Account_Type_Code AND
121000060829                              Minfcp.Qualifying_Flag =
121100060829                              Acrifp.Qualifying_Flag AND
121200060829                              Minfcp.Investor_Age =
121300060829                              CASE WHEN Acrifp.Calc_Date_Of_Birth > 0
121400060829                                   THEN dec(substr(char(:li_YearEndDate)
121500060829                                            ,1,4),4,0) -
121600060829                                        dec(substr(char(
121700060829                                            Acrifp.Calc_Date_Of_Birth)
121800060906                                            ,1,4),4,0)
121900060829                                   ELSE dec(substr(char(:li_YearEndDate)
122000060829                                            ,1,4),4,0) -
122100060829                                        dec(substr(char(
122200060829                                            Ivrp.Date_Of_Birth)
122300060906                                            ,1,4),4,0)
122400060829                                   END
122500060920                  ORDER BY Acrifp.Account_No
122600060830                  FOR FETCH ONLY
122700060829           END-EXEC.
122800060828
122900171128      *RFS85276 - Begin: This code should not be here on a
123000171128      *                  declare cursor commented out
123100101021      *    MOVE SQLSTATE TO Ws-Sql-States.
123200101021      *    IF NOT lncc_sqlSuccessful AND NOT lncc_sqlTblCrtedNotJrned
123300101021      *       SET Ws-Err-02 TO TRUE
123400101021      *       SET lncc_ErrCodeDescr02 TO TRUE
123500101021      *       PERFORM Set-Internal-Error
123600101021      *       PERFORM Dsp-Error
123700101021      *       PERFORM Force-Msgw
123800101021      *    END-IF.
123900060905
124000060830       Open-Cursor-c_Rrif.
124100060830
124200060830           MOVE lncc_No TO lc_CursorOpened.
124300060830
124400060830           EXEC SQL
124500060830                OPEN c_Rrif
124600060830           END-EXEC.
124700060830
124800060828           MOVE SQLSTATE TO Ws-Sql-States.
124900060828           IF NOT lncc_sqlSuccessful
125000060828              SET Ws-Err-03 TO TRUE
125100060828              SET lncc_ErrCodeDescr03 TO TRUE
125200060828              PERFORM Set-Internal-Error
125300060828              PERFORM Dsp-Error
125400060828              PERFORM Force-Msgw
125500060830           ELSE
125600060830              MOVE lncc_Yes TO lc_CursorOpened
125700060828           END-IF.
125800060828
125900060830       Fetch-Detail-Records.
126000060901           INITIALIZE ltb_FetchRec
126100060901                      li_Variables.
126200060830
126300060830           EXEC SQL
126400060830                FETCH c_Rrif FOR :li_MaxRows ROWS
126500060830                 INTO :ltb_AcctArray
126600060830           END-EXEC.
126700060830
126800060830           MOVE SQLSTATE TO Ws-Sql-States.
126900060830           IF lncc_sqlEnd
127000060830              MOVE lncc_Yes TO lc_EndOfFetch
127100060912      *                        lc_EndOfProcess
127200060830           ELSE
127300060830              COMPUTE li_NoOfRowsFetched = SQLERRD(3)
127400060830           END-IF.
127500060830
127600060830           MOVE 0 TO li_Cntr.
127700060830           MOVE lncc_No TO lc_ArrayMaxReached.
127800060830           IF lncc_EndOfFetchNo
127900060830              PERFORM Process-Detail-Records
128000060830                UNTIL lncc_ArrayMaxReachedYes
128100060830           END-IF.
128200060830
128300060830       Process-Detail-Records.
128400060830           COMPUTE li_Cntr = li_Cntr + 1.
128500060901
128600060901           MOVE li_ArrAccountNo(li_Cntr) TO li_CurrAccountNo.
128700060906           MOVE li_ArrInvestorNo(li_Cntr) TO li_CurrInvestorNo.
128800060906           MOVE lc_ArrDealerCode(li_Cntr) TO lc_CurrDealerCode.
128900060906           MOVE lc_ArrDealerRepCode(li_Cntr) TO lc_CurrDealerRepCode.
129000060906           MOVE lc_ArrAccountTypeCode(li_Cntr)
129100060906             TO lc_CurrAccountTypeCode.
129200060901
129300060901           MOVE li_ArrMinWithdrawalAmt(li_Cntr)
129400060901             TO li_PrevMinWithdrawalAmt.
129500060901           MOVE li_ArrAccountMV(li_Cntr) TO li_MarketValue.
129600060901           MOVE li_ArrSpecifiedPayAmt(li_Cntr) TO li_SpecifiedPayAmt.
129700060901           MOVE li_ArrPrevCalculatedAmt(li_Cntr)
129800060901             TO li_PrevCalculatedAmt.
129900060901           MOVE li_ArrPercentIncrease(li_Cntr) TO li_PercentIncrease.
130000060905           MOVE lc_ArrPayInstrType(li_Cntr) TO lc_PayInstruction.
130100060906           MOVE li_ArrMinPayFactor(li_Cntr) TO li_MinPayFactor.
130200060906           MOVE li_ArrReqAnnualPayment(li_Cntr) TO li_ReqAnnualPayment.
13030008090352816      MOVE lc_ArrNominee         (li_Cntr) TO lc_Nominee.
13040008090352816      MOVE ld_ArrCalcDOB         (li_Cntr) TO ld_CalcDOB.
13050008090352816      MOVE lc_ArrQualifyingFlag  (li_Cntr) TO lc_QualifyingFlag.
13060008090352816      MOVE ld_ArrInvestorDOB     (li_Cntr) TO ld_InvestorDOB.
130700210708186771     INITIALIZE li_PPPAMonth
130800210625186771                lc_InvestorCntry.
130900210615186771     MOVE lc_ArrInvestorCntry   (li_Cntr) TO lc_InvestorCntry.
131000211018      *RFS1121738 Begins
131100211018           IF lc_PPPANR = lncc_Y
131200211018              MOVE li_ArrPPPAMonth       (li_Cntr) TO li_PPPAMonth
131300211018           ELSE
131400211018              MOVE 0 TO li_PPPAMonth
131500211018           END-IF.
131600211018186771*    MOVE li_ArrPPPAMonth       (li_Cntr) TO li_PPPAMonth.
131700211018      *RFS1121738 Ends
13180008102752816      If lc_QualifyingFlag = " "
13190008102752816         Move "N" to lc_QualifyingFlag
13200008102752816      End-If.
132100080903
132200060901           COMPUTE li_MinWithdrawalAmt ROUNDED =
132300060901                   li_MarketValue * li_MinPayFactor / 100.
132400071126
132500210615      *RFS186771- Begins
132600210625           INITIALIZE li_PPPA10Amt
132700210625                      li_PPPA2XAmt
132800210625                      li_PPPAAnn
132900210625                      li_PPPAEntitlement.
133000210625
133100210615           IF lc_PPPANR = lncc_Y
133200210707              COMPUTE li_PPPA10Amt ROUNDED = li_MarketValue * ln_PPPA10
133300210707              COMPUTE li_PPPA2XAmt ROUNDED = li_MinWithdrawalAmt *
133400210707                                             ln_PPPA2X
133500210707              IF li_PPPA10Amt > li_PPPA2XAmt
133600210707                 COMPUTE li_PPPAAnn = li_PPPA10Amt
133700210707              ELSE
133800210707                 COMPUTE li_PPPAAnn = li_PPPA2XAmt
133900210707              END-IF
134000210707              IF lc_Job = lncc_JOBRIFGEN
134100210707                 IF lc_InvestorCntry not = lncc_CAN
134200210708                    MOVE lncc_12 TO li_PPPAMonth
134300210707                 ELSE
134400210708                    MOVE 0 TO li_PPPAMonth
134500210707                 END-IF
134600210707              END-IF
134700210615
134800210722              IF li_PPPAMonth = lncc_12
134900210722                 MOVE li_PPPAAnn TO li_PPPAEntitlement
135000210722              END-IF
135100210722
135200210722      *       COMPUTE li_PPPAEntitlement ROUNDED = (li_PPPAAnn / 12) *
135300210722      *                                            li_PPPAMonth
135400210615           END-IF.
135500210615      *RFS186771- Ends
135600171128      *RFS85276 - Begin
135700101015           IF  pi_AccountNum NOT = 0
135800101123               PERFORM Get-YTD-Payout
135900101123               COMPUTE li_MarketValue = li_MarketValue - li_RemainAmt
136000101123               COMPUTE li_MinWithdrawalAmt ROUNDED =
136100101123                       li_MarketValue * li_MinPayFactor / 100
136200101021               COMPUTE pi_MinWithdrawalAmt = li_MinWithdrawalAmt
136300101015               MOVE lncc_Yes  TO lc_ArrayMaxReached
136400101015                                 lc_EndOfFetch
136500101015                                 lc_EndOfProcess
136600101015           ELSE
136700200804      *RFS186053 Start
136800200819               MOVE li_CurrAccountNo   TO  li_InvUpdAccountNo
136900200804               PERFORM SetupAwdInvWdHier
137000200804      *RFS186053 End
137100200831186053         IF lc_InvUpdRC NOT = lncc_X
137200101029               PERFORM Process-Detail-Records2
137300200804186053         PERFORM RemoveAwdInvWdHier
137400200831186053         END-IF
137500200224185169         IF Lb_AccountLevelGLWBYes
137600200224185169            PERFORM Process-Detail-Records-Aclbenp
137700200224185169         END-IF
137800101029           END-IF
137900101029           .
138000101029       Process-Detail-Records2.
138100171128      *RFS85276 - End
138200101015      * RFS 40942 Begin
138300101015
138400101029           INITIALIZE ln_GWAAmount.
138500071126           If lc_SegGLWBYes
13860008090952816         If lb_GLWAMinimum and lc_Nominee = "N"
13870008090952816            Perform Calculate-GLWA-RIF-Minimum
13880008090952816         End-If
138900100531      * RFS80602 - Begin: do proprotional Calculation if eligible
139000100602              If lb_NoGLWAMinimum and lc_Nominee = "N"
139100100602                 Perform Calculate-Contract-RRIF-Min
139200100607                 SET lncc_clcContractRrifMinYes  TO TRUE
139300100607              ELSE
139400100607                 SET lncc_clcContractRrifMinNo   TO TRUE
139500100607              End-If
139600100607
139700100607              IF lncc_clcContractRrifMinNo
139800100607                PERFORM GetGWAAmount
139900100607              END-IF
140000100607      *       PERFORM GetGWAAmount
140100100607      * RFS80602 - End
140200101029           End-If.
140300071126      * RFS 40942 End
140400060901
140500101029           MOVE lc_ArrPayTypeCode(li_Cntr) TO lc_PaymentTypeCode.
140600080124      * RFS 40942 Begin
140700080124           If lncc_PaymentTypeCodeG and ln_GWAAmount = 0
140800080124              Set lncc_PaymentTypeCodeM TO TRUE
140900080124           End-If
141000080124      * RFS 40942 End
141100060901           EVALUATE TRUE
141200060901               WHEN lncc_PaymentTypeCodeA
141300060901                    COMPUTE li_RequestedTotal = li_MinWithdrawalAmt +
141400060901                            li_SpecifiedPayAmt
141500060901               WHEN lncc_PaymentTypeCodeS
141600060901                    COMPUTE li_RequestedTotal = li_SpecifiedPayAmt
141700060901               WHEN lncc_PaymentTypeCodeM
141800060901                    COMPUTE li_RequestedTotal = li_MinWithdrawalAmt
141900060901               WHEN lncc_PaymentTypeCodeP AND li_PrevCalculatedAmt > 0
142000060901                    COMPUTE li_RequestedTotal ROUNDED =
142100060901                            li_PrevCalculatedAmt +
142200060901                           (li_PrevCalculatedAmt * li_PercentIncrease /
142300060901                            100)
142400060906               WHEN lncc_PaymentTypeCodeP AND li_PrevCalculatedAmt = 0
142500060901                    COMPUTE li_RequestedTotal ROUNDED =
142600060901                            li_ReqAnnualPayment +
142700060901                           (li_ReqAnnualPayment * li_PercentIncrease /
142800060901                            100)
142900071126      *RFS 40942 Begin
143000071126               WHEN lncc_PaymentTypeCodeG
143100071126                    COMPUTE li_RequestedTotal = ln_GWAAmount
143200071126      *RFS 40942 End
143300060901               WHEN OTHER
143400060901                    COMPUTE li_RequestedTotal = li_ReqAnnualPayment
143500101029           END-EVALUATE.
143600060901
143700060901           IF li_RequestedTotal < li_MinWithdrawalAmt OR
143800060901             (lncc_PaymentTypeCodeP AND li_ReqAnnualPayment = 0)
143900060901              MOVE li_MinWithdrawalAmt TO li_NewReqAnnualPayment
144000060901           ELSE
144100060901              MOVE li_RequestedTotal TO li_NewReqAnnualPayment
144200101029           END-IF.
144300111004
144400111004100853     If lc_SegGlwbYes
144500111011      * RFS100853.A - Begin
144600111007             MOVE li_CurrAccountNo    TO li_DtlAccountNo
144700140711129478       PERFORM Get-Series-Rules
144800111011      * RFS100853.A - End
144900111004  |          PERFORM CalcGLWBAmt
145000140711  |   * RFS129478 - Start
145100140711  |          PERFORM UpdateAccContractLGWAOnce
145200140711  |   * RFS129478 - End
145300111004  |          If ln_GLWB-Contract-Amt-Total > li_NewReqAnnualPayment
145400111004  |          Compute li_NewReqAnnualPayment
145500111004  |                               = ln_GLWB-Contract-Amt-Total
145600111004  |          End-If
145700111004100853     End-If.
145800060901
145900060901           IF li_NewReqAnnualPayment >= li_MinWithdrawalAmt
146000060901              COMPUTE li_ExcessPayAmt = li_NewReqAnnualPayment -
146100060901                                        li_MinWithdrawalAmt
146200210615      *RFS186771 Begins
146300210615              IF li_PPPAEntitlement > 0
146400210615                 IF li_PPPAEntitlement >= li_NewReqAnnualPayment
146500210615                    COMPUTE li_ExcessPayAmt = 0
146600210615                 ELSE
146700210615                    COMPUTE li_ExcessPayAmt = li_NewReqAnnualPayment -
146800210615                                              li_PPPAEntitlement
146900210615                 END-IF
147000210615              END-IF
147100210615      *RFS186771 Ends
147200060901           ELSE
147300060901              MOVE lnci_0 TO li_ExcessPayAmt
147400101029           END-IF.
147500060901
147600060901           IF li_RequestedTotal < li_MinWithdrawalAmt OR
147700060901              lncc_PaymentTypeCodeBlank OR
147800060901              lncc_PayInstructionBlank
147900060906              PERFORM Create-Exception-Recs
148000101029           END-IF.
148100060905
148200080904
148300101029           PERFORM Update-Mfaacrifp.
148400060905
148500060905      * Update Investor-Account-Plan-Increase (Mfaivrapip),
148600060905      * if record exists.
148700060905           IF li_ArrIvrapipIvrNo(li_Cntr) NOT = 0
148800060905              PERFORM Update-Mfaivrapip
148900101029           END-IF.
149000060905
149100060905           IF li_NoOfRowsFetched = li_Cntr
149200060905              MOVE lncc_Yes TO lc_ArrayMaxReached
149300101029           END-IF.
149400101029
149500140711      *RFS129478-Start
149600140711       Get-Series-Rules.
149700140711           INITIALIZE   lc_GwaCalcRule.
149800140711           EXEC SQL
149900140711           SELECT Coalesce(SUBSTR(SERRLP.Series_Rules, 61, 1)," ")
150000140711           INTO   :lc_GwaCalcRule
150100140711           FROM   MFAACCONP ACCONP
150200140711           INNER JOIN MFASERRLP SERRLP ON
150300140711           ACCONP.INVESTMENT_SERIES = SERRLP.INVESTMENT_SERIES
150400140711           WHERE  ACCOUNT_NO = :li_CurrAccountNo
150500140711           AND    CONTRACT_NO = :li_ContractNo
150600140711           END-EXEC.
150700140711
150800140711       Get-Inv-Series-Rules.
150900140711           INITIALIZE   lc_GwaCalcRule1.
151000200428      *RFS185170 - Start.
151100200428           MOVE li_DtlAccountNo TO pi_ACCGLWBD_AccNo.
151200200428           MOVE lc_DtlInvCode   TO pc_ACCGLWBD_InvCode.
151300200428           MOVE Lc_AccountLevelGLWB TO pc_ACCGLWBD_AccLvlGLWB.
151400200428           PERFORM GetAccGLWBDetails.
151500200428           IF pc_ACCGLWBD_AccLvlGLWB = "Y"
151600200428              IF pc_ACCGLWBD_Series NOT = SPACES
151700200428               EXEC SQL
151800200428               SELECT Coalesce(SUBSTR(SERRLP.Series_Rules, 61, 1)," ")
151900200428               INTO :lc_GwaCalcRule1
152000200428               FROM MFASERRLP
152100200428               WHERE INVESTMENT_SERIES = :pc_ACCGLWBD_Series
152200200428               END-EXEC
152300200428              END-IF
152400200428           ELSE
152500200428      *RFS185170- End.
152600140711           EXEC SQL
152700140711           SELECT Coalesce(SUBSTR(SERRLP.Series_Rules, 61, 1)," ")
152800140711           INTO   :lc_GwaCalcRule1
152900140711           FROM   MFAACCCIP ACCCIP
153000200428           INNER JOIN MFAINVSGP ISG ON
153100200428           ACCCIP.INVESTMENT_CODE = ISG.INVESTMENT_CODE
153200140711           INNER JOIN MFASERRLP SERRLP ON
153300200428           ISG.INVESTMENT_SERIES = SERRLP.INVESTMENT_SERIES
153400140711           WHERE  ACCCIP.ACCOUNT_NO = :li_DtlAccountNo
153500140711           AND    ACCCIP.INVESTMENT_CODE = :lc_DtlInvCode
153600140711           END-EXEC.
153700140711
153800140711      *RFS129478-End
153900060905       Update-Mfaacrifp.
154000060905
154100060906           EXEC SQL
154200060906                UPDATE Mfaacrifp
154300060906                   SET Prev_Withdrawal_Amt = :li_PrevMinWithdrawalAmt,
154400060906                       Market_Value_Date   = :li_TradeDate,
154500060906                       Market_Value        = :li_MarketValue,
154600060906                       Min_Withdrawal_Amt  = :li_MinWithdrawalAmt,
154700060906                       Mid_Year_Taxable    = :lncc_No,
154800060906                       Ytd_Minimum_Paid    = :lnci_0,
154900060906                       Ytd_Total_Paid      = :lnci_0,
155000060906                       Gross_Ytd_Minimum_Paid   = :lnci_0,
155100060906                       Gross_Ytd_Total_Paid     = :lnci_0,
155200060906                       Requested_Annual_Payment =
155300060906                         :li_NewReqAnnualPayment,
15540009052054661                  Excess_Payment_Amt  = :li_ExcessPayAmt,
155500090520 |                     Net_YTD_Excess_Paid            = :lnci_0,
155600090520 |                     Gross_YTD_Excess_Paid          = :lnci_0,
155700090520 |                     YTD_Total_Federal_Tax          = :lnci_0,
155800090520 |                     YTD_Total_Provincial_Tax       = :lnci_0,
155900090520 |                     YTD_Total_Non_Resident_Tax     = :lnci_0,
156000090520 |                     Additional_Requested_Fed_Tax   = :lnci_0,
15610009052054661                  Additional_Requested_Prov_Tax  = :lnci_0
156200210615186771                 ,PPPA_Annual = :li_PPPAAnn
156300210708 |                     ,PPPA_Eligible_Month = :li_PPPAMonth
156400210615 |                     ,PPPA_Entitlement = :li_PPPAEntitlement
156500210615 |                     ,Gross_YTD_PPPA_Paid = :lnci_0
156600210615186771                 ,Net_YTD_PPPA_Paid = :lnci_0
156700060906                 WHERE Account_No = :li_CurrAccountNo
156800060906           END-EXEC.
156900060905
157000060906       Create-Exception-Recs.
157100060905
157200060905           EXEC SQL
157300060905                INSERT INTO Sbaccrif
157400060905                VALUES (:li_CurrAccountNo,
157500060905                        :li_CurrInvestorNo,
157600060905                        :lc_CurrAccountTypeCode,
157700060906                        :lc_CurrDealerCode,
157800060906                        :lc_CurrDealerRepCode,
157900060905                        :lc_PaymentTypeCode,
158000060905                        :li_MinWithdrawalAmt,
158100060905                        :li_SpecifiedPayAmt,
158200060905                        :li_NewReqAnnualPayment,
158300060905                        :li_RequestedTotal)
158400060905           END-EXEC.
158500060905
158600060905           MOVE SQLSTATE TO Ws-Sql-States.
158700060905           IF NOT lncc_sqlSuccessful
158800060906              SET Ws-Err-04 TO TRUE
158900060906              SET lncc_ErrCodeDescr04 TO TRUE
159000060905              PERFORM Set-Internal-Error
159100060905              PERFORM Dsp-Error
159200060905      *       PERFORM Force-Msgw
159300060905           END-IF.
159400060905
159500060905       Update-Mfaivrapip.
159600060905
159700060905           IF li_RequestedTotal < li_MinWithdrawalAmt
159800060905              COMPUTE li_NewPrevCalcAmt = li_RequestedTotal
159900060905           ELSE
160000060905              COMPUTE li_NewPrevCalcAmt = 0
160100060905           END-IF.
160200060905
160300060905           EXEC SQL
160400060908                UPDATE Mfaivrapip
160500060908                   SET Previous_Calculated_Amount = :li_NewPrevCalcAmt
160600060905                 WHERE Investor_No = :li_CurrInvestorNo AND
160700060905                       Account_No  = :li_CurrAccountNo  AND
160800060905                       Plan_Code   = :lncc_Rif          AND
160900060905                       Plan_Seq_No = :lnci_0
161000060905           END-EXEC.
161100060905
161200060905           MOVE SQLSTATE TO Ws-Sql-States.
161300060905           IF NOT lncc_sqlSuccessful
161400060906              SET Ws-Err-05 TO TRUE
161500060906              SET lncc_ErrCodeDescr05 TO TRUE
161600060905              PERFORM Set-Internal-Error
161700060905              PERFORM Dsp-Error
161800060905              PERFORM Force-Msgw
161900060905           END-IF.
162000060905
162100060907       Delete-Acc-Awd-Add-Tax.
162200060907
162300171128      *RFS91599 Replaced 'Implicit Join' by 'Inner Join'
162400060907           EXEC SQL
162500140704      *RFS130316 - Begins *
162600140704      *         DELETE FROM Mfaacwatp Acwatp
162700140704      *          WHERE EXISTS
162800140704      *               (SELECT Sqacrif.Account_No
16290014070491599 *                  FROM Sqaccrif  Sqacrif
163000140704  |   *                  INNER JOIN Mfaaccaip Accaip ON
163100140704  |   *                     Accaip.Account_No = Sqacrif.Account_No
163200140704  |   *                  INNER JOIN Mfaacwatp Acwatp2 ON
163300140704  |   *                       Acwatp2.Account_No  = Accaip.Account_No
163400140704  |   *                   AND Acwatp2.Awd_Seq_No  = Accaip.Awd_Seq_No
163500140704  |   *                   AND Acwatp2.Investment_Code =
163600140704  |   *                       Accaip.Investment_Code
163700140704  |   *                   AND Acwatp2.Contr_Redem_Code =
163800140704  |   *                       Accaip.Contr_Redem_Code
16390014070491599 *                 WHERE Accaip.Awd_Seq_No  = :lnci_1
16400014070492818 *                   AND Acwatp.Account_No  = Accaip.Account_No
164100140704  |   *                   AND Acwatp.Awd_Seq_No  = Accaip.Awd_Seq_No
164200140704  |   *                   AND Acwatp.Investment_Code =
164300140704  |   *                                        Accaip.Investment_Code
164400140704  |   *                   AND Acwatp.Contr_Redem_Code =
16450014070492818 *                                        Accaip.Contr_Redem_Code)
164600140704              DELETE FROM Mfaacwatp Acwatp
164700140704               WHERE Acwatp.Account_no  IN
164800140704                    (SELECT Sqacrif.Account_No
164900140704                       FROM Sqaccrif  Sqacrif
165000140704                       WHERE Acwatp.Account_No = Sqacrif.Account_No)
165100140704               AND   Acwatp.Awd_Seq_No  = :lnci_1
165200140704      *RFS130316 - Ends   *
165300060907           END-EXEC.
165400060907
165500060918           COMPUTE li_Rows = SQLERRD(3).
165600060907           MOVE SQLSTATE TO Ws-Sql-States.
165700060918           IF NOT lncc_sqlSuccessful AND NOT lncc_SqlEnd
165800060907              MOVE lncc_Yes TO lc_EndOfProcess
165900060907              SET Ws-Err-06 TO TRUE
166000060907              SET lncc_ErrCodeDescr06 TO TRUE
166100060907              PERFORM Set-Internal-Error
166200060907              PERFORM Dsp-Error
166300060918      *       PERFORM Force-Msgw
166400060907           END-IF.
166500060918           DISPLAY "Total rows deleted in Mfaacwatp..." li_Rows.
166600060907
166700060907       Delete-Acc-Awd-Inv.
166800060907
166900060907           EXEC SQL
167000060907                DELETE FROM Mfaaccaip Accaip
167100060907                 WHERE Accaip.Account_No IN
167200060908                      (SELECT Sqacrif.Account_No
167300101101                         FROM Sqaccrif Sqacrif)
167400060907                   AND Accaip.Awd_Seq_No = :lnci_1
167500060907           END-EXEC.
167600060907
167700060918           COMPUTE li_Rows = SQLERRD(3).
167800060907           MOVE SQLSTATE TO Ws-Sql-States.
167900060918           IF NOT lncc_sqlSuccessful AND NOT lncc_SqlEnd
168000060907              MOVE lncc_Yes TO lc_EndOfProcess
168100060907              SET Ws-Err-07 TO TRUE
168200060907              SET lncc_ErrCodeDescr07 TO TRUE
168300060907              PERFORM Set-Internal-Error
168400060907              PERFORM Dsp-Error
168500060920           END-IF.
168600060918           DISPLAY "Total rows deleted in Mfaaccaip..." li_Rows.
168700060907
168800060907       Recreate-Rrif-Details.
168900060907
169000060907           PERFORM Declare-Cursor-c_RrifDtls.
169100060907
169200060907           IF lncc_NotEndOfProcess
169300060907              PERFORM Open-Cursor-c_RrifDtls
169400060907           END-IF.
169500060907
169600060907           MOVE lncc_No TO lc_EndOfFetch.
169700060907           IF lncc_Cursor2OpenedYes
169800060907              PERFORM Fetch-Rrif-Inv-Details
169900060907                UNTIL lncc_EndOfFetchYes
170000060907           END-IF.
170100060907
170200060907       Declare-Cursor-c_RrifDtls.
170300060907
170400060907           EXEC SQL
170500060907                DECLARE c_RrifDtls CURSOR FOR
170600060907                SELECT Acrifp.Account_No,
170700060907                       Acrifp.Min_Withdrawal_Amt,
170800060907                       Acrifp.Excess_Payment_Amt,
170900060907                       Acrifp.Federal_Tax_Option,
171000060907                       Acrifp.Split_Option_Code,
171100060912                       Acrifp.Contr_Redem_Code,
171200060920                       Accawp.Start_Date,
171300060907                       Accawp.Hold_Until_Date,
171400060907                       Acrivp.Investment_Code,
171500060907                       Acrivp.Confirm,
171600060907                       Acrivp.Gross_Or_Net,
171700060907                       Acrivp.Annual_Amount,
171800060908                       Acrivp.Waive_Dsc,
171900060908                       Acrivp.Dsc_Waive_Reason_Code,
172000060912                       COALESCE(Frecdp2.Frequency_Code, " "),
172100060912                       COALESCE(Frecdp2.Payments_Per_Annum, 0),
172200060912                       COALESCE(Frecdp.Frequency_Code, " "),
172300060912                       COALESCE(Frecdp.Payments_Per_Annum, 0),
172400060907                       COALESCE(Cntrrp.Contr_Redem_Code_Rule, " "),
172500060908                       COALESCE(AccrtpB.Pay_Tax_On, " "),
172600060907                       COALESCE(AccrtpB.Split_Option_Code, " "),
172700060907                       COALESCE(AccrtpB.Add_Replace_Tax, " "),
172800060907                       COALESCE(AccrtpB.Federal_Tax_Amt, 0),
172900060907                       COALESCE(AccrtpB.Federal_Tax_Percent, 0),
173000060907                       COALESCE(AccrtpB.Provincial_Tax_Amt, 0),
173100060907                       COALESCE(AccrtpB.Provincial_Tax_Percent, 0),
173200060908                       COALESCE(AccrtpE.Pay_Tax_On, " "),
173300060907                       COALESCE(AccrtpE.Split_Option_Code, " "),
173400060907                       COALESCE(AccrtpE.Add_Replace_Tax, " "),
173500060907                       COALESCE(AccrtpE.Federal_Tax_Amt, 0),
173600060907                       COALESCE(AccrtpE.Federal_Tax_Percent, 0),
173700060907                       COALESCE(AccrtpE.Provincial_Tax_Amt, 0),
173800060907                       COALESCE(AccrtpE.Provincial_Tax_Percent, 0),
173900060908                       COALESCE(AccrtpM.Pay_Tax_On, " "),
174000060907                       COALESCE(AccrtpM.Split_Option_Code, " "),
174100060907                       COALESCE(AccrtpM.Add_Replace_Tax, " "),
174200060907                       COALESCE(AccrtpM.Federal_Tax_Amt, 0),
174300060907                       COALESCE(AccrtpM.Federal_Tax_Percent, 0),
174400060907                       COALESCE(AccrtpM.Provincial_Tax_Amt, 0),
174500120828      * RFS112468 - Start
174600120828      *                COALESCE(AccrtpM.Provincial_Tax_Percent, 0)
174700120828                       COALESCE(AccrtpM.Provincial_Tax_Percent, 0),
174800180402      * RFS177195 - Start
174900180402      *                Accawp.Next_Payment_Date
175000180402                       Accawp.Next_Payment_Date,
175100180402                       Accawp.AWD_STATUS
175200210615186771                ,Acrifp.PPPA_Entitlement
175300211007112173                ,Acrifp.REQUESTED_ANNUAL_PAYMENT
175400180402      * RFS177195 - End
175500120828      * RFS112468 - End
175600101101                  FROM Sqaccrif  Sqacrif
175700060907                       JOIN Mfaacrifp Acrifp
175800060908                         ON Acrifp.Account_No = Sqacrif.Account_No
175900060907                       JOIN Mfaaccawp Accawp
176000060907                         ON Accawp.Account_No = Acrifp.Account_No AND
176100060907                            Accawp.Awd_Seq_No = :lnci_1
176200060907                       JOIN Mfaacrivp Acrivp
176300060907                         ON Acrivp.Account_No = Acrifp.Account_No
176400060907                       LEFT OUTER JOIN Mfaaccrtp AccrtpB
176500060907                         ON AccrtpB.Account_No = Acrifp.Account_No AND
176600060907                            AccrtpB.Investment_Code =
176700060907                             Acrivp.Investment_Code AND
176800060907                            AccrtpB.Pay_Tax_On = :lncc_B
176900060907                       LEFT OUTER JOIN Mfaaccrtp AccrtpE
177000060907                         ON AccrtpE.Account_No = Acrifp.Account_No AND
177100060907                            AccrtpE.Investment_Code =
177200060907                             Acrivp.Investment_Code AND
177300060907                            AccrtpE.Pay_Tax_On = :lncc_E
177400060907                       LEFT OUTER JOIN Mfaaccrtp AccrtpM
177500060907                         ON AccrtpM.Account_No = Acrifp.Account_No AND
177600060907                            AccrtpM.Investment_Code =
177700060907                             Acrivp.Investment_Code AND
177800060907                            AccrtpM.Pay_Tax_On = :lncc_M
177900060907                       LEFT OUTER JOIN Mfafrecdp Frecdp
178000060907                         ON Frecdp.Frequency_Code =
178100060907                            Accawp.Frequency_Code
178200060907                       LEFT OUTER JOIN Mfafrecdp Frecdp2
178300060907                         ON Frecdp2.Frequency_Code =
178400060907                             Acrifp.Next_Yr_Freq_Code
178500060907                       LEFT OUTER JOIN Mfacntrrp Cntrrp
178600060907                         ON Cntrrp.Account_Type_Code =
178700060908                            Sqacrif.AccTypeCd AND
178800060907                            Cntrrp.Contr_Redem_Code =
178900060907                            Acrifp.Contr_Redem_Code
179000060921                 ORDER BY Acrivp.Account_No,
179100060907                          Acrivp.Investment_Code
179200060907           END-EXEC.
179300120308      * RFS105383 - Begin: no need to check the satus after cursor
179400120308      *   declare because it does not change the sql status.
179500120308      * ---------------------------------------------------------------
179600120308      *    MOVE SQLSTATE TO Ws-Sql-States.
179700120308      *    IF NOT lncc_sqlSuccessful AND NOT lncc_sqlTblCrtedNotJrned
179800120308      *       MOVE lncc_Yes TO lc_EndOfProcess
179900120308      *       SET Ws-Err-08 TO TRUE
180000120308      *       SET lncc_ErrCodeDescr08 TO TRUE
180100120308      *       PERFORM Set-Internal-Error
180200120308      *       PERFORM Dsp-Error
180300120308      *    END-IF.
180400120308      * ---------------------------------------------------------------
180500120308      * RFS105383 - End
180600060907
180700060907       Open-Cursor-c_RrifDtls.
180800060907           MOVE lncc_No TO lc_Cursor2Opened.
180900060913           INITIALIZE li_Variables.
181000060913
181100060907           EXEC SQL
181200060907                OPEN c_RrifDtls
181300060907           END-EXEC.
181400060907
181500060907           MOVE SQLSTATE TO Ws-Sql-States.
181600060907           IF NOT lncc_sqlSuccessful
181700060907              SET Ws-Err-09 TO TRUE
181800060907              SET lncc_ErrCodeDescr09 TO TRUE
181900060907              PERFORM Set-Internal-Error
182000060907              PERFORM Dsp-Error
182100060907              PERFORM Force-Msgw
182200060907           ELSE
182300060907              MOVE lncc_Yes TO lc_Cursor2Opened
182400060907           END-IF.
182500060907
182600060907       Fetch-Rrif-Inv-Details.
182700060907           EXEC SQL
182800060914                FETCH c_RrifDtls FOR :li_MaxRows ROWS
182900060920                 INTO :ltb_DtlArray
183000060907           END-EXEC.
183100060907
183200060907           MOVE SQLSTATE TO Ws-Sql-States.
183300060907           IF lncc_sqlEnd
183400060907              MOVE lncc_Yes TO lc_EndOfFetch
183500060907                               lc_EndOfProcess
183600060907           ELSE
183700060907              COMPUTE li_NoOfRowsFetched = SQLERRD(3)
183800060907           END-IF.
183900060907
184000060908           MOVE 0 TO li_Cntr li_Ctr1 li_Ctr2.
184100060907           MOVE lncc_No TO lc_ArrayMaxReached.
184200060912           INITIALIZE ltb_DtlRecord lf_MfaaccaipRecord
184300060913                      lf_MfaacwatpRecord.
184400060907           IF lncc_EndOfFetchNo
184500060907              PERFORM Process-Rrif-Inv-Details
184600060907                UNTIL lncc_ArrayMaxReachedYes
184700060907           END-IF.
184800060907
184900060911           IF lncc_ArrayMaxReachedYes
185000060911              PERFORM Insert-Acc-Awd-Inv-Tax
185100060911           END-IF.
185200060911
185300200224       Process-Rrif-Inv-Details.
185400060907           COMPUTE li_Cntr = li_Cntr + 1.
185500060907
185600060912           MOVE ltb_DtlArray(li_Cntr) TO ltb_DtlRecord.
185700200804      *RFS186053 Start
185800200819           MOVE li_DtlAccountNo    TO  li_InvUpdAccountNo.
185900200804           PERFORM SetupAwdInvWdHier.
186000200831           IF lc_InvUpdRC NOT = lncc_X
186100200831              PERFORM Process-Detail-Records3
186200200831              PERFORM RemoveAwdInvWdHier
186300200831           END-IF.
186400200804      *RFS186053 End
186500060907
186600200831186053 Process-Detail-Records3.
186700060913           IF li_DtlAccountNo NOT = li_PrevAccountNo
186800060913              PERFORM Get-Payments-Per-Annum
186900060913           END-IF.
187000060908
187100060908           COMPUTE li_TotalPayout = li_DtlMinWithdrawalAmt +
187200060908                                    li_DtlExcessPayAmt.
187300110624
187400210615      *RFS186771 Begins
187500210615           IF  li_DtlPPPAEntitlment > 0
187600211007112173         COMPUTE li_TotalPayout = li_DtlRequestedAmt
187700210615               IF  li_DtlPPPAEntitlment >= li_TotalPayout
187800210615                   COMPUTE li_DtlMinWithdrawalAmt = li_TotalPayout
187900210615               ELSE
188000210615                   COMPUTE li_DtlMinWithdrawalAmt =
188100210617                                               li_DtlPPPAEntitlment
188200210615               END-IF
188300210615           END-IF.
188400210615      *RFS186771 Ends
188500210615
188600120301      * RFS105383 - Begin
188700120302      *
188800120301      * Check if Multiple contracts are allowed
188900120302      *   If Multiple contracts are allowed then get GLWB Information.
18900012030188038 *    PERFORM GetGLWBInfo.
189100120302
189200120301           PERFORM GetAllowMultContractFlag.
189300120305           PERFORM InitforGLWBSplit.
189400120301           IF lc_AllowMultContFlag = lncc_Yes
189500140711129478       PERFORM Get-Inv-Series-Rules
189600120301             PERFORM GetGLWBInfo
189700120301           END-IF.
189800120301      * RFS105383 - End
189900120301
190000110630           MOVE lnci_0 TO li_PercentMin.
190100110630
19020011063088038      IF NOT lncc_GLWB-Calculation
190300110630
190400060908           IF lc_DtlFedTaxOpt NOT = lncc_X AND
190500060908              lc_DtlFedTaxOpt NOT = "%"
190600060908              IF li_TotalPayout NOT = lnci_0 AND
190700060908                 li_PayPerAnnum NOT = lnci_0
190800060912                 COMPUTE li_PercentMin ROUNDED =
190900060912                         li_DtlMinWithdrawalAmt /
191000060912                         li_TotalPayout / li_PayPerAnnum
191100060908              END-IF
191200060908           ELSE
191300060908              IF li_PayPerAnnum NOT = lnci_0
191400060908                 COMPUTE li_PercentMin ROUNDED = 1 / li_PayPerAnnum
191500060908              END-IF
191600110630           END-IF
191700110624
191800110624
191900110630           MOVE lnci_0 TO li_PercentExc
192000060908           IF li_TotalPayout NOT = lnci_0 AND
192100060908              li_PayPerAnnum NOT = lnci_0
192200060912              COMPUTE li_PercentExc ROUNDED = li_DtlExcessPayAmt /
192300110630                      li_TotalPayout / li_PayPerAnnum
192400110630           END-IF
19250011063088038      END-IF.
192600110630
192700060908           MOVE lncc_Space TO lc_CalcOption.
192800060908           IF li_DtlMinWithdrawalAmt > lnci_0 OR
192900060912              lc_DtlFedTaxOpt = lncc_X OR
193000060920              lc_DtlFedTaxOpt = lncc_Percent    OR
193100060920              li_TotalPayout = lnci_0
193200060908              MOVE lncc_M TO lc_CalcOption
193300060908              PERFORM Create-Acc-Awd-Inv-Min
193400060908           END-IF.
193500060908
193600060911           IF li_DtlExcessPayAmt > lnci_0 AND
193700060912              lc_DtlFedTaxOpt NOT = lncc_X AND
193800060920              lc_DtlFedTaxOpt NOT = lncc_Percent
193900060911              MOVE lncc_E TO lc_CalcOption
194000060911              PERFORM Create-Acc-Awd-Inv-Exc
194100060911           END-IF.
194200060911
194300060920           IF lc_DtlNxtYrFreqCode NOT = lncc_Space AND
194400060920              lc_DtlNxtYrFreqCode NOT = lc_DtlFrequencyCode
194500060914              PERFORM Update-Next-Year-Freq-Code
194600060914           END-IF.
194700060914
194800060908           IF li_NoOfRowsFetched = li_Cntr
194900060908              MOVE lncc_Yes TO lc_ArrayMaxReached
195000060908           END-IF.
195100060908
195200060908       Create-Acc-Awd-Inv-Min.
195300060908
195400060908           PERFORM Setup-Acc-Awd-Inv.
195500060911           IF lc_DtlPayTaxOnM NOT = lncc_Space OR
195600060911              lc_DtlPayTaxOnB NOT = lncc_Space
195700060911              PERFORM Setup-Acc-Awd-Add-Tax
195800060911           END-IF.
195900060908
196000060911       Create-Acc-Awd-Inv-Exc.
196100060911
196200060911           PERFORM Setup-Acc-Awd-Inv.
196300060911           IF lc_DtlPayTaxOnE NOT = lncc_Space OR
196400060911              lc_DtlPayTaxOnB NOT = lncc_Space
196500060911              PERFORM Setup-Acc-Awd-Add-Tax
196600060911           END-IF.
196700060911
196800060908       Setup-Acc-Awd-Inv.
196900200728
197000060908           COMPUTE li_Ctr1 = li_Ctr1 + 1.
197100060908
197200060912           MOVE li_DtlAccountNo TO Account-No
197300060912                                OF lf_MfaaccaipRec(li_Ctr1).
197400060912           MOVE lnci_1          TO Awd-Seq-No
197500060912                                OF lf_MfaaccaipRec(li_Ctr1).
197600060908           MOVE lc_DtlInvCode   TO Investment-Code
197700060912                                OF lf_MfaaccaipRec(li_Ctr1).
197800060908           MOVE lncc_dollar     TO Split-Option-Code
197900060912                                OF lf_MfaaccaipRec(li_Ctr1).
198000060912           MOVE lc_DtlConfirm   TO Confirm OF lf_MfaaccaipRec(li_Ctr1).
198100060908           MOVE lc_DtlGrossOrNet TO Gross-Or-Net
198200060912                                 OF lf_MfaaccaipRec(li_Ctr1).
198300060908
198400060921           IF li_DtlAccountNo NOT = li_PrevAccountNo
198500060911              MOVE lnci_0 TO li_InvCtr
198600060921      *       PERFORM Get-Number-Of-Investments
198700060911           END-IF.
198800060911           COMPUTE li_InvCtr = li_InvCtr + 1.
198900060911
199000060908           MOVE lnci_0 TO li_AwdAmount.
199100060908           IF lncc_CalcOptionMin
19920011063088038        IF lncc_GLWB-Calculation
19930011063088038         MOVE ln_IFPAYAWDAmt TO li_AwdAmount
19940011062488038        ELSE
199500060908              IF lc_DtlSplitOptCode = lncc_Dollar
199600060908                 COMPUTE li_AwdAmount ROUNDED =
199700060908                         li_DtlAnnualAmt * li_PercentMin
199800110624              ELSE
199900060908                 IF lc_DtlSplitOptCode = lncc_Percent AND
200000060908                   (lc_DtlFedTaxOpt = lncc_X OR
200100060908                    lc_DtlFedTaxOpt = lncc_percent)
200200060908                    COMPUTE li_AwdAmount ROUNDED =
200300060908                            li_TotalPayout / li_PayPerAnnum *
200400060914                            li_DtlAnnualAmt / 100
200500060908                 ELSE
200600060914                    IF lc_DtlSplitOptCode = lncc_Percent
200700060908                       COMPUTE li_AwdAmount ROUNDED =
200800060908                               li_DtlMinWithdrawalAmt / li_PayPerAnnum
200900060913                               * li_DtlAnnualAmt / 100
201000060908                    END-IF
201100060908                 END-IF
201200060908              END-IF
20130011063088038        END-IF
201400060920           END-IF.
201500060914
201600060920           IF lncc_CalcOptionExc
20170011063088038        IF lncc_GLWB-Calculation
20180011063088038         MOVE ln_TAXSELAWDAmt TO li_AwdAmount
20190011062488038         ELSE
202000060911              IF lc_DtlSplitOptCode = lncc_Dollar
202100060911                 COMPUTE li_AwdAmount ROUNDED =
202200060911                         li_DtlAnnualAmt * li_PercentExc
202300060911              ELSE
202400060914                 IF lc_DtlSplitOptCode = lncc_Percent
202500060911                    COMPUTE li_AwdAmount ROUNDED = li_DtlExcessPayAmt /
202600060913                            li_PayPerAnnum * li_DtlAnnualAmt / 100
202700060911                 END-IF
202800060911              END-IF
20290011063088038        END-IF
203000060920           END-IF.
203100060920
203200060912           MOVE li_AwdAmount TO Awd-Amount OF lf_MfaaccaipRec(li_Ctr1).
203300060908
203400060908           IF lncc_CalcOptionMin
203500060908              IF lc_DtlFedTaxOpt = lncc_Percent
203600060908                 MOVE lc_DtlContrRedemCode TO Contr-Redem-Code
203700060912                                           OF lf_MfaaccaipRec(li_Ctr1)
203800060908              ELSE
203900060908                 MOVE lncc_Ifpay TO Contr-Redem-Code
204000060912                                 OF lf_MfaaccaipRec(li_Ctr1)
204100060908              END-IF
204200060908           ELSE
204300060908              IF lncc_CalcOptionExc
204400060908                 MOVE lncc_Taxsel TO Contr-Redem-Code
204500060912                                  OF lf_MfaaccaipRec(li_Ctr1)
204600060908              END-IF
204700060908           END-IF.
204800060908
204900060908           IF lc_DtlWaiveDsc = lncc_Y OR
205000060908             (lc_DtlWaiveDsc = lncc_M AND
205100060908              lc_DtlContrRedemCdRule = lncc_27)
205200060912              MOVE lncc_Y TO Waive-Dsc OF lf_MfaaccaipRec(li_Ctr1)
205300060908           ELSE
205400060912              MOVE lncc_N TO Waive-Dsc OF lf_MfaaccaipRec(li_Ctr1)
205500060908           END-IF.
205600060908
205700060908           IF lc_DtlWaiveDsc = lncc_Y
205800060908              MOVE lc_DtlWaiveReasonCode TO Dsc-Waive-Reason-Code
205900060912                                         OF lf_MfaaccaipRec(li_Ctr1)
206000060908           ELSE
206100060908              MOVE lncc_Space TO Dsc-Waive-Reason-Code
206200060912                              OF lf_MfaaccaipRec(li_Ctr1)
206300060908           END-IF.
206400060914           MOVE ZEROES TO Awd-Percent OF lf_MfaaccaipRec(li_Ctr1)
206500060914                          Awd-Units OF lf_MfaaccaipRec(li_Ctr1).
206600060914
206700060921      *Get-Number-Of-Investments.
206800060921      *
206900060921      *    MOVE lnci_0 TO li_TotalInv.
207000060921      *    MOVE li_DtlAccountNo TO li_PrevAccountNo.
207100060921      *
207200060921      *    EXEC SQL
207300060921      *         SELECT COUNT(*)
207400060921      *           INTO :li_TotalInv
207500060921      *           FROM Mfaacrivp
207600060921      *          WHERE Account_No = :li_DtlAccountNo
207700060921      *    END-EXEC.
207800060921      *
207900060921      *    MOVE SQLSTATE TO Ws-Sql-States.
208000060921      *    IF lncc_SqlEnd
208100060921      *       CONTINUE
208200060921      *    END-IF.
208300060911
208400060920       Setup-Acc-Awd-Add-Tax.
208500060921
208600060921           COMPUTE li_Ctr2 = li_Ctr2 + 1.
208700060921
208800060921           IF lc_DtlPayTaxOnB NOT = lncc_Space
208900060921              MOVE li_DtlAccountNo TO Account-No
209000060911                                   OF lf_MfaacwatpRec(li_Ctr2)
209100060911              MOVE lnci_1          TO Awd-Seq-No
209200060911                                   OF lf_MfaacwatpRec(li_Ctr2)
209300060911              MOVE lc_DtlInvCode   TO Investment-Code
209400060912                                   OF lf_MfaacwatpRec(li_Ctr2)
209500060911              MOVE lc_DtlSplitOptCodeRegB TO Split-Option-Code
209600060912                                          OF lf_MfaacwatpRec(li_Ctr2)
209700060911              MOVE lc_DtlAddReplceTaxRegB TO Add-Replace-Tax
209800060912                                          OF lf_MfaacwatpRec(li_Ctr2)
209900060921              MOVE li_DtlFedTaxAmtRegB TO Federal-Tax-Amt
210000060912                                       OF lf_MfaacwatpRec(li_Ctr2)
210100060921              MOVE li_DtlFedTaxPrcntRegB TO Federal-Tax-Percent
210200060912                                       OF lf_MfaacwatpRec(li_Ctr2)
210300060921              MOVE li_DtlProvTaxAmtRegB TO Provincial-Tax-Amt
210400060912                                       OF lf_MfaacwatpRec(li_Ctr2)
210500060921              MOVE li_DtlProvTaxPrcntRegB TO Provincial-Tax-Percent
210600060912                                       OF lf_MfaacwatpRec(li_Ctr2)
210700060911           END-IF.
210800060911
210900060921           IF lc_DtlPayTaxOnM NOT = lncc_Space AND lncc_CalcOptionMin
211000060921              MOVE li_DtlAccountNo TO Account-No
211100060911                                   OF lf_MfaacwatpRec(li_Ctr2)
211200060911              MOVE lnci_1          TO Awd-Seq-No
211300060912                                   OF lf_MfaacwatpRec(li_Ctr2)
211400060911              MOVE lc_DtlInvCode   TO Investment-Code
211500060912                                   OF lf_MfaacwatpRec(li_Ctr2)
211600060911              MOVE lc_DtlSplitOptCodeRegM TO Split-Option-Code
211700060912                                          OF lf_MfaacwatpRec(li_Ctr2)
211800060911              MOVE lc_DtlAddReplceTaxRegM TO Add-Replace-Tax
211900060912                                          OF lf_MfaacwatpRec(li_Ctr2)
212000060921              MOVE li_DtlFedTaxAmtRegM TO Federal-Tax-Amt
212100060912                                       OF lf_MfaacwatpRec(li_Ctr2)
212200060921              MOVE li_DtlFedTaxPrcntRegM TO Federal-Tax-Percent
212300060921                                         OF lf_MfaacwatpRec(li_Ctr2)
212400060921              MOVE li_DtlProvTaxAmtRegM TO Provincial-Tax-Amt
212500060921                                        OF lf_MfaacwatpRec(li_Ctr2)
212600060921              MOVE li_DtlProvTaxPrcntRegM TO Provincial-Tax-Percent
212700060921                                          OF lf_MfaacwatpRec(li_Ctr2)
212800060911           END-IF.
212900060911
213000060921           IF lc_DtlPayTaxOnE NOT = lncc_Space AND lncc_CalcOptionExc
213100060921              MOVE li_DtlAccountNo TO Account-No
213200060912                                   OF lf_MfaacwatpRec(li_Ctr2)
213300060911              MOVE lnci_1          TO Awd-Seq-No
213400060911                                   OF lf_MfaacwatpRec(li_Ctr2)
213500060911              MOVE lc_DtlInvCode   TO Investment-Code
213600060912                                   OF lf_MfaacwatpRec(li_Ctr2)
213700060911              MOVE lc_DtlSplitOptCodeRegE TO Split-Option-Code
213800060912                                          OF lf_MfaacwatpRec(li_Ctr2)
213900060911              MOVE lc_DtlAddReplceTaxRegE TO Add-Replace-Tax
214000060912                                          OF lf_MfaacwatpRec(li_Ctr2)
214100060921              MOVE li_DtlFedTaxAmtRegE TO Federal-Tax-Amt
214200060912                                       OF lf_MfaacwatpRec(li_Ctr2)
214300060921              MOVE li_DtlFedTaxPrcntRegE TO Federal-Tax-Percent
214400060921                                         OF lf_MfaacwatpRec(li_Ctr2)
214500060921              MOVE li_DtlProvTaxAmtRegE TO Provincial-Tax-Amt
214600060921                                        OF lf_MfaacwatpRec(li_Ctr2)
214700060921              MOVE li_DtlProvTaxPrcntRegE TO Provincial-Tax-Percent
214800060921                                          OF lf_MfaacwatpRec(li_Ctr2)
214900060911           END-IF.
215000060911
215100060911           IF lncc_CalcOptionMin
215200060911              IF lc_DtlFedTaxOpt = lncc_Percent
215300060911                 MOVE lc_DtlContrRedemCode TO Contr-Redem-Code
215400060912                                           OF lf_MfaacwatpRec(li_Ctr2)
215500060911              ELSE
215600060911                 MOVE lncc_Ifpay TO Contr-Redem-Code
215700060912                                 OF lf_MfaacwatpRec(li_Ctr2)
215800060911              END-IF
215900060911           ELSE
216000060911              MOVE lncc_Taxsel TO Contr-Redem-Code
216100060912                               OF lf_MfaacwatpRec(li_Ctr2)
216200060911           END-IF.
216300060911
216400060911       Insert-Acc-Awd-Inv-Tax.
216500060911
216600060911           IF li_Ctr1 > 0
216700060911              EXEC SQL
216800060911                   INSERT INTO Mfaaccaip :li_Ctr1 ROWS
216900060911                   VALUES (:Mfaaccaip)
217000060911              END-EXEC
217100060911           END-IF.
217200060914           MOVE SQLSTATE TO Ws-Sql-States.
217300060914           IF NOT lncc_sqlSuccessful
217400060914              SET Ws-Err-10 TO TRUE
217500060914              SET lncc_ErrCodeDescr10 TO TRUE
217600060914              PERFORM Set-Internal-Error
217700060914              PERFORM Dsp-Error
217800060914              PERFORM Force-Msgw
217900060914           END-IF.
218000060911
218100060911           IF li_Ctr2 > 0
218200060911              EXEC SQL
218300060911                   INSERT INTO Mfaacwatp :li_Ctr2 ROWS
218400060911                   VALUES (:Mfaacwatp)
218500060911              END-EXEC
218600060911           END-IF.
218700060914           MOVE SQLSTATE TO Ws-Sql-States.
218800060914           IF NOT lncc_sqlSuccessful
218900060914              SET Ws-Err-11 TO TRUE
219000060914              SET lncc_ErrCodeDescr11 TO TRUE
219100060914              PERFORM Set-Internal-Error
219200060914              PERFORM Dsp-Error
219300060914              PERFORM Force-Msgw
219400060914           END-IF.
219500060911
219600060908       Get-Payments-Per-Annum.
219700060912
219800060912           MOVE li_DtlStartDate TO li_StartDate.
219900060912           MOVE li_AsAtDate TO li_ProcessDate.
220000060912
220100060912           MOVE lncc_N TO lc_NewRrifAcct.
220200060912           IF li_StartDateYr > li_ProcessDateYr AND
220300060912              li_StartDateYr NOT = lnci_0 AND
220400060912              li_ProcessDateYr NOT = lnci_0
220500060912              MOVE lncc_Y TO lc_NewRrifAcct
220600060912           END-IF.
220700060912
220800120307      * RFS105383 - Begin : initialize parameter
220900120307           INITIALIZE pi_PayPerAnnum
221000120307      * RFS105383 - End
221100060921           IF lncc_NewRrifAcctYes OR lc_DtlNxtYrFreqCode = lncc_Variable
221200120229      * RFS105383 - Begin: call FXREMPAY for the Weekly frequency
221300120615      * RFS109551 - Start
221400120615      *     OR lc_DtlFrequencyCode = lncc_WK
221500120615      *     OR lc_DtlNxtYrFreqCode = lncc_WK
221600120615      *     OR lc_DtlFrequencyCode = lncc_BW
221700120615      *     OR lc_DtlNxtYrFreqCode = lncc_BW
221800120615            OR lc_DtlFrequencyCode NOT = SPACES
221900120615            OR lc_DtlNxtYrFreqCode NOT = SPACES
222000120615      * RFS109551 - End
222100120229      * RFS105383 - End
222200060912              IF li_DtlHoldUntilDate NOT = 0 AND
222300060912                 li_DtlHoldUntilDate > li_DtlStartDate AND
222400060912                 li_DtlHoldUntilDate > li_AsAtDate
222500180402177195           AND lc_AWDStatus = "HD"
222600060912                 MOVE li_DtlHoldUntilDate TO pi_StartPayDate
222700060912              ELSE
222800060912                 IF li_DtlStartDate NOT = 0
222900120229      * RFS105383 - Begin: Start Date  greater than current proces date
223000120229                   IF li_DtlStartDate > li_AsAtDate
223100120229      * RFS105383 - End
223200060912                    MOVE li_DtlStartDate TO pi_StartPayDate
223300180402      *RFS177195 STARTS
223400171206      *RFS173685 Begin
223500180402      *             IF YEAR-END = 'Y'
223600180402      *                MOVE lc_AsAtDate  TO lc_Date1
223700180402      *                MOVE li_StartDate TO lc_Date2
223800180402      *                IF li_Date1YYYYMM = li_Date2YYYYMM
223900180402      *                   MOVE 0101 to li_StartDateMmDd
224000180402      *                   MOVE li_StartDate TO pi_StartPayDate
224100180402      *                END-IF
224200180402      *             END-IF
224300171206      *RFS173685 End
224400180402      *RFS177195 ENDS
224500171206
224600120229      * RFS105383 - Begin: set up start date to the next Year
224700120229                   ELSE
224800120828      * RFS112468 - Start
224900120828                     IF li_DtlNextPayDate > 0
225000120828                        MOVE li_DtlNextPayDate To pi_StartPayDate
225100120828                     ELSE
225200120828      *RFS 112468 - End
225300120828                        MOVE li_DtlStartDate TO li_tmpDate
225400120828                        MOVE FUNCTION ADD-DURATION (li_tmpDate YEARS 1)
225500120828                                       TO     pi_StartPayDate
225600120828112468               END-IF
225700120229                   END-IF
225800120229      * RFS105383 - End
225900060912                 END-IF
226000060912              END-IF
226100060912
226200060912              IF lc_DtlNxtYrFreqCode NOT = lncc_Space
226300060912                 MOVE lc_DtlNxtYrFreqCode TO pc_Frequency
226400060912              ELSE
226500060912                 MOVE lc_DtlFrequencyCode TO pc_Frequency
226600060912              END-IF
226700060912
226800060912              IF pc_Frequency = lncc_Variable
226900060912                 MOVE li_DtlAccountNo TO pi_AccountNo
227000060912              ELSE
227100060912                 MOVE ZEROES TO pi_AccountNo
227200060912              END-IF
227300180402
227400180402      *RFS177195 STARTS
227500180402                      IF YEAR-END = 'Y'
227600180402                         MOVE lc_AsAtDate  TO lc_Date1
227700180402                         MOVE pi_StartPayDate TO lc_Date2
227800180402                         IF li_Date1YYYYMM = li_Date2YYYYMM
227900180402                            MOVE 01  to li_Date2MM
228000180402                            MOVE 01  to li_Date2DDA
228100180402                            MOVE lc_Date2a  TO pi_StartPayDate
228200180402                         END-IF
228300180402                      END-IF
228400180402      *RFS177195 ENDS
228500060912
228600060912              MOVE ZEROES to pi_PayPerAnnum
228700060912              CALL "FXREMPAY" USING pi_StartPayDate,
228800060912                                    pi_AccountNo,
228900060912                                    pc_Frequency,
229000060912                                    pi_PayPerAnnum
229100060912           END-IF.
229200060912
229300060921           IF lncc_NewRrifAcctNo AND
229400060921              lc_DtlNxtYrFreqCode NOT = lncc_Variable
229500120307      * RFS105383 - Begin: make sure payment frequency stays same
229600120307      *   as it was calculated by FXREMPAY
229700120307              AND pi_PayPerAnnum   = 0
229800120307      * RFS105383 - End
229900060912              IF li_DtlPayPerAnnumRrif NOT = lnci_0
230000060912                 MOVE li_DtlPayPerAnnumRrif TO pi_PayPerAnnum
230100060912              ELSE
230200060912                 IF li_DtlPayPerAnnumAwd NOT = lnci_0
230300060912                    MOVE li_DtlPayPerAnnumAwd TO pi_PayPerAnnum
230400060912                 END-IF
230500060912              END-IF
230600060912           END-IF
230700060912
230800060908           MOVE pi_PayPerAnnum TO li_PayPerAnnum.
230900060920
231000060914       Update-Next-Year-Freq-Code.
231100060914           EXEC SQL
231200060914                UPDATE Mfaaccawp
231300060914                   SET Frequency_Code = :lc_DtlNxtYrFreqCode
231400060914                 WHERE Account_No = :li_DtlAccountNo AND
231500060914                       Awd_Seq_No = :lnci_1
231600060914           END-EXEC.
231700060914
231800060914           IF NOT lncc_sqlSuccessful
231900060914              SET Ws-Err-12 TO TRUE
232000060914              SET lncc_ErrCodeDescr12 TO TRUE
232100060914              PERFORM Set-Internal-Error
232200060914              PERFORM Dsp-Error
232300060914           END-IF.
232400071126
232500100602      * RFS80602 - Begin: calculate new minimum withdrowal amount
232600100602      * ---------------------------------
232700100602       Calculate-Contract-RRIF-Min.
232800100602      * ---------------------------------
232900100602      * Initialize variables
233000100604           INITIALIZE li_ContractNo
233100100604                      ln_GWAAmount
233200100604                      lc_investmentSeries
233300100811                      li_SaveContractNo
233400100602      * Declare the Cursor
233500100602           EXEC SQL
233600100603            DECLARE lcu_rrifMin CURSOR FOR
233700100604             SELECT acconp.Contract_No,
233800100603                    acconp.Guar_Withdrawal_Amount,
233900200415185170*             invsgp.investment_series
234000200428185170              SERRLP.investment_series
234100140909137082           ,  Lifetime_Withdrawal_amount
234200171128      *RFS85276 - Begin
234300101022      *      FROM Mfaacconp acconp,
234400101022      *           Mfaacccip acccip,
234500101022      *           Mfainvsgp invsgp
234600101022             FROM Mfaacconp acconp
234700200415      *RFS185170 - Begin
234800200415      *           INNER JOIN Mfaacccip acccip
234900200415      *           ON acconp.Account_no    = acccip.Account_no      AND
235000200415      *              acconp.Contract_no   = acccip.Contract_no
235100200415      *           INNER JOIN Mfainvsgp invsgp
235200200415      *           ON acccip.Investment_code = invsgp.Investment_code
235300200428                  LEFT JOIN MFASERRLP SERRLP ON
235400200415                   ACCONP.INVESTMENT_SERIES  = SERRLP.INVESTMENT_SERIES
235500200415      *RFS185170 - End
235600101022      *      WHERE acconp.Account_No      = acccip.Account_No      AND
235700101022      *            acconp.Contract_No     = acccip.Contract_No     AND
235800101022      *            acccip.Investment_Code = invsgp.Investment_Code AND
235900171128      *RFS85276 - End
236000101022             WHERE acconp.Account_No      = :li_CurrAccountNo      AND
236100100602                   acconp.Eligible_Date   <> 0                     AND
236200100602                   acconp.contract_status <> :lncc_Closed
236300100604             ORDER BY acconp.Contract_No
236400100602           END-EXEC.
236500100602
236600100603           EXEC SQL
236700100603             OPEN lcu_rrifMin
236800100603           END-EXEC
236900100603
237000100603           MOVE SQLSTATE TO lc_sqlStates
237100100603           IF lncc_sqlSuccessful
237200100603              SET lncc_rrifMinStart    TO TRUE
237300100603              PERFORM UNTIL lncc_rrifMinEnd
237400100603                EXEC SQL
237500100603                  FETCH NEXT
237600100603                    FROM lcu_rrifMin
237700100604                    INTO :li_ContractNo,
237800100604                         :ln_GWAAmount,
237900100604                         :lc_investmentSeries
238000140909137082                ,  :ln_LWAAmount
238100100603                END-EXEC
238200100603                MOVE SQLSTATE TO lc_sqlStates
238300100603                IF lncc_sqlEnd
238400100603                  SET lncc_rrifMinEnd     TO TRUE
238500100603                ELSE
238600100603                  PERFORM apply-new-rrif-formula
238700100705                  IF lncc_UpdateGWAYes
238800100705                    PERFORM update-account-contract
238900100705                  END-IF
239000140909137082            IF lncc_UpdateLWAYes
239100140909137082              PERFORM update-account-contract-LWA
239200140909137082            END-IF
239300100811                  If li_SaveContractNo not = li_ContractNo
239400100811                     PERFORM create-audit-log
239500100811                     Move li_ContractNo TO li_SaveContractNo
239600100811                  End-If
239700100603                END-IF
239800100603              END-PERFORM
239900100603           ELSE
240000100603              SET Ws-Err-18 TO TRUE
240100100603              SET lncc_ErrCodeDescr18 TO TRUE
240200100603              PERFORM Set-Internal-Error
240300100603              PERFORM Dsp-Error
240400100603           END-IF
240500100603
240600100603           EXEC SQL
240700100603             CLOSE lcu_rrifMin
240800100603           END-EXEC.
240900100603      * ---------------------------------
241000100603       apply-new-rrif-formula.
241100100603      * ---------------------------------
241200100705      * Check, if GWAAmount = 0 then initialize variables and just
241300100705      *   create audit Log in calling Paragraph.
241400100705      *
241500100604             IF ln_GWAAmount = 0.0
241600100604               INITIALIZE ln_contractRRIFMin
241700100603                          ln_OriginalGWA
241800100705               SET lncc_UpdateGWANo              TO TRUE
241900100603             ELSE
242000100705               SET lncc_UpdateGWAYes               TO TRUE
242100100604      * Get Contract Market Value
242200100604               PERFORM get-contract-market-value
242300100604
242400100604      * Do the calculations
242500100604               COMPUTE ln_contractRRIFMin ROUNDED =
242600100604                  li_MinWithdrawalAmt *
242700100604                  ln_segmatvaContractMV / li_MarketValue
242800100604               MOVE ln_GWAAmount     TO ln_OriginalGWA
242900100604
243000100604      * Set up to a greater amount
243100100604               IF ln_OriginalGWA > 0 AND
243200100604                  ln_contractRRIFMin > ln_OriginalGWA
243300100604                   MOVE ln_contractRRIFMin    TO ln_GWAAmount
243400100604               END-IF
243500100603             END-IF.
243600140909
243700140909      * RFS 137082 - begins.
243800140909             IF ln_LWAAmount = 0
243900140909                INITIALIZE ln_OriginalLWA
244000140909                SET lncc_UpdateLWANo              TO TRUE
244100140909             ELSE
244200140909                SET lncc_UpdateLWAYes             TO TRUE
244300140909                MOVE ln_LWAAmount     TO ln_OriginalLWA
244400140909                IF ln_OriginalLWA > 0 AND
244500140909                   ln_contractRRIFMin > ln_OriginalLWA
244600140909                   MOVE ln_contractRRIFMin    TO ln_LWAAmount
244700140909                END-IF
244800140909             END-IF.
244900140909      * RFS 137082 - ends.
245000140909
245100100604      * ---------------------------------
245200100604       get-contract-market-value.
245300100604      * ---------------------------------
245400100604             MOVE ZEROES TO       pi_SegMatValGMV
245500100604                                  pi_CurrMarketValue
245600100604             COMPUTE pi_SegMatValAccountNo  = li_CurrAccountNo
245700100604             COMPUTE pi_SegMatValContractNo = li_ContractNo
245800100604             SET     pb_CurrentMarketValueC TO TRUE
245900100604             COMPUTE pi_TradeDate           = li_AsAtDate
246000131016121426       MOVE  SPACES      TO    pc_SegMatValInvCode
246100100604             CALL "FXSEGMATVA" USING pi_SegMatValAccountNo
246200100604                                     pi_SegMatValContractNo
246300100604                                     pc_SegMatValMode
246400131016121426                               pc_SegMatValInvCode
246500100604                                     pi_SegMatValGMV
246600100604                                     pi_SegMatValGDV
246700100604                                     pi_GMPercent
246800100604                                     pi_GDPercent
246900100604                                     pi_CurrMarketValue
247000100604                                     pi_TradeDate
247100100604                                     pc_SegMatValReturn
247200100604             COMPUTE ln_segmatvaContractMV = pi_CurrMarketValue.
247300100604      * ---------------------------------
247400100604       update-account-contract.
247500100604      * ---------------------------------
247600100604      * Update Account contract, RRIFMin, GWAAmount
247700100604             EXEC SQL
247800100604               UPDATE Mfaacconp
247900100604                 SET Guar_Withdrawal_Amount = :ln_GWAAmount,
248000100604                     GWA_RIF_MINIMUM        = :ln_contractRRIFMin,
248100100604                     Original_GWA           = :ln_OriginalGWA
248200100604               WHERE Account_No  = :li_CurrAccountNo AND
248300100604                     Contract_No = :li_ContractNo
248400100604             END-EXEC.
248500140909
248600140909      * RFS 137082 - begins.
248700140909      * ---------------------------------
248800140909       update-account-contract-LWA.
248900140909      * ---------------------------------
249000140909             EXEC SQL
249100140909               UPDATE Mfaacconp
249200140909                 SET Lifetime_withdrawal_amount = :ln_LWAAmount
249300140909                   , Prev_Guar_withdrawal_amount = : ln_OriginalLWA
249400140909               WHERE Account_No  = :li_CurrAccountNo AND
249500140909                     Contract_No = :li_ContractNo
249600140909             END-EXEC.
249700140909      * RFS 137082 - ends.
249800140909
249900100603      * ---------------------------------
250000100603       create-audit-log.
250100100603      * ---------------------------------
250200100604      * Create audit log
250300100604           PERFORM log-contract-change
250400100604           PERFORM log-investor-change.
250500100604      * ---------------------------------
250600100604       log-contract-change.
250700100604      * ---------------------------------
250800100607      * Log RRIF Minimum
250900100607           MOVE lncc_glwaRRIFMinCategory  TO lc_changeCategory
251000100607           PERFORM upd-contract-change
251100100607
251200100607      * Original GLWA  (RRIF)
251300100607           MOVE lncc_originalGLWACategory TO lc_changeCategory
251400100607           PERFORM upd-contract-change.
251500100607      * ---------------------------------
251600100607       upd-contract-change.
251700100607      * ---------------------------------
251800100604           exec sql
251900100604            insert into mfactclp
252000100604              values (
252100100604                :li_CurrInvestorNo,
252200100604                :li_ContractNo,
252300100604                :ln_logSysDate,
252400100604                :ln_logSysTime,
252500100604                :lncc_AuditUser,
252600100604                :lncc_RIFGEN,
252700100604                :li_CurrAccountNo,
252800100604                :lncc_space,
252900100607                :lc_changeCategory
253000100604                )
253100100604           end-exec.
253200100604      * ---------------------------------
253300100604       log-investor-change.
253400100604      * ---------------------------------
253500100607      * Log RRIF Minimum
253600100607           MOVE lncc_glwaRRIFMinCategory  TO lc_changeCategory
253700100607           PERFORM upd-investor-change
253800100607
253900100607      * Original GLWA  (RRIF)
254000100607           MOVE lncc_originalGLWACategory TO lc_changeCategory
254100100607           PERFORM upd-investor-change.
254200100607      * ---------------------------------
254300100607       upd-investor-change.
254400100607      * ---------------------------------
254500100607      * Log RRIF Minimum
254600100607           exec sql
254700100607            insert into mfaivrclp
254800100607              values (
254900100607                :li_CurrInvestorNo,
255000100607                :ln_logSysDate,
255100100607                :ln_logSysTime,
255200100607                :lncc_AuditUser,
255300100607                :lncc_RIFGEN,
255400100607                :li_CurrAccountNo,
255500100607                :lncc_space,
255600100607                :lc_changeCategory
255700100607                )
255800100607           end-exec.
255900100603      * =================================
256000100602      * RFS80602 - End
256100100603
256200080904      *RFS 52816 Begin
256300080904      *************************************************************
256400080904       Calculate-GLWA-RIF-Minimum.
256500080904      *************************************************************
256600080904
256700080911           Move 0 to ln_TempRRIFMinimum
256800080911
256900080904           Perform GetContractInfo
257000080904
257100080911           If li_ContractNo Not = 0
257200080911              Perform GetAnnuitAge
257300080904
257400080911              If lc_InvestmentSeries = " "
257500080911                 Perform GetFirstInvestment
257600080911              End-If
257700080904
257800080911              If lc_InvestmentSeries Not = lc_LastInvestmentSeries
257900080911                 Perform GetStartAgeDate
258000080911              End-If
258100080904
258200080912             If ld_CalcDOB > 0
258300080912                Move ld_CalcDOB     to ld_TempDOB
258400080912                Compute li_TempAge = li_YearEndDateYYYY
258500080912                                   - ld_TempDOBYYYY
258600080912               Else
258700080912                Move 0              to li_TempAge
258800080912             End-If
258900080912
259000081023              If li_TempAge = 0 or
259100081023                (li_TempAge > 0 and
259200081023                 li_AnnuitantAge = li_TempAge)
25930011010690552            IF li_AnnuitantAge + 1 >= ln_EligDefaultStartAge
259400080912                  Move li_MinWithdrawalAmt to ln_TempRRIFMinimum
25950011010690552            End-If
259600110106              Else
25970008111959997 *           If li_AnnuitantAge  >= ln_EligDefaultStartAge
25980008111959997             If li_AnnuitantAge + 1 >= ln_EligDefaultStartAge
259900080912                     Perform Calculate-Temp-RRIF-Minimum
260000080912                  End-If
260100080911              End-If
260200080911           End-If
260300080909           .
260400080904      * ---------------------------------
260500080904       Get-Spouse-DOB.
260600080904      * ---------------------------------
260700080911            Move 0 to ld_SpouseDOB
260800080904
260900080904            Exec SQL
261000080904               Select coalesce(Date_Of_Birth, 0)
261100080911                 into :ld_SpouseDOB
261200080904                 From MFAIVRSPP
261300080904                Where Investor_No = :li_CurrInvestorNo
261400080904            End-Exec
261500080904
261600080904           MOVE SQLSTATE TO lc_sqlStates.
261700080904           If Not lncc_sqlSuccessful and Not lncc_sqlEnd
261800080904              Continue
261900080904           End-If
262000080904            .
262100080904      * ---------------------------------
262200080904       Calculate-Temp-RRIF-Minimum.
262300080904      * ---------------------------------
262400080904      * --TS 3.d.i ----------------------
262500080904      * ---------------------------------
262600080904           Move 0 to li_TempMinPaymentFactor
262700080904
262800080904           Exec SQL
262900080904             Select coalesce(Minimum_Payment_Factor, 0)
263000080904               Into :li_TempMinPaymentFactor
263100080904               From mfaminfcp
263200080904              Where Account_Type_Code = :lc_CurrAccountTypeCode and
263300080904                    Qualifying_Flag   = :lc_QualifyingFlag      and
263400081023                    Investor_Age      = :li_AnnuitantAge
263500080904              Fetch First row only
263600080904           End-Exec
263700080904
263800080904           MOVE SQLSTATE TO lc_sqlStates.
263900080904           If lncc_sqlSuccessful or lncc_sqlEnd
264000080904              If li_TempMinPaymentFactor > 0
264100080911                 COMPUTE ln_TempRRIFMinimum Rounded =
264200080904                         li_MarketValue * li_TempMinPaymentFactor / 100
264300080904              End-If
264400080904           End-If
264500080904           .
264600080904      * ---------------------------------
264700080904       GetAnnuitAge.
264800080904      * ---------------------------------
264900080904      * --TS 3.a.i ----------------------
265000080904      * ---------------------------------
265100080904
265200080911           If li_ContractNo Not = 0
265300190531      * RFS182324 Starts
265400190531      *       PERFORM GetPrimaryAnnuitant
265500190531      *    End-If
265600080904
265700190531      *    If li_DateOfBirth = 0
265800190531      * RFS182324 Ends
265900080904              PERFORM GetDefaultAnnuitant
266000080904           End-If
266100080904
266200080904           If li_DateOfBirth = 0
266300080904              PERFORM GetNoneDefaultAnnuitant
266400080904           End-If
266500080904
266600080904           IF li_DateOfBirth > 0
266700080904              COMPUTE li_AnnuitantAge = li_YearEndDateYYYY
266800190530                                      - li_DateOfBirthYYYY
266900080904             Else
267000080904              Move 0 to li_AnnuitantAge
267100080904           END-IF
267200080904
267300080904           .
267400190531      * RFS182324 Starts
267500080904      * ---------------------------------
267600190531      *GetPrimaryAnnuitant.
267700080904      * ---------------------------------
267800190531      *    INITIALIZE li_DateOfBirth.
267900190530      *    EXEC SQL
268000190530      *      SELECT COALESCE(Accnnp.Date_Of_Birth, 0)
268100190530      *        INTO :li_DateOfBirth
268200101022      * RFS 85276 - Begin
268300101022      *        FROM Mfaaccanp Accanp,
268400101022      *             Mfaaccnnp Accnnp
268500190530      *        FROM Mfaaccanp Accanp INNER JOIN Mfaaccnnp Accnnp
268600190530      *          ON Accnnp.Account_no = Accanp.Account_no AND
268700190530      *             Accnnp.Annuitant_Seq_No = Accanp.Annuitant_Seq_No
268800190530      *       WHERE Accanp.Account_No = :li_CurrAccountNo       AND
268900190530      *             Accanp.Contract_No = :li_ContractNo         AND
269000190530      *             Accanp.Annuitant_Type_Code = "P"            AND
269100101022      *             Accnnp.Account_No = Accanp.Account_No       AND
269200190530      *             Accnnp.Annuitant_Status <> "C"
269300101022      *             Accnnp.Annuitant_Seq_No = Accanp.Annuitant_Seq_No
269400190530      *       FETCH FIRST ROW ONLY
269500190530      *    END-EXEC.
269600101022      * RFS 85276 - End
269700080904
269800190530      *    MOVE SQLSTATE TO lc_sqlStates.
269900190530      *    IF NOT lncc_sqlSuccessful AND NOT lncc_sqlEnd
270000190530      *       SET ws-err-16 TO TRUE
270100190530      *       SET lncc_ErrCodeDescr16 TO TRUE
270200190530      *       PERFORM Set-Internal-Error
270300190530      *       PERFORM Dsp-Error
270400190530      *    END-IF.
270500190530      *RFS182324 Ends
270600080904
270700080904      * ---------------------------------
270800080904       GetDefaultAnnuitant.
270900080904      * ---------------------------------
271000080904           SET pb_DefaultAnnuit TO TRUE.
271100080904           MOVE li_CurrAccountNo To pi_AnnuitAccountNo.
271200200624182324     MOVE li_ContractNo    To pi_AnnuitContractNo.
271300200624
271400080904           CALL "FXACCANUIT" USING pc_AnnuitFlag,
271500080904                                   pi_AnnuitAccountNo,
271600080904                                   pi_AnnuitContractNo,
271700080904                                   pi_AnnSequenceNo,
271800080904                                   pc_AnnuitantStatus,
271900080904                                   pi_DateOfBirth,
272000080904                                   pc_FirstName,
272100080904                                   pc_LastName,
272200090218      * RFS55414 - Begin: added new returned parameters
272300090218                                   pi_socialInsuranceNo,
272400090218                                   pc_sex,
272500090218      * RFS55414 - End
272600080904                                   pc_AnnuitReturnCode.
272700080904
272800080904           IF pb_RetriveYes
272900080904              MOVE pi_DateOfBirth TO li_DateOfBirth
273000080904           END-IF.
273100080904
273200080904      * ---------------------------------
273300080904       GetNoneDefaultAnnuitant.
273400080904      * ---------------------------------
273500080904           INITIALIZE li_DateOfBirth.
273600080904
273700080904           EXEC SQL
273800080904             SELECT COALESCE(Accnnp.Date_Of_Birth, 0)
273900080904               INTO :li_DateOfBirth
274000080904               FROM Mfaaccnnp Accnnp
274100080904              WHERE Accnnp.Account_No  = :li_CurrAccountNo AND
274200080904                    Accnnp.Default_Flag <> "Y"
274300080904              FETCH FIRST ROW ONLY
274400080904           END-EXEC.
274500080904
274600080904           MOVE SQLSTATE TO lc_sqlStates.
274700080904           IF NOT lncc_sqlSuccessful AND NOT lncc_sqlEnd
274800080911              SET Ws-Err-17 TO TRUE
274900080911              SET lncc_ErrCodeDescr17 TO TRUE
275000080904              PERFORM Set-Internal-Error
275100080904              PERFORM Dsp-Error
275200080904           END-IF.
275300080904
275400080904      * ---------------------------------
275500080904       GetContractInfo.
275600080904      * ---------------------------------
275700080904      * --TS 3.b ------------------------
275800080904      * ---------------------------------
275900080904
276000080904           Initialize li_ContractNo.
276100080904
276200080904           EXEC SQL
276300200415185170*      SELECT invsgp.Investment_Series,
276400200428185170       SELECT SERRLP.Investment_Series,
276500080904                    invsgp.Investment_Code,
276600080904                    acconp.Contract_No
276700080904               INTO :lc_InvestmentSeries,
276800080904                    :lc_InvestmentCode,
276900080904                    :li_ContractNo
277000101022      * RFS 85276 - Begin
277100101022      *        FROM Mfaacconp acconp,
277200101022      *             Mfaacccip acccip,
277300101022      *             Mfainvsgp invsgp
277400101022               FROM Mfaacconp acconp
277500101022                    INNER JOIN Mfaacccip acccip
277600101022                    ON acconp.Account_no  = acccip.Account_no AND
277700101022                       acconp.Contract_no = acccip.Contract_no
277800101022                    INNER JOIN Mfainvsgp invsgp
277900200415                    ON acccip.Investment_code = invsgp.Investment_code
278000200428185170              LEFT JOIN MFASERRLP SERRLP
278100200415185170            ON ACCONP.INVESTMENT_SERIES = SERRLP.INVESTMENT_SERIES
278200101022      *       WHERE acconp.Account_No = acccip.Account_No and
278300101022      *             acconp.Contract_No = acccip.Contract_No and
278400101022      *             acccip.Investment_Code = invsgp.Investment_Code and
278500101022      * RFS 85276 - End
278600101022              WHERE acconp.Account_No = :li_CurrAccountNo          and
278700080904                    acconp.Contract_Status <> "C"                  and
278800080904                    acconp.Eligible_Date   <> 0
278900080904                    FETCH FIRST ROW ONLY
279000080904           END-EXEC.
279100080904
279200080904           MOVE SQLSTATE TO lc_sqlStates.
279300080904           IF not lncc_sqlSuccessful and not lncc_sqlEnd
279400080911              SET ws-err-15 TO TRUE
279500080911              SET lncc_ErrCodeDescr15 TO TRUE
279600080904              PERFORM Set-Internal-Error
279700080904              PERFORM Dsp-Error
279800080904           END-IF.
279900080904
280000080904      * ---------------------------------
280100080904       GetFirstInvestment.
280200080904      * ---------------------------------
280300080904      * --TS 3.c.ii (1-2) ---------------
280400080904      * ---------------------------------
280500080904
280600080904           EXEC SQL
280700200415185170*      SELECT invsgp.Investment_Series,
280800200428185170       SELECT SERRLP.Investment_Series,
280900080904                    invsgp.Investment_Code
281000080904               INTO :lc_InvestmentSeries,
281100080904                    :lc_InvestmentCode
281200101022      * RFS 85276 - Begin
281300101022      *        FROM Mfaacconp acconp,
281400101022      *             Mfaacccip acccip,
281500200415      *             Mfainvsgp invsgp
281600101022               FROM Mfaacconp acconp
281700101022                    INNER JOIN Mfaacccip acccip
281800101022                    ON acconp.Account_no  = acccip.Account_no AND
281900101022                       acconp.Contract_no = acccip.Contract_no
282000101022                    INNER JOIN Mfainvsgp invsgp
282100101022                    ON acccip.Investment_code = invsgp.Investment_code
282200200415185170              INNER JOIN Mfaserrlp serrlp
282300200415185170            ON acconp.investment_series = serrlp.investment_series
282400101022      *       WHERE acconp.Account_No = acccip.Account_No and
282500101022      *             acconp.Contract_No = acccip.Contract_No and
282600101022      *             acccip.Investment_Code = invsgp.Investment_Code and
282700101022      * RFS 85276 - End
282800101022              WHERE acconp.Account_No = :li_CurrAccountNo          and
282900080904                    acconp.Contract_Status <> "C"                  and
283000200415185170              acconp.Eligible_Date   <> 0
283100200415185170*             acconp.Eligible_Date   <> 0                    and
283200200415185170*             invsgp.Investment_Series  <> " "
283300080904                    FETCH FIRST ROW ONLY
283400080904           END-EXEC.
283500080904
283600080904      * ---------------------------------
283700080904       GetStartAgeDate.
283800080904      * ---------------------------------
283900080904      * --TS 3.c.i and ii.3-4  ----------
284000080904      * ---------------------------------
284100200625
284200080904           Move lc_InvestmentCode   to pc-InvestmentCode
284300200625           Move lc_InvestmentSeries to lc_LastInvestmentSeries
284400200625                                       pc-InvestmentSeriesCode
284500200624
284600200415185170*    Call "FXGLWBRULE" using  pc-InvestmentCode
284700200415185170     Call "FXGLWBRULE" using  li_CurrAccountNo
284800200428                                    pc-InvestmentCode
284900200415                                    pc-InvestmentSeriesCode
285000080904                                    pc-InvestmentSeriesFlag
285100080904                                    pc-RFGWRULErules
285200080904                                    pc-RejectionCode
285300080911
285400080911           If pb-ValidRule and
285500080911              pc-EligibleStartDftAge is numeric
285600080911              Move pc-EligibleStartDftAge to lc_EligDefaultStartAge
285700080904             Else
285800080911              Move 0 to ln_EligDefaultStartAge
285900080904           End-If
286000080904           .
286100080904
286200080904
286300080904      *************************************************************
286400080904      *RFS 52816 End
286500080904      *************************************************************
286600080904
286700071126      *RFS 40942 Begin
286800071126      *************************************************************
286900071126       GetGWAAmount.
287000071126      *************************************************************
287100071126
287200080213           INITIALIZE ln_GWAAmount,
287300080213                      li_ContractNo.
287400140909137082     Initialize ln_LWAAmount.
28750010021878327      SET lb_GLWBContratFoundNo TO TRUE.
287600080213
287700071126           EXEC SQL
287800080213             SELECT acconp.Guar_Withdrawal_Amount,
287900080213                    acconp.Contract_No
288000140909137082            , acconp.lifetime_withdrawal_amount
288100080213               INTO :ln_GWAAmount,
288200080213                    :li_ContractNo
288300140909137082            , :ln_LWAAmount
288400101022      * RFS 85276 - Begin
288500101022      *        FROM Mfaacconp acconp,
288600101022      *             Mfaacccip acccip,
288700101022      *             Mfainvsgp invsgp
288800101022               FROM Mfaacconp acconp
288900101022                    INNER JOIN Mfaacccip acccip
289000101022                    ON acconp.Account_no  = acccip.Account_no AND
289100101022                       acconp.Contract_no = acccip.Contract_no
289200101022                    INNER JOIN Mfainvsgp invsgp
289300101022                    ON acccip.Investment_code = invsgp.Investment_code
289400101022      *       WHERE acconp.Account_No = acccip.Account_No and
289500101022      *             acconp.Contract_No = acccip.Contract_No and
289600101022      *             acccip.Investment_Code = invsgp.Investment_Code and
289700101022      * RFS 85276 - End
289800101022              WHERE acconp.Account_No = :li_CurrAccountNo          and
28990008090452816               acconp.Eligible_Date   <> 0
29000008090452816 *             invsgp.Investment_Series <> :lncc_Space
290100071126                    FETCH FIRST ROW ONLY
290200071126           END-EXEC.
290300071126
290400071126           MOVE SQLSTATE TO lc_sqlStates.
290500071126           IF lncc_sqlSuccessful or lncc_sqlEnd
29060010021878327        IF lncc_sqlSuccessful
290700100218  |             SET lb_GLWBContratFoundYes TO TRUE
29080010021878327        End-If
29090008103152816        If lb_GLWAMinimum
29100008103152816            Move ln_GWAAmount to ln_OriginalGWA
291100140909137082           Move ln_LWAAmount to ln_OriginalLWA
29120008103152816            If lc_Nominee = "N"
29130008103152816               Perform Set-GLWA-RIF-Minimum
29140008103152816            End-If
29150008102852816        End-If
29160008091252816 *      If ln_GWAAmount > 0 and ln_GWAAmount < li_MinWithdrawalAmt
29170008091252816        If ln_GWAAmount > 0 and ln_GWAAmount <= li_MinWithdrawalAmt
291800171128      **82787: Set GWA to Curr Min only if it's lower and 'RIFGLW' is OFF
29190010082682787          If lb_NoGLWAMinimum
292000071126                COMPUTE ln_GWAAmount = li_MinWithdrawalAmt
29210010082682787          End-if
29220008021340942 * Defect #19
29230008021340942           PERFORM UpdateForNewGWA
292400071126             Else
29250010021878327 *         IF lncc_sqlSuccessful
29260010021878327           IF lb_GLWBContratFoundYes
29270008091252816              PERFORM UpdateForNewGWA
29280008091252816            Else
29290008091252816              Continue
29300008091252816           End-If
29310008091252816 *         Continue
293200071126             End-If
293300140909      * RFS 137082 - begins.
293400140909             If ln_LWAAmount > 0 and ln_LWAAmount <= li_MinWithdrawalAmt
293500140909                If lb_NoGLWAMinimum
293600140909                   COMPUTE ln_lWAAmount = li_MinWithdrawalAmt
293700140909                End-if
293800141210142721          IF lncc_UpdateLWAYes
293900141210                   PERFORM UpdateForNewLWA
294000141210142721          END-IF
294100140909             Else
294200141210142721*         IF lb_GLWBContratFoundYes
294300141210142721          IF lb_GLWBContratFoundYes  AND lncc_UpdateLWAYes
294400140909                   PERFORM UpdateForNewLWA
294500140909                Else
294600140909                   Continue
294700140909                End-If
294800140909             End-If
294900141210
295000140909      * RFS 137082 - ends.
295100071126           ELSE
295200071126              SET Ws-Err-13 TO TRUE
295300071126              SET lncc_ErrCodeDescr13 TO TRUE
295400071126              PERFORM Set-Internal-Error
295500071126              PERFORM Dsp-Error
295600071126           END-IF.
295700071126
295800071126      *RFS 40942 End
295900060908
296000060828       Set-Internal-Error.
296100060828           MOVE lc_ErrorCodeDescr TO Ws-Sql-Err-Short-Descr.
296200060828           MOVE SQLSTATE TO Ws-Sqlstate.
296300060828
296400060828       End-Job.
296500060830           IF lncc_CursorOpenedYes
296600060830              EXEC SQL
296700060830                   CLOSE c_Rrif
296800060830              END-EXEC
296900060830           END-IF.
297000060830
297100060828           GOBACK.
297200080213
29730008021340942  UpdateForNewGWA.
297400080909
29750008102852816      If li_ContractNo not = 0
29760008102852816         If lb_GLWAMinimum and lc_Nominee = "N"
29770008120459997b
29780008120452816**          If li_AnnuitantAge   < ln_EligDefaultStartAge
29790008120452816            If li_AnnuitantAge + 1  < ln_EligDefaultStartAge
29800008120459997e
29810008102852816               Move 0   to ln_RRIFminimum
29820011010690552                           ln_GWAAmount
29830008102852816               Move "N" to lc_FlagDOB
29840008102852816            End-If
29850008102852816            EXEC SQL
29860008102852816               UPDATE Mfaacconp
29870008102852816                  SET Guar_Withdrawal_Amount = :ln_GWAAmount
29880008102852816                    , GWA_RIF_MINIMUM        = :ln_RRIFminimum
29890008102852816                    , RIF_MIN_DOB_USED       = :lc_FlagDOB
29900008102852816                    , Original_GWA           = :ln_OriginalGWA
29910008102852816                WHERE Account_No = :li_CurrAccountNo AND
29920008102852816                      Contract_No = :li_ContractNo
29930008102852816             END-EXEC
29940008102352816         Else
299500080909
29960008021340942      EXEC SQL
29970008021340942        UPDATE Mfaacconp
29980008021340942           SET Guar_Withdrawal_Amount = :ln_GWAAmount
29990008103152816                    , Original_GWA    = :ln_OriginalGWA
30000008021340942         WHERE Account_No = :li_CurrAccountNo AND
30010008021340942               Contract_No = :li_ContractNo
30020008102352816      END-EXEC
30030008102352816      End-If
30040010090152816 **82787 moved the End-If that was here to the correct place below
30050008102340942 *    END-EXEC   52816
300600080213
30070010090140942      MOVE SQLSTATE TO lc_sqlStates
30080008021340942      IF NOT lncc_sqlSuccessful
30090008021340942         SET Ws-Err-14 TO TRUE
30100008021340942         SET lncc_ErrCodeDescr14 TO TRUE
30110008021340942         PERFORM Set-Internal-Error
30120008021340942         PERFORM Dsp-Error
30130008021340942         PERFORM Force-Msgw
30140010090140942      END-IF
30150010090182787      End-If.
301600060828
301700140909      * RFS 137082 - begins.
301800140909       UpdateForNewLWA.
301900140909           If li_ContractNo not = 0
302000200512              If lb_GLWAMinimum and lc_Nominee = "N"
302100140909                 If li_AnnuitantAge + 1  < ln_EligDefaultStartAge
302200140909                    Move 0   to ln_LWAAmount
302300140909                 End-If
302400140909                 EXEC SQL
302500140909                       UPDATE Mfaacconp
302600140909                       SET Lifetime_Withdrawal_Amount = :ln_LWAAmount
302700140909                         , Prev_Guar_Withdrawal_Amount =
302800140909                                                        :ln_OriginalLWA
302900140909                       WHERE Account_No = :li_CurrAccountNo
303000140909                         AND Contract_No = :li_ContractNo
303100140909                 END-EXEC
303200140909              ELSE
303300140909                 EXEC SQL
303400140909                       UPDATE Mfaacconp
303500140909                       SET Lifetime_Withdrawal_Amount = :ln_LWAAmount
303600140909                         , Prev_Guar_Withdrawal_Amount =
303700140909                                                        :ln_OriginalLWA
303800140909                       WHERE Account_No = :li_CurrAccountNo
303900140909                         AND Contract_No = :li_ContractNo
304000140909                 END-EXEC
304100140909              End-If
304200140909              MOVE SQLSTATE TO lc_sqlStates
304300140909              IF NOT lncc_sqlSuccessful
304400140909                 SET Ws-Err-20 TO TRUE
304500140909                 SET lncc_ErrCodeDescr14 TO TRUE
304600140909                 PERFORM Set-Internal-Error
304700140909                 PERFORM Dsp-Error
304800140909                 PERFORM Force-Msgw
304900140909              END-IF
305000140909           End-If.
305100140909      * RFS 137082 - ends.
305200140909
30530008090952816 *************************************************************
30540008090952816  Set-GLWA-RIF-Minimum.
30550008090952816 *************************************************************
30560008090952816 *
30570008102452816      If ln_TempRRIFMinimum = 0 and li_MinWithdrawalAmt = 0
30580008091152816         Move "N" to lc_FlagDOB
30590008091152816         Move 0   to ln_RRIFminimum
30600008090952816        Else
30610008102452816         If ln_TempRRIFMinimum > 0 and
30620008102852816            (ln_TempRRIFMinimum <= li_MinWithdrawalAmt or
30630008102852816             li_MinWithdrawalAmt = 0)
30640008091152816            Move "P" to lc_FlagDOB
30650008091152816            Move ln_TempRRIFMinimum  to ln_RRIFminimum
30660008090952816           Else
30670008091152816            Move li_MinWithdrawalAmt to ln_RRIFminimum
30680008090952816            Perform Get-Spouse-DOB
30690008091152816            If ld_SpouseDOB > 0 and
30700008091252816               ld_SpouseDOB = ld_CalcDOB
30710008091152816               Move "S" to lc_FlagDOB
30720008090952816              Else
30730008091152816               Move "O" to lc_FlagDOB
30740008090952816            End-If
30750008090952816         End-If
30760008090952816      End-If.
30770008102452816
30780010082682787 *    Move ln_RRIFminimum to li_MinWithdrawalAmt                   52816
307900100901  |   *** Contract GLWA Current YR will be Max(ln_RRIFminimum,ln_OriginalGWA)
308000100901  |        IF ln_RRIFminimum > ln_OriginalGWA
308100100901  |           COMPUTE ln_GWAAmount  = ln_RRIFminimum
308200100901  |        ELSE
308300100901  |           COMPUTE ln_GWAAmount  = ln_OriginalGWA
30840010090182787      END-IF
30850008090952816      .
308600141210      * RFS142721 - Start
308700141210           IF ln_LWAAmount = 0
308800141210              INITIALIZE ln_OriginalLWA
308900141210              SET lncc_UpdateLWANo              TO TRUE
309000141210           ELSE
309100141210              SET lncc_UpdateLWAYes             TO TRUE
309200141210              MOVE ln_LWAAmount     TO ln_OriginalLWA
309300141210           END-IF.
309400141210      *RFS142721 - End
309500140909      * RFS 137082 - begins.
309600140909           IF ln_RRIFminimum > ln_OriginalLWA
309700140909              COMPUTE ln_LWAAmount  = ln_RRIFminimum
309800140909           ELSE
309900140909              COMPUTE ln_LWAAmount  = ln_OriginalLWA
310000140909           END-IF.
310100140909      * RFS 137082 - ends.
310200140909
31030010112385276  Get-YTD-Payout.
310400101123  |        INITIALIZE li_MinAmt li_ExcAmt li_GrossYTD.
310500101123  |
310600101123  |        Exec Sql
310700101123  |             Select Coalesce(Min_withdrawal_amt, 0),
310800101123  |                    Coalesce(Excess_payment_amt, 0),
310900101123  |                    Coalesce(Gross_ytd_total_paid, 0)
311000101123  |               Into :li_MinAmt,
311100101123  |                    :li_ExcAmt,
311200101123  |                    :li_GrossYTD
311300101123  |               From Mfaacrifp
311400101123  |              Where Account_no = :pi_AccountNum
311500101123  |        End-exec.
311600101123  |
311700101123  |        MOVE SQLSTATE TO Ws-Sql-States.
311800101123  |        IF NOT lncc_sqlSuccessful AND NOT lncc_sqlEnd
311900101123  |           CONTINUE
31200010112385276      END-IF.
312100101123
312200101123           COMPUTE li_RemainAmt = li_MinAmt + li_ExcAmt - li_GrossYTD.
312300101123           IF li_RemainAmt < 0
312400101123              COMPUTE li_RemainAmt = 0
312500101123           END-IF.
312600101123
312700110624
312800110624      *Start RFS88038
312900110624      *************************************************************
313000110624       GetGLWBInfo.
313100110624      *************************************************************
313200110624
313300110624            PERFORM CheckGLWBSplitOption.
313400110630            IF  lncc_GLWB-Calculation
313500110630                 PERFORM CalcGLWBAmt
313600110630                 PERFORM GetAWDValues
313700110630                 PERFORM CalcAWDAmtDetail
313800110624            END-IF.
313900110624
314000120305      * RFS105383 - Begin: Create paragraph to intialize vairables
314100120305      * ---------------------------------
314200120305       InitforGLWBSplit.
314300120305      * ---------------------------------
314400120305           Initialize
314500120305                      lncc_GLWBFund
314600120305                      li_NoOfGLWBCont.
314700120305           MOVE lncc_N   TO lc_nonGLWBFundExists
314800120305                            lncc_Is-It-A-GLWB-Calculation,
314900120305                            lc_GLWBOnly
315000120305                            lc_BASEOnly.
315100120305      * RFS105383 - End
315200110627      *************************************************************
315300110627       CheckGLWBSplitOption.
315400110627      *************************************************************
315500120305      * RFS105383 - Begin: move the intitialization to seperate
315600120305      *   paragraph.
315700120305      * ---------------------------------------------------------------
315800120305      *    Initialize lncc_Is-It-A-GLWB-Calculation,
315900120305      *               lncc_OptBlankExists,
316000120305      *               li_NoOfGLWBCont.
316100120305      *
316200120305      * ---------------------------------------------------------------
316300120301      * RFS105383 - End
316400110627           EXEC SQL
316500110630                SELECT :lncc_YES INTO : lncc_Is-It-A-GLWB-Calculation
316600111025100853            FROM MFAACRIVP ACRIVP
316700200415      *RFS185170 - Begin
316800200415  |   *           INNER JOIN MFAINVSGP INVSGP ON
316900200415  |   *            ACRIVP.INVESTMENT_CODE = INVSGP.INVESTMENT_CODE
317000200415  |   *           INNER JOIN MFASERRLP SERRLP ON
317100200415100853*            INVSGP.INVESTMENT_SERIES = SERRLP.INVESTMENT_SERIES
317200200415112498*           INNER JOIN MFAACCONP ACCONP ON
317300200415112498*            SERRLP.INVESTMENT_SERIES = ACCONP.INVESTMENT_SERIES
317400200415                  INNER JOIN MFAACCONP ON
317500200415                   ACRIVP.ACCOUNT_NO = ACCONP.ACCOUNT_NO
317600200415                  INNER JOIN MFASERRLP SERRLP ON
317700200415                   SERRLP.INVESTMENT_SERIES = ACCONP.INVESTMENT_SERIES
317800200415                  LEFT JOIN MFAINVSGP INVSGP ON
317900200415                  INVSGP.INVESTMENT_CODE = ACRIVP.INVESTMENT_CODE AND
318000200415                  INVSGP.INVESTMENT_SERIES = SERRLP.INVESTMENT_SERIES
318100200415                  LEFT JOIN MFAINVSRP INVSRP ON
318200200415                  INVSRP.INVESTMENT_CODE = ACRIVP.INVESTMENT_CODE AND
318300200415                  INVSRP.INVESTMENT_SERIES = SERRLP.INVESTMENT_SERIES
318400200415      *RFS185170 - End
318500120907100853            WHERE ACRIVP.ACCOUNT_NO = :li_DtlAccountNo AND
318600200415      *RFS185170 - Begin
318700200415  |   *                 INVSGP.INVESTMENT_SERIES <> :lncc_Blank  AND
318800200415                         (INVSGP.INVESTMENT_SERIES <> :lncc_Blank OR
318900200415                         INVSRP.INVESTMENT_SERIES <> :lncc_Blank) AND
319000200415      *RFS185170 - End
319100120305      * RFS105383 - Begin: use GLWB not BASE
319200120301      *                 SUBSTR(SERRLP.Series_Rules, 70, 4) = :lncc_BASE
319300120301                        SUBSTR(SERRLP.Series_Rules, 70, 4) = :lncc_GLWB
319400120907112498                  AND ACCONP.ACCOUNT_NO = :li_DtlAccountNo
319500120907  |                     AND ACCONP.AWD_OPTION <> " "
319600120907112498                  AND ACCONP.CONTRACT_STATUS <> :lncc_C
319700120301      * RFS105383 - End
319800111025  |   *           FROM MFAACCONP ACCONP
319900111025  |   *           WHERE ACCONP.ACCOUNT_NO = :li_AccountNo AND
320000111025  |   *                 ACCONP.INVESTMENT_SERIES <> :lncc_Blank  AND
320100111025  |   *                 ACCONP.AWD_OPTION = " " AND
320200111025100853*                 ACCONP.CONTRACT_STATUS <> :lncc_C
320300110630                FETCH FIRST ROW ONLY
320400110627           END-EXEC.
320500110627
320600120305      * RFS105383 - Begin: select non-GLWB: Blank or BASE
320700120301           EXEC SQL
320800120305             SELECT :lncc_YES
320900120305                        INTO :lc_nonGLWBFundExists
321000120301             FROM MFAACRIVP ACRIVP
321100120301               JOIN MFAINVSGP INVSGP ON
321200120301                 ACRIVP.INVESTMENT_CODE     = INVSGP.INVESTMENT_CODE
321300120301               LEFT OUTER JOIN MFASERRLP SERRLP ON
321400200415                   INVSGP.INVESTMENT_SERIES   = SERRLP.INVESTMENT_SERIES
321500120301             WHERE ACRIVP.ACCOUNT_NO        = :li_DtlAccountNo AND
321600200415                   INVSGP.INVESTMENT_SERIES <> :lncc_Blank     AND
321700120305                 ( SUBSTR(SERRLP.Series_Rules, 70, 4) IN
321800120305                               (:lncc_BASE, :lncc_Blank) )
321900120301             FETCH FIRST ROW ONLY
322000120301           END-EXEC.
322100120301      * RFS105383 - End
322200120301
322300110714           If lncc_GLWB-Calculation
322400120301      * RFS105383 - Begin: replace the flag setting with new logic
322500120301             EXEC SQL
322600120301               SELECT :lncc_YES
322700120305                          INTO :lncc_GLWBFund
322800120301               FROM MFAACRIVP ACRIVP
322900120301                 INNER JOIN MFAINVSGP INVSGP ON
323000120301                   ACRIVP.INVESTMENT_CODE   = INVSGP.INVESTMENT_CODE
323100120301                 LEFT OUTER JOIN MFASERRLP SERRLP ON
323200120301                   INVSGP.INVESTMENT_SERIES = SERRLP.INVESTMENT_SERIES
323300200415      *RFS185170 - Begin
323400200415               LEFT JOIN MFAINVSRP INVSRP ON
323500200415                   INVSRP.INVESTMENT_CODE = ACRIVP.INVESTMENT_CODE
323600200415               LEFT JOIN MFASERRLP SERRLP2 ON
323700200415                   SERRLP2.INVESTMENT_SERIES = INVSRP.INVESTMENT_SERIES
323800200415      *RFS185170 - End
323900120301               WHERE ACRIVP.ACCOUNT_NO        = :li_DtlAccountNo AND
324000120301                     ACRIVP.INVESTMENT_CODE   = :lc_DtlInvCode   AND
324100200415185170*              INVSGP.INVESTMENT_SERIES <> :lncc_Blank     AND
324200200415185170*              SUBSTR(SERRLP.Series_Rules, 70, 4) = :lncc_GLWB
324300200428185170              (SUBSTR(SERRLP.Series_Rules, 70, 4) = :lncc_GLWB OR
324400200428185170               SUBSTR(SERRLP2.Series_Rules, 70, 4) = :lncc_GLWB)
324500120301                FETCH FIRST ROW ONLY
324600120301             END-EXEC
324700120301      * ---------------------------------------------------------------
324800120301      *      EXEC SQL
324900120301      *           SELECT :lncc_YES INTO :lncc_OptBlankExists
325000120301      *           FROM MFAACCONP ACCONP
325100120301      *           WHERE ACCONP.ACCOUNT_NO = :li_DtlAccountNo AND
325200120301      *                 ACCONP.INVESTMENT_SERIES <> :lncc_Blank  AND
325300120301      *                 ACCONP.AWD_OPTION = " " AND
325400120301      *                 ACCONP.CONTRACT_STATUS <> :lncc_C
325500120301      *                 FETCH FIRST ROW ONLY
325600120301      *      END-EXEC
325700120301      * ---------------------------------------------------------------
325800120302      *      If lncc_OptBlankExistsNo
325900120302             If lncc_GLWBFundNo
326000120305      * RFS105383 - End
326100110714               EXEC SQL
326200110714                   SELECT count (*) INTO :li_NoOfGLWBCont
326300110714                   FROM MFAACCONP ACCONP
326400110714                   INNER JOIN MFASERRLP SERRLP ON
326500110714                   ACCONP.INVESTMENT_SERIES = SERRLP.INVESTMENT_SERIES
326600110714                   WHERE ACCONP.ACCOUNT_NO = :li_DtlAccountNo AND
326700110714                       ACCONP.INVESTMENT_SERIES <> :lncc_Blank  AND
326800110714                       ACCONP.AWD_OPTION IN ("F", "G", "O", "C") AND
326900110714                       ACCONP.CONTRACT_STATUS <> :lncc_C AND
327000110714                       SUBSTR(SERRLP.SERIES_RULES, 70, 4) = :lncc_GLWB
327100110714                END-EXEC
327200120301
327300111025101037          If li_NoOfGLWBCont = 0
327400111025  |                Move 1    To  li_NoOfGLWBCont
327500111025101037          End-If
327600110714             End-If
327700110714           End-If.
327800120305
327900120302      * RFS105383 - Begin: evaluate the flags
328000120302           IF lncc_Is-It-A-GLWB-Calculation = lncc_Yes AND
328100120302              lc_nonGLWBFundExists          = lncc_No
328200120302             MOVE lncc_Yes         TO lc_GLWBOnly
328300120302           END-IF.
328400120302
328500120302           IF lncc_Is-It-A-GLWB-Calculation = lncc_No  AND
328600120302              lc_nonGLWBFundExists          = lncc_Yes
328700120302             MOVE lncc_Yes         TO lc_BASEOnly
328800120302           END-IF.
328900120302      * RFS105383 - End
329000110624      *************************************************************
329100110624       CalcGLWBAmt.
329200110624      *************************************************************
329300110624
329400110707           INITIALIZE ln_G-Guar-Withdrawal-Amount,
329500110707                      ln_G-Ytd-Guar-Withdrawal-Amt,
329600110707                      ln_G-Ytd-Excess-Withdrawal,
329700110707                      ln_O-Original-Gwa,
329800110707                      ln_O-Ytd-Guar-Withdrawal-Amt,
329900110707                      ln_O-Ytd-Excess-Withdrawal,
330000110707                      ln_C-Gwa-Rif-Minimum,
330100110707                      ln_C-Ytd-Guar-Withdrawal-Amt,
330200110707                      ln_C-Ytd-Excess-Withdrawal,
330300110707                      ln_F-Awd-Amount,
330400110707                      ln_F-Ytd-Guar-Withdrawal-Amt,
330500110707                      ln_F-Ytd-Excess-Withdrawal,
330600110707                      ln_Eligible-Amount,
330700110707                      ln_Deductibles,
330800140711129478*               ln_GLWB-Contract-Amt-Total
330900140711  |                   ln_GLWB-Contract-Amt-Total,
331000140711  |                   ln_L-Lifetime-Withdrawal-Amt ,
331100140711  |                   ln_L-Ytd-Guar-Withdrawal-Amt ,
331200140711  |                   ln_L-Ytd-Excess-Withdrawal
331300140711129478
331400110707
331500110630           EXEC SQL
331600110630                SELECT SUM(ACCONP.GUAR_WITHDRAWAL_AMOUNT),
331700110630                       SUM(ACCONP.YTD_GUAR_WITHDRAWAL_AMOUNT),
331800110630                       SUM(ACCONP.YTD_EXCESS_WITHDRAWAL)
331900110630                INTO   : ln_G-Guar-Withdrawal-Amount,
332000110630                       : ln_G-Ytd-Guar-Withdrawal-Amt,
332100110630                       : ln_G-Ytd-Excess-Withdrawal
332200110630                FROM   MFAACCONP ACCONP
332300110706                WHERE  ACCONP.ACCOUNT_NO  = :li_DtlAccountNo AND
332400140711129478*                ACCONP.AWD_OPTION = :lncc_G
332500140711129478                 (ACCONP.AWD_OPTION = :lncc_G
332600140711129478                 OR (ACCONP.AWD_OPTION = :lncc_L
332700140711129478                     AND :lc_GwaCalcRule = :lnc_Rule5
332800140711129478                     AND :lc_AllowMultContFlag <> :lncc_Yes)
332900140711129478                 OR (ACCONP.AWD_OPTION = :lncc_L
333000140711129478                     AND :lc_GwaCalcRule1 = :lnc_Rule5
333100140711129478                     AND :lc_AllowMultContFlag = :lncc_Yes))
333200110630           END-EXEC.
333300140711      * RFS129478 - START
333400140711           EXEC SQL
333500140711                SELECT SUM(ACCONP.LIFETIME_WITHDRAWAL_AMOUNT),
333600140711                       SUM(ACCONP.YTD_GUAR_WITHDRAWAL_AMOUNT),
333700140711                       SUM(ACCONP.YTD_EXCESS_WITHDRAWAL)
333800140711                INTO   : ln_L-Lifetime-Withdrawal-Amt,
333900140711                       : ln_L-Ytd-Guar-Withdrawal-Amt,
334000140711                       : ln_L-Ytd-Excess-Withdrawal
334100140711                FROM   MFAACCONP ACCONP
334200140711                WHERE  ACCONP.ACCOUNT_NO  = :li_DtlAccountNo AND
334300140711                       ACCONP.AWD_OPTION = :lncc_L
334400140711                       AND ((:lc_GwaCalcRule <> :lnc_Rule5
334500140711                            AND :lc_AllowMultContFlag <> :lncc_Yes)
334600140711                        OR  (:lc_GwaCalcRule1 <> :lnc_Rule5
334700140711                            AND :lc_AllowMultContFlag = :lncc_Yes))
334800140711           END-EXEC.
334900140711      * RFS129478 - END
335000110630      *
335100110630           EXEC SQL
335200110630                SELECT SUM(ACCONP.ORIGINAL_GWA),
335300110630                       SUM(ACCONP.YTD_GUAR_WITHDRAWAL_AMOUNT),
335400110630                       SUM(ACCONP.YTD_EXCESS_WITHDRAWAL)
335500110630                INTO   : ln_O-Original-Gwa,
335600110630                       : ln_O-Ytd-Guar-Withdrawal-Amt,
335700110630                       : ln_O-Ytd-Excess-Withdrawal
335800110630                FROM   MFAACCONP ACCONP
335900110706                WHERE  ACCONP.ACCOUNT_NO  = :li_DtlAccountNo AND
336000110630                       ACCONP.AWD_OPTION = :lncc_O
336100110630           END-EXEC.
336200110630      *
336300110630           EXEC SQL
336400110630                SELECT SUM(ACCONP.GWA_RIF_MINIMUM),
336500110630                       SUM(ACCONP.YTD_GUAR_WITHDRAWAL_AMOUNT),
336600110630                       SUM(ACCONP.YTD_EXCESS_WITHDRAWAL)
336700110630                INTO   : ln_C-Gwa-Rif-Minimum,
336800110630                       : ln_C-Ytd-Guar-Withdrawal-Amt,
336900110630                       : ln_C-Ytd-Excess-Withdrawal
337000110630                FROM   MFAACCONP ACCONP
337100110706                WHERE  ACCONP.ACCOUNT_NO  = :li_DtlAccountNo AND
337200110630                       ACCONP.AWD_OPTION = :lncc_C
337300110630           END-EXEC.
337400110630      *
337500110630           EXEC SQL
337600110630                SELECT SUM(ACCONP.AWD_AMOUNT),
337700110630                       SUM(ACCONP.YTD_GUAR_WITHDRAWAL_AMOUNT),
337800110630                       SUM(ACCONP.YTD_EXCESS_WITHDRAWAL)
337900110630                INTO   : ln_F-Awd-Amount,
338000110630                       : ln_F-Ytd-Guar-Withdrawal-Amt,
338100110630                       : ln_F-Ytd-Excess-Withdrawal
338200110630                FROM   MFAACCONP ACCONP
338300110706                WHERE  ACCONP.ACCOUNT_NO  = :li_DtlAccountNo AND
338400110630                       ACCONP.AWD_OPTION = :lncc_F
338500110630           END-EXEC.
338600110630      *
338700110630           COMPUTE ln_Eligible-Amount = ln_G-Guar-Withdrawal-Amount +
338800110630                   ln_O-Original-Gwa + ln_C-Gwa-Rif-Minimum +
338900110630                   ln_F-Awd-Amount
339000140711129478           + ln_L-Lifetime-Withdrawal-Amt
339100110630
339200110630           COMPUTE ln_Deductibles = ln_G-Ytd-Guar-Withdrawal-Amt +
339300110630                                    ln_O-Ytd-Guar-Withdrawal-Amt +
339400110630                                    ln_C-Ytd-Guar-Withdrawal-Amt +
339500110630                                    ln_F-Ytd-Guar-Withdrawal-Amt +
339600110630                                    ln_G-Ytd-Excess-Withdrawal   +
339700110630                                    ln_O-Ytd-Excess-Withdrawal   +
339800110630                                    ln_C-Ytd-Excess-Withdrawal   +
339900110630                                    ln_F-Ytd-Excess-Withdrawal
340000140711129478                            + ln_L-Ytd-Guar-Withdrawal-Amt
340100140711129478                            + ln_L-Ytd-Excess-Withdrawal
340200110630
340300110630           COMPUTE ln_GLWB-Contract-Amt-Total = ln_Eligible-Amount -
340400110630                                                ln_Deductibles.
340500110630
340600110627
340700110627      *************************************************************
340800110627        GetAWDValues.
340900110627      *************************************************************
341000110627
341100110630           INITIALIZE lc_Awd-Option,
341200110630                      ln_Guar-Withdrawal-Amount,
341300110630                      ln_Original-GWA,
341400110630                      ln_GWA-RIF-Minimum,
341500110630                      ln_AWD-Amount,
341600110630                      ln_YTD-Guar-Withdrawal-Amount,
341700110630                      ln_YTD-Excess-Withdrawal.
341800110627
341900110627           EXEC SQL
342000110630                SELECT ACCONP.AWD_Option,
342100110630                       ACCONP.Guar_Withdrawal_Amount,
342200110630                       ACCONP.Original_GWA,
342300110630                       ACCONP.GWA_RIF_Minimum,
342400110630                       ACCONP.AWD_Amount,
342500110630                       ACCONP.YTD_Guar_Withdrawal_Amount,
342600140711129478*                ACCONP.YTD_Excess_Withdrawal
342700140711  |                    ACCONP.YTD_Excess_Withdrawal ,
342800140711129478                 ACCONP.Lifetime_Withdrawal_Amount
342900110630                INTO   :lc_Awd-Option,
343000110630                       :ln_Guar-Withdrawal-Amount,
343100110630                       :ln_Original-GWA,
343200110630                       :ln_GWA-RIF-Minimum,
343300110630                       :ln_AWD-Amount,
343400140711                       :ln_YTD-Guar-Withdrawal-Amount,
343500140711129478*                :ln_YTD-Excess-Withdrawal
343600140711  |                    :ln_YTD-Excess-Withdrawal ,
343700140711129478                 :ln_Lifetime-Withdrawal-Amt
343800110630                FROM   MFAACCONP ACCONP
343900110630                INNER JOIN MFAACCCIP ACCCIP
344000110630                      ON ACCCIP.Account_No  = ACCONP.Account_No AND
344100110630                         ACCCIP.Contract_No = ACCONP.Contract_No
344200110630                WHERE ACCCIP.Account_No     = :li_DtlAccountNo AND
344300110630                      ACCCIP.Investment_code = :lc_DtlInvCode
344400110627           END-EXEC.
344500110627
344600110630      *************************************************************
344700110630        CalcAWDAmtDetail.
344800110630      *************************************************************
344900110630
345000110707           INITIALIZE ln_AmtRemain,
345100110714                      ln_RemainingPerCont,
345200110714                      ln_ExcessAmt,
345300110714                      ln_IFPAYAWDAmt,
345400110707                      ln_TAXSELAWDAmt.
345500110630
345600120302      * RFS105383 - Begin
345700120302      *    COMPUTE ln_AWDSplitRatio = li_DtlMinWithdrawalAmt /
345800120302      *                               li_TotalPayout
345900110630
346000120302      *
346100120302           COMPUTE ln_GLWBAmtToBeTaken = ln_GLWB-Contract-Amt-Total
346200120524109552     If lc_GLWBOnly = lncc_Yes
346300120524109552       COMPUTE ln_totalPaid = ln_GLWBAmtToBeTaken
346400120524109552     Else
346500120524             COMPUTE ln_totalPaid = FUNCTION
346600120524                 MAX(li_totalPayout ln_GLWBAmtToBeTaken)
346700120523109552     End-If.
346800120302
346900120302      * Change the way Ratio is calculated
347000120302
347100120302           IF ln_totalPaid > li_DtlMinWithdrawalAmt
347200120302             COMPUTE ln_AWDSplitRatio =
347300120302                          li_DtlMinWithdrawalAmt / ln_totalPaid
347400120302           ELSE
347500120302             COMPUTE ln_AWDSplitRatio = 1
347600120523           END-IF.
347700120302      *
347800120302      *    If lncc_OptBlankExistsNo
347900120302           If lc_nonGLWBFundExists = lncc_Y
348000120302      * RFS105383 - End
348100110714                 COMPUTE ln_ExcessAmt = li_TotalPayout -
348200110714                                        ln_GLWB-Contract-Amt-Total
348300110719                 If ln_ExcessAmt > 0
348400110719                   COMPUTE ln_RemainingPerCont Rounded =
348500110719                           ln_ExcessAmt / li_NoOfGLWBCont
348600110719                 Else
348700110719                   Move 0 to ln_RemainingPerCont
348800110719                 End-If
348900110714           End-If.
349000110714
349100110630           IF  lc_Awd-Option = lncc_G
349200140711129478     OR (lc_Awd-Option = lncc_L AND lc_GwaCalcRule1 = lnc_Rule5)
349300110714                COMPUTE ln_AmtRemain = ln_Guar-Withdrawal-Amount +
349400110714                                       ln_RemainingPerCont  -
349500110630                                       ln_YTD-Guar-Withdrawal-Amount -
349600120302                                       ln_YTD-Excess-Withdrawal
349700110630                PERFORM CalcAWDandTax
349800110630           END-IF.
349900110630
350000110630           IF  lc_Awd-Option = lncc_C
350100110714                COMPUTE ln_AmtRemain = ln_GWA-RIF-Minimum   +
350200110714                                       ln_RemainingPerCont  -
350300110630                                       ln_YTD-Guar-Withdrawal-Amount -
350400110630                                       ln_YTD-Excess-Withdrawal
350500110630                PERFORM CalcAWDandTax
350600110630           END-IF.
350700110630
350800110630           IF  lc_Awd-Option = lncc_O
350900110714                COMPUTE ln_AmtRemain = ln_Original-GWA      +
351000110714                                       ln_RemainingPerCont  -
351100110630                                       ln_YTD-Guar-Withdrawal-Amount -
351200110630                                       ln_YTD-Excess-Withdrawal
351300110630                PERFORM CalcAWDandTax
351400110630           END-IF.
351500110630
351600140725           IF  lc_Awd-Option = lncc_F
351700140725                COMPUTE ln_AmtRemain = ln_AWD-Amount        +
351800140725                                       ln_RemainingPerCont  -
351900140725                                       ln_YTD-Guar-Withdrawal-Amount -
352000140725                                       ln_YTD-Excess-Withdrawal
352100140725                PERFORM CalcAWDandTax
352200140725           END-IF.
352300140725
352400140711      *RFS129478 - Start
352500140711           IF  lc_Awd-Option = lncc_L
352600140711           AND lc_GwaCalcRule NOT= lnc_Rule5
352700140711                COMPUTE ln_AmtRemain = ln_Lifetime-Withdrawal-Amt    +
352800140711                                       ln_RemainingPerCont           -
352900140711                                       ln_YTD-Guar-Withdrawal-Amount -
353000140711                                       ln_YTD-Excess-Withdrawal
353100140711                PERFORM CalcAWDandTax
353200140711           END-IF.
353300140711      *RFS129478 - End
353400110630
353500140401
353600110804           IF  lc_Awd-Option = lncc_Space
353700110804               and li_TotalPayout > ln_GLWB-Contract-Amt-Total
353800110711                COMPUTE ln_AmtRemain = li_TotalPayout                -
353900110630                                       ln_GLWB-Contract-Amt-Total
354000110630                PERFORM CalcAWDandTax
354100110630           END-IF.
354200110630
354300140725           PERFORM UpdateAccContractLGWA.
354400110630
354500110630      *************************************************************
354600110630        CalcAWDandTax.
354700110630      *************************************************************
354800110630
354900120301      * RFS105383 - Begin
355000120302      * Set Remaining Amount
355100140711      * RFS129478 - Start
355200120518109552*    IF lc_Awd-Option = lncc_G OR lncc_O OR lncc_C
355300120518109552     IF lc_Awd-Option = lncc_G OR lncc_O OR lncc_C OR lncc_F
355400140711              OR lncc_L
355500140711      * RFS129478 - END
355600120302             IF lc_GLWBOnly = Lncc_Yes   AND
355700120302                ln_GLWBAmtToBeTaken < li_DtlMinWithdrawalAmt
355800120302               COMPUTE ln_AmtRemain = li_DtlMinWithdrawalAmt
355900120302             END-IF
356000120302           END-IF
356100120302      *
356200120301           COMPUTE ln_PeriodicAmt ROUNDED =
356300120301               ln_AmtRemain * li_DtlAnnualAmt / li_PayPerAnnum / 100
356400120301
356500120301           COMPUTE ln_IFPAYAWDAmt  ROUNDED =
356600120301               ln_AWDSplitRatio * ln_PeriodicAmt
356700120301
356800120301           COMPUTE ln_TAXSELAWDAmt ROUNDED =
356900120301               ln_PeriodicAmt - ln_IFPAYAWDAmt.
357000120301      * ---------------------------------------------------------------
357100120301      *    COMPUTE ln_IFPAYAWDAmt  ROUNDED =
357200120301      *                              ln_AWDSplitRatio *
357300120301      *                              ln_AmtRemain     *
357400120301      *                              (li_DtlAnnualAmt  / 100) /
357500120301      *                              Pi_PayPerAnnum
357600120301      *
357700120301      *    COMPUTE ln_TAXSELAWDAmt ROUNDED =
357800120301      *                              ((ln_AmtRemain *
357900120301      *                                (li_DtlAnnualAmt  / 100)) -
358000120301      *                                (ln_IFPAYAWDAmt *
358100120301      *                                 Pi_PayPerAnnum) )/
358200120301      *                                 Pi_PayPerAnnum.
358300120301      * ---------------------------------------------------------------
358400120301      * RFS105383 - End
358500110627
358600110711           If ln_IFPAYAWDAmt < 0
358700110711               COMPUTE ln_IFPAYAWDAmt = 0
358800110711           End-If
358900110711
359000110711           If ln_TAXSELAWDAmt < 0
359100110711               COMPUTE ln_TAXSELAWDAmt = 0
359200110711           End-If
359300110711
359400110630      *End RFS88038
359500120301
359600120305      * RFS105383 - Begin: Set allow multi-contract
359700120302      *   GLWB Flag.
359800120229      * ---------------------------------
359900120229       GetAllowMultContractFlag.
360000120229      * ---------------------------------
360100120229            INITIALIZE lc_AllowMultContFlag
360200200427      *RFS185170 -Begin
360300200428            MOVE li_DtlAccountNo To pi_ACCGLWBD_AccNo.
360400200428            INITIALIZE pc_ACCGLWBD_InvCode.
360500200428            MOVE Lc_AccountLevelGLWB TO pc_ACCGLWBD_AccLvlGLWB.
360600200428            PERFORM GetAccGLWBDetails.
360700200428            IF pc_ACCGLWBD_AccLvlGLWB = "Y"
360800200428             IF pc_ACCGLWBD_Series NOT = SPACES
360900200427               EXEC SQL
361000200427               SELECT SUBSTR(SERRLP.SERIES_RULES, 1, 1)
361100200427               INTO :lc_AllowMultContFlag
361200200427               FROM MFASERRLP
361300200427               WHERE INVESTMENT_SERIES = :pc_ACCGLWBD_Series
361400200427               END-EXEC
361500200428             END-IF
361600200428            ELSE
361700200427      *RFS185170 - End
361800200427              EXEC SQL
361900120301              SELECT SUBSTR(SERRLP.SERIES_RULES, 1, 1)
362000120301                              INTO :lc_AllowMultContFlag
362100120301              FROM MFAACRIVP ACRIVP
362200120301                JOIN MFAINVSGP INVSGP ON
362300120301                  ACRIVP.INVESTMENT_CODE   = INVSGP.INVESTMENT_CODE
362400120301                JOIN MFASERRLP SERRLP ON
362500120301                  INVSGP.INVESTMENT_SERIES = SERRLP.INVESTMENT_SERIES
362600120301              WHERE
362700120305                ACRIVP.ACCOUNT_NO          = :li_DtlAccountNo   AND
362800120305                INVSGP.INVESTMENT_SERIES  <> :lncc_Blank        AND
362900120301                SUBSTR(SERRLP.Series_Rules, 70, 4) = :lncc_GLWB
363000120301              FETCH FIRST ROW ONLY
363100200427              END-EXEC
363200200427185170     END-IF.
363300120229      * RFS105383 - End
363400140711      *RFS129478 - Start
363500140711
363600140711       UpdateAccContractLGWA.
363700140711
363800140711           EXEC SQL
363900140711               UPDATE MFAACCONP
364000140711               SET LGWA_IND      = :lc_Awd-Option
364100140711               WHERE Account_No  = :li_DtlAccountNo
364200140711           END-EXEC.
364300140711
364400140711           IF NOT lncc_sqlSuccessful
364500140711              SET Ws-Err-19 TO TRUE
364600140711              SET lncc_ErrCodeDescr19 TO TRUE
364700140711              PERFORM Set-Internal-Error
364800140711              PERFORM Dsp-Error
364900140711           END-IF.
365000140711
365100140711       UpdateAccContractLGWAOnce.
365200140711
365300140711           EXEC SQL
365400140711               UPDATE MFAACCONP
365500140711               SET LGWA_IND      =
365600140711               ( SELECT AWD_OPTION
365700140711                        FROM MFAACCONP
365800140711                 WHERE  ACCOUNT_NO = :li_DtlAccountNo
365900140711                 FETCH FIRST ROW ONLY
366000140711               )
366100140711               WHERE Account_No  = :li_DtlAccountNo
366200140711           END-EXEC.
366300140711
366400140711           IF NOT lncc_sqlSuccessful
366500140711              SET Ws-Err-19 TO TRUE
366600140711              SET lncc_ErrCodeDescr19 TO TRUE
366700140711              PERFORM Set-Internal-Error
366800140711              PERFORM Dsp-Error
366900140711           END-IF.
367000140711      *RFS129478 - End
367100191007      *RFS184855 - Start
367200191007      *-------------------------------*
367300191007       Insert-Acct-RLIF-Prev-Val.
367400191007      *-------------------------------*
367500191007           EXEC SQL
367600191007             INSERT INTO MFAACPREVP
367700191007             SELECT  Acrifp.Account_No
367800200914      *RFS1103875-Starts.
367900200914      *             ,DECIMAL(MAX(CASE WHEN Acrifp.Market_Value_Date <> 0
368000200914      *               THEN ZONED(Acrifp.Market_Value_Date/10000,4,0) + 1
368100200914      *               ELSE :li_YearEndDateYYYY
368200200914      *               END),5,0) AS TAXYEAR
368300200915                    , :li_YearEndDateYYYY  AS TAXYEAR
368400200914      *RFS1103875-Ends .
368500191018                    ,ZONED(MAX(Acrifp.Market_Value_Date),8,0)
368600191018                    ,DECIMAL(MAX(Acrifp.Market_Value),13,2)
368700191018                    ,DECIMAL(MAX(Acrifp.Min_Withdrawal_Amt),11,2)
368800191018                    ,MAX(0)
368900191018                    ,DECIMAL(MAX(:ln_logSysDate),9,0)
369000191018                    ,DECIMAL(MAX(ZONED(:ln_logSysTime/10000,4,0)),5,0)
369100191018                    ,MAX(:lncc_AuditUser)
369200210625186771              ,DECIMAL(MAX(Acrifp.PPPA_Annual),13,2)
369300210625186771              ,DECIMAL(MAX(Acrifp.PPPA_Eligible_Month),2,0)
369400210625186771              ,DECIMAL(MAX(Acrifp.PPPA_Entitlement),13,2)
369500191007
369600191007               FROM Sqaccrif Sqacrif
369700191007               INNER JOIN Mfaacrifp Acrifp ON
369800191007                 Sqacrif.Account_No = Acrifp.Account_No
369900191018               GROUP BY Acrifp.Account_No
370000191018               ORDER BY Acrifp.Account_No
370100191007           END-EXEC.
370200191007
370300191007           MOVE SQLSTATE TO Ws-Sql-States.
370400191007           IF NOT lncc_sqlSuccessful AND NOT lncc_SqlEnd
370500191007              SET Ws-Err-21 TO TRUE
370600191007              SET lncc_ErrCodeDescr21 TO TRUE
370700191007              PERFORM Set-Internal-Error
370800191007              PERFORM Dsp-Error
370900191007              PERFORM Force-Msgw
371000191007           END-IF.
371100191007      *RFS184855 - End
371200200224      *RFS185169 - Begin
371300200224       Process-Detail-Records-Aclbenp.
371400200224
371500200224           INITIALIZE ln_GWAAmount.
371600200224           If lc_SegGLWBYes
371700200512              If lb_GLWAMinimum and lc_Nominee = lncc_N
371800200224                 Perform Calculate-GLWA-RIF-Min-Aclbenp
371900200224              End-If
372000200224
372100200811185171*       If lb_NoGLWAMinimum and lc_Nominee = lncc_N
372200200811185171*          Perform Calc-Account-RRIF-Min-Aclbenp
372300200811185171*          SET lncc_clcAccountRrifMinYes  TO TRUE
372400200811185171*       ELSE
372500200811185171*          SET lncc_clcAccountRrifMinNo   TO TRUE
372600200811185171*       End-If
372700200811185171        If lc_Nominee = lncc_N
372800200811185171           Perform Calc-Account-RRIF-Min-Aclbenp
372900200811185171           SET lncc_clcAccountRrifMinYes  TO TRUE
373000200811185171        ELSE
373100200811185171           SET lncc_clcAccountRrifMinNo   TO TRUE
373200200811185171        End-If
373300200224
373400200224              IF lncc_clcAccountRrifMinNo
373500200224                PERFORM GetGWAAmountAclbenp
373600200224              END-IF
373700200224           End-If.
373800200224
373900200224      *************************************************************
374000200224       Calculate-GLWA-RIF-Min-Aclbenp.
374100200224      *************************************************************
374200200224
374300200224           Move 0 to ln_TempRRIFMinimum
374400200624
374500200624              Perform GetAccountInfo
374600200624
374700200624              If li_AccountNo Not = 0
374800200624                 Perform GetAnnuitAgeAclbenp
374900200624              End-If
375000200624
375100200624              If lc_InvestmentSeries = " "
375200200623              Perform GetFirstInvestmentAclbenp
375300200624              End-If
375400200624
375500200624              If lc_InvestmentSeries Not = lc_LastInvestmentSeriesAclb
375600200624                 Perform GetStartAgeDateAclbenp
375700200224              End-If
375800200224
375900200224             If ld_CalcDOB > 0
376000200224                Move ld_CalcDOB     to ld_TempDOB
376100200224                Compute li_TempAge = li_YearEndDateYYYY
376200200224                                   - ld_TempDOBYYYY
376300200224               Else
376400200224                Move 0              to li_TempAge
376500200224             End-If
376600200224
376700200224              If li_TempAge = 0 or
376800200224                (li_TempAge > 0 and
376900200224                 li_AnnuitantAge = li_TempAge)
377000200224                 IF li_AnnuitantAge + 1 >= ln_EligDefaultStartAge
377100200224                  Move li_MinWithdrawalAmt to ln_TempRRIFMinimum
377200200224                 End-If
377300200224              Else
377400200224                  If li_AnnuitantAge + 1 >= ln_EligDefaultStartAge
377500200224                     Perform Calculate-Temp-RRIF-Minimum
377600200224                  End-If
377700200224              End-If
377800200224           .
377900200224      * ---------------------------------
378000200224       GetFirstInvestmentAclbenp.
378100200224      * ---------------------------------
378200200511           INITIALIZE lc_InvestmentSeries
378300200511                      lc_InvestmentCode.
378400200224           EXEC SQL
378500200619185170*      SELECT invsgp.Investment_Series,
378600200619185170       SELECT ACLBENP.Investment_Series,
378700200224                    invsgp.Investment_Code
378800200224               INTO :lc_InvestmentSeries,
378900200224                    :lc_InvestmentCode
379000200224               FROM Mfaaclbenp aclbenp
379100200224                    INNER JOIN Mfaacccip acccip
379200200224                    ON aclbenp.Account_no  = acccip.Account_no
379300200224                    INNER JOIN MFAACCNTP accntp
379400200224                    ON aclbenp.Account_no = accntp.Account_no
379500200224                    INNER JOIN Mfainvsgp invsgp
379600200224                    ON acccip.Investment_code = invsgp.Investment_code
379700200619      *RFS185170 START
379800200619              EXCEPTION JOIN MFAIVRCLP IVRCLP ON
379900200619                IVRCLP.ACCOUNT_NO = ACLBENP.ACCOUNT_NO AND
380000200619                IVRCLP.SCREEN_CODE = "ACCGWDT" AND
380100200619                IVRCLP.CHANGE_CATEGORY = "RIDER CANCELLED"
380200200619      *RFS185170 END
380300200512              WHERE acconp.Account_No = :li_CurrAccountNo  and
380400200512                    accntp.Account_Status <> :lncc_C       and
380500200619                    aclbenp.Eligible_Date   <> :lnci_0
380600200619185170*             invsgp.Investment_Series  <> :lncc_Blank
380700200224                    FETCH FIRST ROW ONLY
380800200224           END-EXEC.
380900200224
381000200224      * ---------------------------------
381100200224       Calc-Account-RRIF-Min-Aclbenp.
381200200224      * ---------------------------------
381300200224      * Initialize variables
381400200511           INITIALIZE ln_GWAAmount
381500200511                      lc_investmentSeries
381600200224
381700200224      * Declare the Cursor
381800200224           EXEC SQL
381900200224            DECLARE lcu_rrifMinAclbenp CURSOR FOR
382000200224             SELECT
382100200224                    aclbenp.Guar_Withdrawal_Amount,
382200200619185170*             invsgp.investment_series
382300200619185170              ACLBENP.investment_series
382400200224             FROM Mfaaclbenp aclbenp
382500200224                  INNER JOIN Mfaacccip acccip
382600200224                  ON aclbenp.Account_no    = acccip.Account_no
382700200224                  INNER JOIN Mfainvsgp invsgp
382800200224                  ON acccip.Investment_code = invsgp.Investment_code
382900200619      *RFS185170 START
383000200619              EXCEPTION JOIN MFAIVRCLP IVRCLP ON
383100200619                IVRCLP.ACCOUNT_NO = ACLBENP.ACCOUNT_NO AND
383200200619                IVRCLP.SCREEN_CODE = "ACCGWDT" AND
383300200619                IVRCLP.CHANGE_CATEGORY = "RIDER CANCELLED"
383400200619      *RFS185170 END
383500200512             WHERE aclbenp.Account_No      = :li_CurrAccountNo  AND
383600200512                   aclbenp.Eligible_Date   <> :lnci_0
383700200224           END-EXEC.
383800200224
383900200224           EXEC SQL
384000200224             OPEN lcu_rrifMinAclbenp
384100200224           END-EXEC
384200200224
384300200224           MOVE SQLSTATE TO lc_sqlStates
384400200224           IF lncc_sqlSuccessful
384500200224              SET lncc_rrifMinStart    TO TRUE
384600200224              PERFORM UNTIL lncc_rrifMinEnd
384700200224                EXEC SQL
384800200224                  FETCH NEXT
384900200224                    FROM lcu_rrifMinAclbenp
385000200224                    INTO
385100200224                         :ln_GWAAmount,
385200200224                         :lc_investmentSeries
385300200224                END-EXEC
385400200224                MOVE SQLSTATE TO lc_sqlStates
385500200511                EVALUATE TRUE
385600200511                    WHEN lncc_sqlSuccessful
385700200511                         PERFORM apply-new-rrif-formula-Aclbenp
385800201127105650*                  IF lncc_UpdateGWAYes
385900200511                           PERFORM update-account-benp
386000201127105650*                  END-IF
386100200511                    WHEN lncc_sqlEnd
386200200511                         SET lncc_rrifMinEnd     TO TRUE
386300200511                    WHEN OTHER
386400200512                         SET Ws-Err-25           TO TRUE
386500200512                         SET lncc_ErrCodeDescr25 TO TRUE
386600200511                             PERFORM Set-Internal-Error
386700200511                             PERFORM Dsp-Error
386800200511                    END-EVALUATE
386900200224              END-PERFORM
387000200224           ELSE
387100200512              SET Ws-Err-24 TO TRUE
387200200512              SET lncc_ErrCodeDescr24 TO TRUE
387300200224              PERFORM Set-Internal-Error
387400200224              PERFORM Dsp-Error
387500200224           END-IF
387600200224
387700200224           EXEC SQL
387800200506             CLOSE lcu_rrifMinAclbenp
387900200224           END-EXEC.
388000200224
388100200224      * ---------------------------------
388200200224       apply-new-rrif-formula-Aclbenp.
388300200224      * ---------------------------------
388400200224      * Check, if GWAAmount = 0 then initialize variables and just
388500201127      * RFS 1105650 - Start
388600201127      *      IF ln_GWAAmount = lnci_0
388700200224               INITIALIZE ln_accountRRIFMin
388800200224                          ln_OriginalGWA
388900201127      *        SET lncc_UpdateGWANo              TO TRUE
389000201127      *      ELSE
389100201127      *        SET lncc_UpdateGWAYes               TO TRUE
389200200224
389300200224      * Get Account Market Value
389400200224               PERFORM get-account-market-value
389500200224
389600200224      * Do the calculations
389700201127               EXEC SQL
389800201127                 SELECT COALESCE(Minfcp.Minimum_Payment_Factor, 0)
389900201127                   INTO :li_RifMinFactor
390000201127                   FROM Sqaccrif Sqacrif
390100201127                        INNER JOIN Mfaacrifp Acrifp
390200201127                           ON Sqacrif.Account_No = Acrifp.Account_No
390300201127                        INNER JOIN Mfaaccntp Accntp
390400201127                           ON Acrifp.Account_no = Accntp.Account_No
390500201127                        INNER JOIN Mfaacctyp Acctyp
390600201127                           ON Accntp.Account_Type_Code =
390700201127                              Acctyp.Account_type_Code
390800201127                        INNER JOIN Mfaivrp Ivrp
390900201127                           ON Accntp.Investor_No = Ivrp.Investor_No
391000201127                         LEFT OUTER JOIN Mfaminfcp Minfcp
391100201127                           ON Minfcp.Account_Type_Code =
391200201127                              Acctyp.Account_Type_Code AND
391300201127                              Minfcp.Qualifying_Flag =
391400201127                              Acrifp.Qualifying_Flag AND
391500201127                              Minfcp.Investor_Age =
391600201127                              CASE WHEN Acrifp.Calc_Date_Of_Birth > 0
391700201127                                   THEN dec(substr(char(:li_YearEndDate)
391800201127                                            ,1,4),4,0) -
391900201127                                        dec(substr(char(
392000201127                                            Acrifp.Calc_Date_Of_Birth)
392100201127                                            ,1,4),4,0)
392200201127                                   ELSE dec(substr(char(:li_YearEndDate)
392300201127                                            ,1,4),4,0) -
392400201127                                        dec(substr(char(
392500201127                                            Ivrp.Date_Of_Birth)
392600201127                                            ,1,4),4,0)
392700201127                                   END
392800201127                  WHERE Accntp.ACCOUNT_NO = : li_CurrAccountNo
392900201127               END-EXEC.
393000200622               COMPUTE ln_accountRRIFMin ROUNDED =
393100201127                       li_MarketValue * li_RifMinFactor / 100
393200201127      *           li_MinWithdrawalAmt *
393300201127      *           ln_AccountMarketValue / li_MarketValue
393400200224               MOVE ln_GWAAmount     TO ln_OriginalGWA
393500200224
393600200224      * Set up to a greater amount
393700200224               IF ln_OriginalGWA > 0 AND
393800200622                  ln_accountRRIFMin > ln_OriginalGWA
393900200622                   MOVE ln_accountRRIFMin    TO ln_GWAAmount
394000200224               END-IF
394100201127      *      END-IF.
394200201127      * RFS1105650 - End
394300200722      * RFS185171  -STARTS
394400200831           INITIALIZE lc_GPPInvCode
394500200722           EXEC SQL
394600200831             SELECT COALESCE(SUBSTR(SERRLP.Series_Rules,164,5), " ")
394700200831             INTO :lc_GPPInvCode
394800200831             FROM MFASERRLP SERRLP
394900200831             INNER JOIN  MFAACLBENP BENP ON
395000200831             BENP.Investment_Series = SERRLP.Investment_Series
395100200831             WHERE BENP.ACCOUNT_NO = :li_CurrAccountNo   AND
395200200831             SUBSTR(SERRLP.SERIES_RULES, 70, 4) = "GLWB"  AND
395300200831             SUBSTR(SERRLP.Series_Rules, 149, 1)= "Y"
395400200831             FETCH FIRST ROW ONLY
395500200831           END-EXEC.
395600200831           EXEC SQL
395700200722                SELECT COALESCE(GUAR_WITHDRAWAL_AMOUNT,0),
395800200722                       COALESCE(AWD_OPTION," ")
395900200722                  INTO :ln_GuarWithAmount,:lc_AWDOption
396000200722                  FROM MFAACLBENP
396100200722                 WHERE Account_No  = :li_CurrAccountNo
396200200722           END-EXEC.
396300200722
396400200722           EXEC SQL
396500200722             SELECT COALESCE(PAYMENT_TYPE_CODE," ")
396600200722             INTO  :lc_PaymtTypeCode
396700200722             FROM MFAACRIFP
396800200722             WHERE Account_No = :li_CurrAccountNo
396900200722           END-EXEC.
397000200722
397100200831           IF lc_GPPInvCode NOT = SPACES
397200200811           IF  ln_GWAAmount > ln_AccountMarketValue AND
397300200722               lc_AWDOption not equal to lncc_G AND
397400200722               lc_PaymtTypeCode   not equal to lncc_M
397500200722                   PERFORM update-aclbenp-awd-option
397600200722           ELSE
397700200811            IF ln_GWAAmount > lnci_0 AND
397800200722               ln_AccountMarketValue = lnci_0 AND
397900200722               lc_AWDOption not equal to lncc_G AND
398000200722               lc_PaymtTypeCode   equal to lncc_M
398100200722                   PERFORM update-aclbenp-awd-option
398200200722            END-IF
398300200831           END-IF
398400200722           END-IF.
398500200725
398600200725
398700200811           IF ln_GWAAmount > lnci_0 AND
398800200725               ln_AccountMarketValue = lnci_0
398900200811              IF lc_GPPInvCode NOT = SPACES
399000200725               PERFORM GLWB-ACCOUNT-AWD-INVESTMENT
399100200811              END-IF
399200200725           END-IF.
399300200725
399400200811           IF ln_GWAAmount > lnci_0 AND
399500200725               ln_AccountMarketValue = lnci_0
399600200811              IF lc_GPPInvCode NOT = SPACES
399700200725               PERFORM GLWB-ACCOUNT-RIF-INV-DTL
399800200811              END-IF
399900200725           END-IF.
400000200811
400100200722      * ---------------------------------
400200200722       update-aclbenp-awd-option.
400300200722      * ---------------------------------
400400200722           EXEC SQL
400500200722               UPDATE MFAACLBENP
400600200811                 SET AWD_OPTION = :lncc_G,
400700200811                 AWD_SPLIT_OPTION = :lncc_Percent,
400800200811                 AWD_AMOUNT = 0
400900200722               WHERE Account_No  = :li_CurrAccountNo
401000200722           END-EXEC.
401100200725
401200200725      * ---------------------------------
401300200725       GLWB-ACCOUNT-AWD-INVESTMENT.
401400200725      * ---------------------------------
401500200725             INITIALIZE ltb_RifAwdRec, SQLSTATE.
401600200725           EXEC SQL
401700200725                SELECT ACCOUNT_NO,
401800200725                       COALESCE(AWD_SEQ_NO,0),
401900200725                       COALESCE(INVESTMENT_CODE," "),
402000200725                       COALESCE(AWD_AMOUNT,0),
402100200725                       COALESCE(AWD_PERCENT,0),
402200200725                       COALESCE(AWD_UNITS,0),
402300200725                       COALESCE(SPLIT_OPTION_CODE," "),
402400200725                       COALESCE(CONFIRM," "),
402500200725                       COALESCE(GROSS_OR_NET," "),
402600200725                       COALESCE(CONTR_REDEM_CODE," "),
402700200725                       COALESCE(INITIAL_CONFIRM," "),
402800200725                       COALESCE(WAIVE_DSC," "),
402900200725                       COALESCE(DSC_WAIVE_REASON_CODE," ")
403000200725                  INTO :li_RifAccountNo,
403100200725                  :li_RifAwdSeqNo,
403200200725                  :lc_RifInvCode,
403300200725                  :li_RifAwdAmt,
403400200725                  :li_RifAwdPercent,
403500200725                  :li_RifAwdUnit,
403600200725                  :lc_RifSplitOptCode,
403700200725                  :lc_RifConfirm,
403800200725                  :lc_RifGrossOrNet,
403900200725                  :lc_RifContrRedemCode,
404000200725                  :lc_RifIntConfirm,
404100200725                  :lc_RifWaiveDsc,
404200200725                  :lc_RifWaiveReasonCode
404300200725                 FROM MFAACCAIP
404400200725                 WHERE Account_No  = :li_CurrAccountNo
404500200811                 AND AWD_SEQ_NO = 1
404600200725                 FETCH FIRST ROW ONLY
404700200725           END-EXEC.
404800200725
404900200725           MOVE SQLSTATE TO lc_sqlStates
405000200725           EVALUATE TRUE
405100200725           WHEN lncc_sqlSuccessful
405200200811              PERFORM Gpp-Fund-Awd-Record-Insert
405300200725           CONTINUE
405400200725           WHEN OTHER
405500200725                SET Ws-Err-28           TO TRUE
405600200725                SET lncc_ErrCodeDescr28 TO TRUE
405700200725                PERFORM Set-Internal-Error
405800200725                PERFORM Dsp-Error
405900200725            END-EVALUATE.
406000200725
406100200725      * ---------------------------------
406200200811       Gpp-Fund-Awd-Record-Insert.
406300200811      * ---------------------------------
406400200811           PERFORM GetAWDsplit.
406500200811
406600200811      * ---------------------------------
406700200811       GetAWDsplit.
406800200811      * ---------------------------------
406900200811           EXEC SQL
407000200811           DECLARE AWDSPLIT CURSOR FOR
407100200811           SELECT
407200200811           COALESCE(ACCOUNT_NO,0),
407300200811           COALESCE(CONTR_REDEM_CODE, " "),
407400200811           COALESCE(SPLIT_OPTION_CODE, " "),
407500200811           SUM(CASE WHEN SPLIT_OPTION_CODE = "$"
407600200811           THEN AWD_AMOUNT
407700200811           ELSE 0
407800200811           END),
407900200811           SUM(CASE WHEN SPLIT_OPTION_CODE = "%"
408000200811           THEN AWD_PERCENT
408100200811           ELSE 0
408200200811           END)
408300200811           FROM MFAACCAIP
408400200811           WHERE ACCOUNT_NO = :li_CurrAccountNo
408500200811           And AWD_SEQ_NO   = 1
408600200811           GROUP BY ACCOUNT_NO,SPLIT_OPTION_CODE,CONTR_REDEM_CODE
408700200811           ORDER BY ACCOUNT_NO,SPLIT_OPTION_CODE,CONTR_REDEM_CODE
408800200811           END-EXEC.
408900200811
409000200811           EXEC SQL
409100200811              OPEN AWDSPLIT
409200200811           END-EXEC.
409300200811
409400200811           MOVE SQLSTATE TO lc_sqlStates.
409500200811           EVALUATE TRUE
409600200811           WHEN lncc_sqlSuccessful
409700200811           CONTINUE
409800200811           WHEN OTHER
409900200811           SET Ws-Err-34 TO TRUE
410000200811           SET lncc_ErrOpenAWDSPLIT
410100200811                TO TRUE
410200200811           PERFORM Set-Internal-Error
410300200811           PERFORM Dsp-Error
410400200811           PERFORM Force-Msgw
410500200811           END-EVALUATE.
410600200811
410700200811           INITIALIZE ltb_AWDTable,
410800200811                      SQLSTATE,
410900200811                      li_NoOfRowsA
411000200811
411100200811           EXEC SQL
411200200811           FETCH NEXT FROM AWDSPLIT
411300200811           FOR :lnci_MaxFetchRec ROWS
411400200811           INTO  :ltb_SpArray:ltb_IndAWDSplitA
411500200811           END-EXEC.
411600200811
411700200811           MOVE SQLSTATE TO lc_sqlStates
411800200811           EVALUATE TRUE
411900200811           WHEN lncc_sqlSuccessful
412000200811           COMPUTE li_NoOfRowsA = SQLERRD(3)
412100200811           WHEN lncc_sqlEnd
412200200811           COMPUTE li_NoOfRowsA = SQLERRD(3)
412300200811           WHEN OTHER
412400200811           SET Ws-Err-35 TO TRUE
412500200811           SET lncc_ErrFetchAWDSPLIT
412600200811                TO TRUE
412700200811           PERFORM Set-Internal-Error
412800200811           PERFORM Dsp-Error
412900200811           PERFORM Force-Msgw
413000200811           END-EVALUATE.
413100200811
413200200811           IF li_NoOfRowsA > 0
413300200811              PERFORM Remove-Original-Awd-Record
413400200811           END-IF
413500200811
413600200811           SET li_CountA TO 1
413700200811
413800200811           PERFORM AWDSPLITFetch TEST BEFORE
413900200811                   UNTIL li_CountA > li_NoOfRowsA.
414000200811
414100200811           PERFORM CloseAWDSPLIT.
414200200811
414300200811      * ---------------------------------
414400200725       Remove-Original-Awd-Record.
414500200725      * ---------------------------------
414600200811             INITIALIZE SQLSTATE
414700200725
414800200725           EXEC SQL
414900200725                DELETE FROM Mfaaccaip
415000200725                 WHERE Account_No  = :li_CurrAccountNo
415100200811                 AND AWD_SEQ_NO = 1
415200200725           END-EXEC.
415300200725
415400200725           MOVE SQLSTATE TO Ws-Sql-States
415500200725           EVALUATE TRUE
415600200725           WHEN lncc_sqlSuccessful
415700200725           CONTINUE
415800200725           WHEN OTHER
415900200725                SET Ws-Err-29           TO TRUE
416000200725                SET lncc_ErrCodeDescr29 TO TRUE
416100200725                PERFORM Set-Internal-Error
416200200725                PERFORM Dsp-Error
416300200725                PERFORM Force-Msgw
416400200725            END-EVALUATE.
416500200725
416600200725      * ---------------------------------
416700200811       AWDSPLITFetch.
416800200725      * ---------------------------------
416900200811           INITIALIZE SQLSTATE
417000200811           IF  li_SpAccNo (li_CountA)      =    li_CurrAccountNo
417100200811           MOVE lc_SpContCode(li_CountA)   TO   lc_RifContrRedemCode
417200200811           MOVE lc_SpSplitCode (li_CountA) TO   lc_RifSplitOptCode
417300200811           MOVE li_SpAWDAmt (li_CountA)    TO   li_RifAwdAmt
417400200811           MOVE li_SpAWDPerc (li_CountA)   TO   li_RifAwdPercent
417500200811           MOVE lc_GPPInvCode              TO   lc_RifInvCode
417600200811
417700200725              EXEC SQL
417800200725                   INSERT INTO Mfaaccaip
417900200725                   VALUES (:ltb_RifAwdRec)
418000200725              END-EXEC
418100200725           MOVE SQLSTATE TO Ws-Sql-States
418200200725           IF NOT lncc_sqlSuccessful
418300200725              SET Ws-Err-30 TO TRUE
418400200725              SET lncc_ErrCodeDescr30 TO TRUE
418500200725              PERFORM Set-Internal-Error
418600200725              PERFORM Dsp-Error
418700200725              PERFORM Force-Msgw
418800200811           END-IF
418900200725           END-IF.
419000200725
419100200811            SET li_CountA UP BY 1.
419200200811
419300200725      * ---------------------------------
419400200811       CloseAWDSPLIT.
419500200811      * ---------------------------------
419600200811           INITIALIZE SQLSTATE
419700200811           EXEC SQL
419800200811             CLOSE AWDSPLIT
419900200811           END-EXEC.
420000200811           MOVE SQLSTATE TO Ws-Sql-States
420100200811           IF NOT lncc_sqlSuccessful
420200200811              SET Ws-Err-36 TO TRUE
420300200811              SET lncc_ErrCloseAWDSPLIT TO TRUE
420400200811              PERFORM Set-Internal-Error
420500200811              PERFORM Dsp-Error
420600200811              PERFORM Force-Msgw
420700200811           END-IF.
420800200811      * ---------------------------------
420900200725       GLWB-ACCOUNT-RIF-INV-DTL.
421000200725      * ---------------------------------
421100200725             INITIALIZE ltb_InvRifAwdRec, SQLSTATE
421200200725           EXEC SQL
421300200725                SELECT ACCOUNT_NO,
421400200725                       COALESCE(INVESTMENT_CODE," "),
421500200725                       COALESCE(ANNUAL_AMOUNT,0),
421600200725                       COALESCE(GROSS_OR_NET," "),
421700200725                       COALESCE(CONFIRM," "),
421800200725                       COALESCE(WAIVE_DSC," "),
421900200725                       COALESCE(DSC_WAIVE_REASON_CODE," ")
422000200725                  INTO :li_InvRifAccountNo,
422100200725                  :lc_InvRifInvCode,
422200200725                  :li_InvRifAnnualAmt,
422300200725                  :lc_InvRifGrossOrNet,
422400200725                  :lc_InvRifConfirm,
422500200725                  :lc_InvRifWaiveDsc,
422600200725                  :lc_InvRifWaiveReasonCode
422700200725                  FROM MFAACRIVP
422800200725                 WHERE Account_No  = :li_CurrAccountNo
422900200725                 FETCH FIRST ROW ONLY
423000200725           END-EXEC.
423100200725
423200200725           MOVE SQLSTATE TO Ws-Sql-States
423300200725           EVALUATE TRUE
423400200725           WHEN lncc_sqlSuccessful
423500200725              PERFORM Remove-Orig-Acct-Rif-Record
423600200725           CONTINUE
423700200725           WHEN OTHER
423800200725                SET Ws-Err-31           TO TRUE
423900200725                SET lncc_ErrCodeDescr31 TO TRUE
424000200725                PERFORM Set-Internal-Error
424100200725                PERFORM Dsp-Error
424200200725            END-EVALUATE.
424300200725
424400200725      * ---------------------------------
424500200725       Remove-Orig-Acct-Rif-Record.
424600200725      * ---------------------------------
424700200725
424800200725           EXEC SQL
424900200725                DELETE FROM MFAACRIVP
425000200725                 WHERE Account_No  = :li_CurrAccountNo
425100200725           END-EXEC.
425200200725
425300200725           MOVE SQLSTATE TO Ws-Sql-States
425400200725           EVALUATE TRUE
425500200725           WHEN lncc_sqlSuccessful
425600200725              PERFORM Gpp-Fund-Rif-InvRec-Insert
425700200725           CONTINUE
425800200725           WHEN OTHER
425900200725                SET Ws-Err-32           TO TRUE
426000200725                SET lncc_ErrCodeDescr32 TO TRUE
426100200725                PERFORM Set-Internal-Error
426200200725                PERFORM Dsp-Error
426300200725                PERFORM Force-Msgw
426400200725            END-EVALUATE.
426500200725
426600200725      * ---------------------------------
426700200725       Gpp-Fund-Rif-InvRec-Insert.
426800200725      * ---------------------------------
426900200725              MOVE lc_GPPInvCode TO lc_InvRifInvCode
427000200811              MOVE  100          TO li_InvRifAnnualAmt
427100200725              EXEC SQL
427200200725                   INSERT INTO MFAACRIVP
427300200725                   VALUES (:ltb_InvRifAwdRec)
427400200725              END-EXEC
427500200725           MOVE SQLSTATE TO Ws-Sql-States
427600200725           IF NOT lncc_sqlSuccessful
427700200725              SET Ws-Err-33 TO TRUE
427800200725              SET lncc_ErrCodeDescr33 TO TRUE
427900200725              PERFORM Set-Internal-Error
428000200725              PERFORM Dsp-Error
428100200725              PERFORM Force-Msgw
428200200725           END-IF.
428300200725
428400200722      * RFS185171  -ENDS
428500200722
428600200224      * ---------------------------------
428700200224       get-account-market-value.
428800200224      * ---------------------------------
428900200512           INITIALIZE ln_AccountMarketValue.
429000200224
429100200512           MOVE li_TradeDate       TO COMM-DATE.
429200200512           MOVE li_CurrAccountNo   TO COMM-ACCOUNT-NO.
429300200512           MOVE lncc_Space         TO COMM-INVESTMENT-CODE.
429400200512           MOVE lnci_0             TO COMM-VALUE-INVESTMENT-CURRENCY.
429500200512           MOVE lnci_0             TO COMM-MARKET-VALUE-BASE.
429600200622           MOVE lnci_0             TO COMM-BOOK-VALUE-BASE.
429700200512           MOVE lnci_0             TO COMM-BOOK-VALUE-EXCHANGE.
429800200512           MOVE lnci_0             TO COMM-TRAN-CLOS-UNIT-BAL.
429900200512           MOVE lnci_0             TO COMM-BASE-UNIT-PRICE.
430000200512           MOVE lnci_0             TO COMM-VALUE-BASE-CURRENCY.
430100200512           MOVE lnci_0             TO COMM-ERROR-CODE.
430200200512           MOVE lncc_T             TO COMM-DATE-IND.
430300200512
430400200512           CALL "MKTVALTD" USING COMM-DATE
430500200622                                 COMM-ACCOUNT-NO
430600200512                                 COMM-INVESTMENT-CODE
430700200512                                 COMM-VALUE-INVESTMENT-CURRENCY
430800200512                                 COMM-MARKET-VALUE-BASE
430900200512                                 COMM-BOOK-VALUE-BASE
431000200512                                 COMM-BOOK-VALUE-EXCHANGE
431100200512                                 COMM-TRAN-CLOS-UNIT-BAL
431200200512                                 COMM-BASE-UNIT-PRICE
431300200512                                 COMM-VALUE-BASE-CURRENCY
431400200512                                 COMM-ERROR-CODE
431500200512                                 COMM-DATE-IND
431600200512           COMPUTE ln_AccountMarketValue =
431700200512                                   COMM-VALUE-INVESTMENT-CURRENCY.
431800200224      * ---------------------------------
431900200224       update-account-benp.
432000200224      * ---------------------------------
432100200224      * Update Account Benp, RRIFMin, GWAAmount
432200200224             EXEC SQL
432300200224               UPDATE Mfaaclbenp
432400200224                 SET Guar_Withdrawal_Amount = :ln_GWAAmount,
432500200622                     GWA_RIF_MINIMUM        = :ln_accountRRIFMin,
432600200224                     Original_GWA           = :ln_OriginalGWA
432700200224               WHERE Account_No  = :li_CurrAccountNo
432800200224             END-EXEC.
432900200224
433000200811      *RFS185171 - STARTS
433100200811           INITIALIZE lc_FXAWD_Parms
433200200811           MOVE li_CurrAccountNo    TO pi_AccountNo2
433300200811           MOVE "S"                 TO pc_Mode2
433400200811           MOVE "00"                TO pc_RejectCode2
433500200811
433600200811           CALL "FXAWDRLIF" USING pi_AccountNo2
433700200811                                  pc_Mode2
433800200811                                  pc_FrequencyCode2
433900200811                                  pn_IFPayAmount2
434000200811                                  pn_TaxselAmount2
434100200831                                  pc_RejectCode2
434200200831
434300200831             EXEC SQL
434400200831               DELETE FROM SQACCRIF SQACCRIF
434500200831               WHERE SQACCRIF.ACCOUNT_NO= :li_CurrAccountNo
434600200831             END-EXEC.
434700200811      *RFS185171 - ENDS
434800200811
434900200224      *************************************************************
435000200224       GetGWAAmountAclbenp.
435100200224      *************************************************************
435200200224
435300200624           INITIALIZE ln_GWAAmount
435400200624                      li_AccountNo.
435500200624
435600200224           SET lb_GLWBAccountFoundNo TO TRUE.
435700200224
435800200224           EXEC SQL
435900200624             SELECT aclbenp.Guar_Withdrawal_Amount,
436000200624                    aclbenp.Account_No
436100200624               INTO :ln_GWAAmount,
436200200624                    :li_AccountNo
436300200224               FROM Mfaaclbenp aclbenp
436400200224                    INNER JOIN Mfaacccip acccip
436500200224                    ON aclbenp.Account_no  = acccip.Account_no
436600200224                    INNER JOIN Mfainvsgp invsgp
436700200224                    ON acccip.Investment_code = invsgp.Investment_code
436800200619      *RFS185170 START
436900200619              EXCEPTION JOIN MFAIVRCLP IVRCLP ON
437000200619                IVRCLP.ACCOUNT_NO = ACLBENP.ACCOUNT_NO AND
437100200619                IVRCLP.SCREEN_CODE = "ACCGWDT" AND
437200200619                IVRCLP.CHANGE_CATEGORY = "RIDER CANCELLED"
437300200619      *RFS185170 END
437400200512              WHERE aclbenp.Account_No = :li_CurrAccountNo  and
437500200224                    aclbenp.Eligible_Date   <> 0
437600200224                    FETCH FIRST ROW ONLY
437700200224           END-EXEC.
437800200224
437900200224           MOVE SQLSTATE TO lc_sqlStates.
438000200623           EVALUATE TRUE
438100200624            WHEN lncc_sqlSuccessful or lncc_sqlEnd
438200200624             If lncc_sqlSuccessful
438300200624                SET lb_GLWBAccountFoundYes TO TRUE
438400200624             End-If
438500200224             If lb_GLWAMinimum
438600200224                 Move ln_GWAAmount to ln_OriginalGWA
438700200512                 If lc_Nominee = lncc_N
438800200224                    Perform Set-GLWA-RIF-Min-Aclbenp
438900200224                 End-If
439000200224             End-If
439100200224             If ln_GWAAmount > 0 and ln_GWAAmount <= li_MinWithdrawalAmt
439200200224               If lb_NoGLWAMinimum
439300200224                COMPUTE ln_GWAAmount = li_MinWithdrawalAmt
439400200224               End-if
439500200623                   PERFORM UpdateForNewGWAAclbenp
439600200224             Else
439700200224                IF lb_GLWBAccountFoundYes
439800200622                   PERFORM UpdateForNewGWAAclbenp
439900200624                Else
440000200624                   Continue
440100200224                End-If
440200200224             End-If
440300200224
440400200623           WHEN OTHER
440500200623                   SET Ws-Err-26 TO TRUE
440600200623                   SET lncc_ErrCodeDescr26 TO TRUE
440700200623                   PERFORM Set-Internal-Error
440800200623                   PERFORM Dsp-Error
440900200623           END-EVALUATE.
441000200224
441100200224      *************************************************************
441200200224       Set-GLWA-RIF-Min-Aclbenp.
441300200224      *************************************************************
441400200224
441500200224           If ln_TempRRIFMinimum = 0 and li_MinWithdrawalAmt = 0
441600200512              Move lncc_N to lc_FlagDOB
441700200224              Move 0   to ln_RRIFminimum
441800200224             Else
441900200224              If ln_TempRRIFMinimum > 0 and
442000200224                 (ln_TempRRIFMinimum <= li_MinWithdrawalAmt or
442100200224                  li_MinWithdrawalAmt = 0)
442200200224                 Move "P" to lc_FlagDOB
442300200224                 Move ln_TempRRIFMinimum  to ln_RRIFminimum
442400200224                Else
442500200224                 Move li_MinWithdrawalAmt to ln_RRIFminimum
442600200224              End-If
442700200224           End-If.
442800200224
442900200224           IF ln_RRIFminimum > ln_OriginalGWA
443000200224              COMPUTE ln_GWAAmount  = ln_RRIFminimum
443100200224           ELSE
443200200224              COMPUTE ln_GWAAmount  = ln_OriginalGWA
443300200224           END-IF
443400200224           .
443500200225      *-----------------------
443600200225       UpdateForNewGWAAclbenp.
443700200225      *----------------------
443800200624           If li_AccountNo not = 0
443900200512              If lb_GLWAMinimum and lc_Nominee = lncc_N
444000200225
444100200225                 If li_AnnuitantAge + 1  < ln_EligDefaultStartAge
444200200225
444300200225                    Move 0   to ln_RRIFminimum
444400200225                                ln_GWAAmount
444500200225                 End-If
444600200225                 EXEC SQL
444700200225                    UPDATE Mfaaclbenp
444800200225                       SET Guar_Withdrawal_Amount = :ln_GWAAmount
444900200225                         , GWA_RIF_MINIMUM        = :ln_RRIFminimum
445000200225                         , Original_GWA           = :ln_OriginalGWA
445100200225                     WHERE Account_No = :li_CurrAccountNo
445200200225                  END-EXEC
445300200225              Else
445400200225
445500200225           EXEC SQL
445600200225             UPDATE Mfaaclbenp
445700200225                SET Guar_Withdrawal_Amount = :ln_GWAAmount
445800200225                         , Original_GWA    = :ln_OriginalGWA
445900200225              WHERE Account_No = :li_CurrAccountNo
446000200225           END-EXEC
446100200225           End-If
446200200225
446300200506           MOVE SQLSTATE TO lc_sqlStates
446400200506           IF NOT lncc_sqlSuccessful
446500200506              SET Ws-Err-23 TO TRUE
446600200506              SET lncc_ErrCodeDescr23 TO TRUE
446700200506              PERFORM Set-Internal-Error
446800200506              PERFORM Dsp-Error
446900200506              PERFORM Force-Msgw
447000200624           END-IF
447100200624           End-If.
447200200624
447300200624      * ---------------------------------
447400200624       GetAccountInfo.
447500200624      * ---------------------------------
447600200624
447700200624           Initialize li_AccountNo.
447800200624
447900200624           EXEC SQL
448000200624             SELECT SERRLP.Investment_Series,
448100200624                    invsgp.Investment_Code,
448200200624                    aclbenp.Account_No
448300200624               INTO :lc_InvestmentSeries,
448400200624                    :lc_InvestmentCode,
448500200624                    :li_AccountNo
448600200624               FROM Mfaaclbenp aclbenp
448700200624                    INNER JOIN Mfaacccip acccip
448800200624                    ON aclbenp.Account_no  = acccip.Account_no
448900200624                    INNER JOIN Mfainvsgp invsgp
449000200624                    ON acccip.Investment_code = invsgp.Investment_code
449100200624                    LEFT JOIN MFASERRLP SERRLP
449200200624                 ON Aclbenp.INVESTMENT_SERIES = SERRLP.INVESTMENT_SERIES
449300200625                   EXCEPTION JOIN MFAIVRCLP IVRCLP ON
449400200625                   IVRCLP.ACCOUNT_NO = ACLBENP.ACCOUNT_NO AND
449500200625                   IVRCLP.SCREEN_CODE = "ACCGWDT" AND
449600200625                   IVRCLP.CHANGE_CATEGORY = "RIDER CANCELLED"
449700200624              WHERE aclbenp.Account_No = :li_CurrAccountNo     and
449800200624                    aclbenp.Eligible_Date   <> 0
449900200624                    FETCH FIRST ROW ONLY
450000200624           END-EXEC.
450100200624
450200200624           MOVE SQLSTATE TO lc_sqlStates.
450300200624           IF not lncc_sqlSuccessful and not lncc_sqlEnd
450400200624              SET ws-err-27 TO TRUE
450500200624              SET lncc_ErrCodeDescr27 TO TRUE
450600200624              PERFORM Set-Internal-Error
450700200624              PERFORM Dsp-Error
450800200624           END-IF.
450900200624
451000200624      * ---------------------------------
451100200624       GetAnnuitAgeAclbenp.
451200200624      * ---------------------------------
451300200624
451400200624           If li_AccountNo Not = 0
451500200624              PERFORM GetDefaultAnnuitantAclbenp
451600200624           End-If
451700200624
451800200624           If li_DateOfBirth = 0
451900200624              PERFORM GetNoneDefaultAnnuitant
452000200624           End-If
452100200624
452200200624           IF li_DateOfBirth > 0
452300200624              COMPUTE li_AnnuitantAge = li_YearEndDateYYYY
452400200624                                      - li_DateOfBirthYYYY
452500200624             Else
452600200624              Move 0 to li_AnnuitantAge
452700200624           END-IF
452800200624           .
452900200624
453000200624      * ---------------------------------
453100200624       GetDefaultAnnuitantAclbenp.
453200200624      * ---------------------------------
453300200624           SET pb_DefaultAnnuit TO TRUE.
453400200624           MOVE li_CurrAccountNo To pi_AnnuitAccountNo.
453500200624
453600200624           CALL "FXACCANUIT" USING pc_AnnuitFlag,
453700200624                                   pi_AnnuitAccountNo,
453800200624                                   pi_AnnuitContractNo,
453900200624                                   pi_AnnSequenceNo,
454000200624                                   pc_AnnuitantStatus,
454100200624                                   pi_DateOfBirth,
454200200624                                   pc_FirstName,
454300200624                                   pc_LastName,
454400200624                                   pi_socialInsuranceNo,
454500200624                                   pc_sex,
454600200624                                   pc_AnnuitReturnCode.
454700200624
454800200624           IF pb_RetriveYes
454900200624              MOVE pi_DateOfBirth TO li_DateOfBirth
455000200624           END-IF.
455100200624
455200200624      * ---------------------------------
455300200624       GetStartAgeDateAclbenp.
455400200624      * ---------------------------------
455500200624
455600200624           Move lc_InvestmentCode   to pc-InvestmentCode
455700200624           Move lc_InvestmentSeries to
455800200624                              lc_LastInvestmentSeriesAclb
455900200624                              pc-InvestmentSeriesCode
456000200624
456100200624           Call "FXGLWBRULE" using  li_CurrAccountNo
456200200624                                    pc-InvestmentCode
456300200624                                    pc-InvestmentSeriesCode
456400200624                                    pc-InvestmentSeriesFlag
456500200624                                    pc-RFGWRULErules
456600200624                                    pc-RejectionCode
456700200624
456800200624           If pb-ValidRule and
456900200624              pc-EligibleStartDftAge is numeric
457000200624              Move pc-EligibleStartDftAge to lc_EligDefaultStartAge
457100200624             Else
457200200624              Move 0 to ln_EligDefaultStartAge
457300200624           End-If
457400200624           .
457500200624
457600200224      *RFS185169 - End
457700200428
457800200428      *RFS185170 START
457900200428       GetAccGLWBDetails.
458000200428           INITIALIZE pc_ACCGLWBD_Series
458100200428                      pc_ACCGLWBD_RiderApplicable.
458200200428           EXEC SQL
458300200428            CALL SPACCGLWBD(:pi_ACCGLWBD_AccNo,
458400200428                            :pc_ACCGLWBD_InvCode,
458500200428                            :pc_ACCGLWBD_AccLvlGLWB,
458600200428                            :pc_ACCGLWBD_Series,
458700200428                            :pc_ACCGLWBD_RiderApplicable)
458800200428           END-EXEC.
458900200428      *RFS185170 END
459000200428
459100200804      *RFS186053 Start
459200200804      * ---------------------------------
459300200804       SetupAwdInvWdHier.
459400200804      * ---------------------------------
459500200819           INITIALIZE lc_InvUpdRC.
459600200819           MOVE lncc_AuditUser     TO  lc_InvUpdCalledBy.
459700200819           CALL "AWDINVUPDP" USING lc_InvUpdCalledBy,
459800200819                                   li_InvUpdAccountNo,
459900200819                                   lc_InvUpdRC.
460000200804
460100200804      * ---------------------------------
460200200804       RemoveAwdInvWdHier.
460300200804      * ---------------------------------
460400200819           IF lc_InvUpdRC = lncc_Y
460500200819              CALL "AWDINVUPDR"
460600200804           END-IF.
460700200804      *RFS186053 End
460800200728
460900171128      * ---------------------------------
461000171128      * DSP-ERROR and FORCE-MSGW Routines
461100171128      * ---------------------------------
461200060828          COPY Cpysqlrtn.
