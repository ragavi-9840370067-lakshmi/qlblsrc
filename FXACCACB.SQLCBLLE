000100211001       IDENTIFICATION DIVISION.
000200211001       PROGRAM-ID.    FXACCACB.
000300211001       AUTHOR.        Muthulakshmi M.
000400211001       INSTALLATION.  Lnt Infotech.
000500211001       DATE-WRITTEN.  January 2014.
000600211001       DATE-COMPILED.
000700211001      *****************************************************************
000800211001      **   RFS-NUMBER : RFS122815                                      *
000900211001      **                                                               *
001000211001      **   DESCRIPTION: Calculate ACB & Accrual Interest at Account    *
001100211001      **                Level.                                         *
001200211001      **   CALLED BY:   TRNPST,TRNRVS and JOBACCACB.                   *
001300211001138589**                JOBRCALACB                                     *
001400211001      *****************************************************************
001500211001      *****************************************************************
001600211001      *    C H A N G E   H I S T O R Y
001700211001      *****************************************************************
001800211001      ******************************************************************
001900211001      * PROGRAMMER  *DATE OF CHANGE* DESCRIPTION OF CHANGE             *
002000211001      ******************************************************************
002100211001      * Muthulakshmi M * 22/01/2014 * Initial Version for RFS122815.
002200211001      * Suresh G.      * 08/04/2014 * QC36467-To calculate Gain from
002300211001      *                *            *         Disposition
002400211001      * Muthulakshmi M * 15/04/2014 * QC36643 - To remove the link from
002500211001      *                *            * MFATRNP.
002600211001      * Muthulakshmi M * 15/04/2014 * QC36708 - To remove the link from
002700211001      *                *            * MFATRNP.
002800211001      * Suresh G.      * 29/04/2014 * RFS136431-JOBDAILY is on MSGW in EC5
002900211001      *                *            * Due to duplicate record in member
003000211001      *                *            * TMPACTMKT.
003100211001      * Muthulakshmi M * 29/04/2014 * QC36560 - Switch Out disposition
003200211001      *                *            * calculated wrongly.
003300211001      * Muthulakshmi M * 06/05/2014 * RFS136749 - ATS Defect36859
003400211001      *                *            * QC36859 - GIC/DII is getting
003500211001      *                *            * matured ACB should be zero
003600211001      * Nagamani S     * 12/05/2014 * RFS136749 - ATS Defect36975
003700211001      * Sushmita J     * 2014/04/01 * RFS134626 - Recompile for MFAACMDP.
003800211001      *                *            * and renamed the field Effective-Date
003900211001      *                *            * to Effectiv-Date.
004000211001      * Tamilselvi     * 2014/05/09 * RFS136015- Recompile for MFAACMDP.
004100211001      * Sairam DC      * 28/05/2014 * RFS137238 - To display amount on screen
004200211001      *                *            * switched from SEG to TIO.
004300211001      * Sairam DC      * 30/05/2014 * RFS137246 - To Fix Net redemption from
004400211001      *                *            * GI has resulted in inflated Gain.
004500211001      * Sairam DC      * 30/05/2014 * RFS137241 - To Fix Accrual Intrest
004600211001      *                *            * calculation while reversal.
004700211001      * Nagamani S     * 18/06/2014 * RFS138009 - Gain on disposition not
004800211001      *                *            * calculated correctly when multiple
004900211001      *                *            * transactions posted on a single day
005000211001      *                *            * as variables are not initialized.
005100211001      * Suresh G.      * 04/07/2014 * RFS137239 - Accrued interest is not
005200211001      *                *            * calculated on the business day and
005300211001      *                *            * new exception handling report in
005400211001      *                *            * RCALCACBR in JOBDLYRPT3.
005500211001      * Nagamani S     * 27/06/2014 * RFS138302 - Accrued is not calculated
005600211001      *                *            * properly when accrual date is same as
005700211001      *                *            * the trade date of the buy which is
005800211001      *                *            * later reversed.
005900211001      * R Miguel       * 02/07/2014 * RFS 138422 - To retrieve Effective
006000211001      *                *            * date of the account to avoid MSGW.
006100211001      * Nagamani S     * 27/06/2014 * RFS138307 - Accrued is not calculated
006200211001      *                *            * for backdated trades.Also transactions
006300211001      *                *            * are not processed based on the trade
006400211001      *                *            * date.
006500211001      * R Miguel       * 16/07/2014 * RFS 138307 - Various defects fixes.
006600211001      * Nagamani S     * 15/07/2014 * RFS138564 - Accrued Interest is not
006700211001      *                *            * recalculated during reversal of SWI/TRI
006800211001      * Sairam DC      * 17/07/2014 * RFS138589 - Pass new mode 'RCALCACB' to
006900211001      *                *            * recalculate the ACB.
007000211001      * Nagamani S     * 23/07/2014 * RFS138950 - Gain and ACB not calculated
007100211001      *                *            * correctly for Full switch or when trade
007200211001      *                *            * date of switch equal to accrual date
007300211001      * Daisy L        * 01/08/2014 * RFS138950 - QC 38507 - reset the
007400211001      *                *            * lc_ACBAccrualFirst field in
007500211001      *                *            * CalSwoTroDisp.
007600211001      * R Miguel       * 12/08/2014 * RFS 139596 - Switches does not
007700211001      *                *            * consider the accrued interest on the
007800211001      *                *            * total MV and thus accumulated value
007900211001      *                *            * is wrong.
008000211001      * R Miguel       * 04/09/2014 * RFS 140268 - Get the true MV of the
008100211001      *                *            * account at account anniversary for
008200211001      *                *            * ACB recalculation.
008300211001      * Nagamani S     * 17/09/2014 * RFS139650 - SP FXACBTOT changes
008400211001      * R Miguel       * 30/09/2014 * RFS140909 - Allow disposition to
008500211001      *                *            * be calculated for transfers between
008600211001      *                *            * GI to GI or DI to DI.
008700211001      *                *            * Cash to Non-Cash transfers/switches
008800211001      *                *            * are not calculating disposition
008900211001      *                *            * when it is transfer-at-market.
009000211001      *                *            * At Cost transfers should be carried
009100211001      *                *            * to the In Account.
009200211001      * Daisy Ly       * 21/10/2014 * RFS141615 - treat distribution
009300211001      *                *            * trade with distribution option
009400211001      *                *            * = N as reinvest trade
009500211001      * Rupesh Kumar   * 28/11/2014 * RFS 142685 - Switch transaction
009600211001      *                *            * between different accounts,
009700211001      *                *            * different product types (GI to DI)
009800211001      *                *            * (DI to GI).
009900211001      * SAIRAM         * 28/08/2015 * RFS147036-Fixed Accrued Intrest
010000211001      *                *            * Re-calculation for GIC Backdated
010100211001      *                *            * Transactions.
010200211001      * R Miguel       * 11/19/2015 * RFS152370- Account anniversary
010300211001      *                *            * Accrued interest for backdated
010400211001      *                *            * redemption is incorrect.
010500211001      * Muthukumar S   * 13/05/2016 * RFS156118- YE15 - T5 GIA
010600211001      *                *            * Reporting Issue
010700211001      * Jeyarajan V    * 06/09/2018 * RFS1002626- Icorrect accrual
010800211001      *                *            * amount calculated in T5 GIC.
010900211001      * Kavya K    *  2019/02/25  * RFS181057 - Recompile for MFAACMDP  *
011000211001      * Ashwini B      * 2019/11/11 * RFS1017021- Gain calculation on
011100211001      *                *            * disposition transaction from GI/DI
011200211001      *                *            * not working as expected
011300211001      * Chaya SP       * 2020/02/11 * RFS185066 - Recompile for MFAGICDP
011400211001      * Jebastin S     * 2020/03/25 * RFS185233 - Update no ACB amount
011500211001      *                *            * adjustment for in a NR client
011600211001      *                *            * environment where rule value is
011700211001      *                *            * 3 and update Investor tax country
011800211001      *                *            * code information in MFAGIDIACP.
011900211001      * Kirthigaa S*  2020/04/17  * RFS186069 - Recompile for MFAACMDP *
012000211001      * Aarthi M   *  2020/08/10  * RFS186075 - Full year calculation  *
012100211001      * Muthukumar S   * 2020/10/12 * RFS1099872 - Gain amount calculated
012200211001      *                *            * was more than double due to the
012300211001      *                *            * processing order of Acc-Inv's
012400211001      *                *            * having multiple certificates
012500211001      * Aarthi M       * 2020/11/06 * RFS1106437- Defect fix RFS186075.*
012600211001      * Kavya K        * 2020/10/19 * RFS186497 - Recompile for MFAACMDP *
012700211001      * Jeyarajan V    * 2021/02/05 * RFS186962 - Gain issue fix.
012800211001      * Jeyarajan V    * 2021/02/17 * RFS1110593- Fix for ACB issue the
012900211001      *                *            * Gain on disposition is much
013000211001      *                *            * higher then expected.
013100211001      * Jeyarajan V    * 2021/03/17 * RFS1112629 -Fixed Accrued interest
013200211001      *                *            * values on account anniversary
013300211001      *                *            * recalculation.
013400211001      * Aarthi M       * 2021/03/18 * RFS186960 - Incorrect TD & PD for*
013500211001      *                *            * RCALC on Full Yr in Backend file.*
013600211001      * Aarthi M       * 2021/03/20 * RFS186964 - BUY with contr redem
013700211001      *                *            * XEGBUY should not appear Backend file.*
013800211001      * Aarthi M       * 2021/03/23 * RFS186963 - Redundant Accrual record
013900211001      *                *            * created after adjusting SWI trade.
014000211001      * Surendran C    * 2021/04/20 * RFS1114065 - Interest incorrect
014100211001      *                *            * when GIC Buy backdated prior to
014200211001      *                *            * account effective date.
014300211001      * Aarthi M       * 2021/06/11 * RFS1115174- ACB issue when GIC's INT
014400211001      *                *            * occurs on month-end/weekend.
014500211001      * Richie M       * 2021/08/05 * RFS1118903- ACB issues found during
014600211001      *                *            * testing of RFS: 1115174.
014700211001      * Richie M       * 2021/08/17 * RFS1116416- Account anniversary
014800211001      *                *            * Accrued interest are incorrect
014900211001      *                *            * when Attribute effective date
015000211001      *                *            * is provided in the account.
015100211001      * Rajesh R       * 2021/08/19 * RFS187080 - Modified program to
015200211001      *                *            * Provide ability to control if the capital
015300211001      *                *            * gain is calculated when an GIC interest
015400211001      *                *            * payment INT with payment type code "D"
015500211001      *                *            * is repurchased
015600211001      * Aarthi M       * 2021/09/15 * RFS1120406 - Accrued interest and Deposit
015700211001      *                *            * updated incorrectly when using
015800211001      *                *            * ICACB recalculation.
015900211001      ******************************************************************
016000211001      ******************************************************************
016100211001
016200211001       ENVIRONMENT DIVISION.
016300211001       CONFIGURATION SECTION.
016400211001       SOURCE-COMPUTER. IBM-AS400.
016500211001       OBJECT-COMPUTER. IBM-AS400.
016600211001       SPECIAL-NAMES. DATA-AREA  IS lc_DataArea
016700211001       LINKAGE TYPE IS PROCEDURE FOR "FXACBTOT".
016800211001      /
016900211001       INPUT-OUTPUT SECTION.
017000211001       FILE-CONTROL.
017100211001      /
017200211001       DATA DIVISION.
017300211001       FILE SECTION.
017400211001
017500211001       WORKING-STORAGE SECTION.
017600211001
017700211001      *RFS1115174 - Starts
017800211001        01 lc_GICVars.
017900211001           03  li_GICGrossamt             PIC S9(11)V9(2).
018000211001           03  li_NextBusDate             PIC S9(09).
018100211001      *RFS1115174 - Ends
018200211001       01  lc_Variables.
018300211001           03  li_Buscaldate             PIC S9(09).
018400211001           03  li_PrevBusDate            PIC S9(08).
018500211001           03  lc_PrevNextDate.
018600211001               05  li_PrevDate           PIC 9(08).
018700211001               05  li_NextDate           PIC 9(08).
018800211001           03  li_reeffectdate           PIC S9(09).
018900211001           03  li_reeffectdate1 FORMAT DATE "@Y%m%d".
019000211001           03  lc_reeffectdate2 REDEFINES li_reeffectdate1
019100211001                                         PIC X(08).
019200211001               05  lc_reeffectdateYYYY   PIC X(04).
019300211001               05  li_reeffectdateYYYY
019400211001                                REDEFINES lc_reeffectdateYYYY
019500211001                                         PIC S9(04).
019600211001               05  lc_reeffectdateMMDD   PIC X(04).
019700211001               05  li_reeffectdateMMDD
019800211001                                REDEFINES lc_reeffectdateMMDD
019900211001                                         PIC S9(04).
020000211001           03  li_reeffectdate3 REDEFINES lc_reeffectdate2
020100211001                                         PIC S9(08).
020200211001           03  li_reeffectdate4          PIC S9(09).
020300211001      * qc 36708 start
020400211001           03  li_effectdate1   FORMAT DATE "@Y%m%d".
020500211001           03  lc_effectdate2 REDEFINES li_effectdate1
020600211001                                         PIC X(08).
020700211001               05  lc_effectdateYYYY   PIC X(04).
020800211001               05  li_effectdateYYYY
020900211001                                REDEFINES lc_effectdateYYYY
021000211001                                         PIC S9(04).
021100211001               05  lc_effectdateMMDD   PIC X(04).
021200211001               05  li_effectdateMMDD
021300211001                                REDEFINES lc_effectdateMMDD
021400211001                                         PIC S9(04).
021500211001           03  li_effectdate3 REDEFINES lc_effectdate2
021600211001                                         PIC S9(08).
021700211001           03  li_effectdate4          PIC S9(09).
021800211001      * qc 36708 end
021900211001           03  li_CAccountNo             PIC S9(09) VALUE 0.
022000211001           03  li_AccrualAccount         PIC S9(09).
022100211001           03  lc_CProducttypecode       PIC X(03) VALUE " ".
022200211001           03  lc_CInvestmentCode        PIC X(05) VALUE " ".
022300211001           03  lc_investbacktrade        PIC X(05).
022400211001           03  li_PlacementSWOTRO        PIC S9(09).
022500211001           03  li_PlacementdateACP       PIC S9(09).
022600211001           03  li_PlacementdateX         PIC S9(09).
022700211001           03  li_PlacementdateINT       PIC S9(09).
022800211001           03  li_TransnoSWOTRO          PIC S9(09).
022900211001           03  li_TransnoACP             PIC S9(09).
023000211001           03  li_TransnoX               PIC S9(09).
023100211001           03  li_TransnoINT             PIC S9(09).
023200211001           03  li_AccrualAmt             PIC S9(11)V9(2).
023300211001           03  li_AcctInvAmt             PIC S9(11)V9(2).
023400211001           03  li_acctmrktvalue          PIC S9(11)V9(2).
023500211001           03  li_acctmrktvalueRem       PIC S9(11)V9(2).
023600211001           03  li_AccVal-GIO-TIO-Inv     PIC S9(11)V9(2).
023700211001           03  li_Accumulatevalue        PIC S9(11)V9(2).
023800211001           03  li_AmtNetdisp             PIC S9(11)V9(2).
023900211001      *RFS1002626-Starts
024000211001      *    03  li_ACBratio               PIC S9(7)V9(6).
024100211001      *    03  li_Netdiff                PIC S9(7)V9(6).
024200211001           03  li_ACBratio               PIC S9(7)V9(9).
024300211001           03  li_Netdiff                PIC S9(7)V9(9).
024400211001      *RFS1002626-Ends
024500211001           03  li_Gain                   PIC S9(11)V9(2).
024600211001           03  li_TotalMV                PIC S9(11)V9(2).
024700211001           03  li_Accountwknp            PIC S9(09).
024800211001           03  li_Accountwknp1           PIC S9(09) COMP-3.
024900211001           03  li_SWOTROAccnowknp        PIC S9(09).
025000211001           03  li_SWOTROaccnowknp1       PIC S9(09) COMP-3.
025100211001           03  li_Placementdatewknp      PIC S9(09).
025200211001138009     03  li_SWIAccountNo           PIC S9(09).
025300211001  |        03  li_SWIPlacementDate       PIC S9(09).
025400211001138009     03  li_SWITransNo             PIC S9(09).
025500211001138564     03  li_TradeDateCmp           PIC S9(09).
025600211001138564     03  li_EffDateCmp             PIC S9(09).
025700211001           03  li_Transnowknp            PIC S9(09).
025800211001           03  li_Tradedatewknp          PIC S9(09).
025900211001138307     03  li_TradedateTrans         PIC S9(09).
026000211001           03  li_Processdatewknp        PIC S9(09).
026100211001138302     03  li_EffProcessDate         PIC S9(09).
026200211001138302     03  li_AccrualDate            PIC S9(09).
026300211001           03  lc_Transtypecodewknp      PIC X(03).
026400211001           03  lc_Contredemwknp          PIC X(06).
026500211001           03  lc_Contrredem-SWOTRO      PIC X(06).
026600211001           03  lc_Splitopt-SWOTRO        PIC X(01).
026700211001           03  LC_SPLITOPTIONWKNP        PIC X(01).
026800211001138009     03  li_Grossamt               PIC S9(11)V9(2).
026900211001           03  li_Grossamtwknp           PIC S9(11)V9(2).
027000211001           03  li_GrossamtSWOTRO         PIC S9(11)V9(2).
027100211001           03  li_Netamtwknp             PIC S9(11)V9(2).
027200211001           03  li_ClosingUnitWknp        PIC S9(11)V9(2).
027300211001           03  li_ClosingUnit-SWOTRO     PIC S9(11)V9(2).
027400211001           03  li_NetamtSWOTRO           PIC S9(11)V9(2).
027500211001           03  li_Effectivedatewknp      PIC S9(09).
027600211001           03  li_EffectdateSWOTRO       PIC S9(09).
027700211001           03  li_TradeSWOTRO            PIC S9(09).
027800211001           03  li_EffectdateSWOTROSplit.
027900211001               05  li_filler             PIC S9(01).
028000211001               05  li_EffectSWOTROYYYY   PIC S9(04).
028100211001               05  li_EffectSWOTROMMDD   PIC S9(04).
028200211001           03  li_EffectivedateRVS       PIC S9(09).
028300211001           03  li_Tradedatervs           PIC S9(09).
028400211001           03  lc_productTypeRulewknp    PIC X(01).
028500211001           03  lc_productTypeRule-SWI    PIC X(01).
028600211001           03  lc_productTypeRule-TRI    PIC X(01).
028700211001           03  lc_ProducttypeRule-SWOTRO PIC X(01).
028800211001           03  lc_producttyperule        PIC X(01).
028900211001           03  lc_Dispoptioncode         PIC X(01).
029000211001141615         88 lb_ReinvestTrade       VALUE "R", "N".
029100211001      * RFS 1110593 - begin
029200211001           03  lc_INTTradeAttachToFullSell PIC X(01).
029300211001               88 lb_INTAttachFullSellYes VALUE "Y".
029400211001      *        88 lb_INTAttachFullSellNo  VALUE "N", " ".
029500211001      * RFS 1110593 - end
029600211001           03  lc_Investmentcodewknp     PIC X(05).
029700211001           03  lc_Accttypecodewknp       PIC X(05).
029800211001      * RFS 140909 - begin RM
029900211001           03  lc_AcctTypeRuleWknp       PIC X(01).
030000211001      * RFS 140909 - end   RM
030100211001           03  lc_Accttypecode-SWOTRO    PIC X(05).
030200211001           03  lc_AcctypeRule-SWOTRO     PIC X(01).
030300211001           03  lc_Nominee-SWOTRO         PIC X(01).
030400211001           03  lc_transAtAverage         PIC X(01).
030500211001           03  lc_taxableeventind        PIC X(01).
030600211001           03  li_AccountNo              PIC S9(09).
030700211001           03  lc_InvestmentCode         PIC X(05).
030800211001           03  ld_Placement-Date         PIC S9(09).
030900211001           03  li_TransNo                PIC S9(09).
031000211001           03  lc_Process-Mode           PIC X(08).
031100211001           03  lc_allowtrade             PIC X(01).
031200211001           03  lc_allowtrade1            PIC X(01).
031300211001           03  li_Charge                 PIC S9(09)V9(2).
031400211001           03  li_LatestACBAmt           PIC S9(09)V9(2).
031500211001137241     03  li_ACBAmount              PIC S9(09)V9(2).
031600211001137241     03  li_PrevACB                PIC S9(09)V9(2).
03170021100136708      03  li_reacbAmt               PIC S9(09)V9(2).
031800211001           03  li_latestseqno            PIC S9(09).
031900211001           03  li_Accprocessdate         FORMAT DATE "@Y%m%d".
032000211001           03  li_reeffectfordat         FORMAT DATE "@Y%m%d".
03210021100136708      03  li_effectfordat           FORMAT DATE "@Y%m%d".
032200211001           03  li_Accprocessdate1        FORMAT DATE "@Y%m%d".
032300211001           03  li_Accprocessdate2        FORMAT DATE "@Y%m%d".
032400211001           03  li_Startdeposit           PIC S9(11)V9(02) COMP-3.
032500211001           03  li_Startdisp              PIC S9(11)V9(02) COMP-3.
032600211001           03  li_Startgain              PIC S9(11)V9(02) COMP-3.
032700211001           03  li_StartAccruedINT        PIC S9(11)V9(02) COMP-3.
032800211001           03  lc_Mode                   PIC X(01) VALUE SPACES.
032900211001           03  li_TotDeposit             PIC S9(11)V9(02) COMP-3.
033000211001           03  li_TotDisp                PIC S9(11)V9(02) COMP-3.
033100211001           03  li_TotGain                PIC S9(11)V9(02) COMP-3.
033200211001           03  li_Tot-AccruedINT         PIC S9(11)V9(02) COMP-3.
033300211001      * RFS 140909 - begin RM
033400211001           03  li_ToAcctDeposit          PIC S9(11)V9(02) COMP-3.
033500211001           03  li_ToAcctDisp             PIC S9(11)V9(02) COMP-3.
033600211001           03  li_ToAcctGain             PIC S9(11)V9(02) COMP-3.
033700211001           03  li_ToAcctAccrInt          PIC S9(11)V9(02) COMP-3.
033800211001      * RFS 140909 - end   RM
033900211001           03  li_Accrint                PIC S9(11)V9(02).
034000211001           03  li_oldaccint              PIC S9(11)V9(02).
034100211001           03  li_ACPCount               PIC S9(05).
034200211001           03  li_CountACP               PIC S9(05).
034300211001           03  li_CountGIC               PIC S9(05).
034400211001           03  li_CountDII               PIC S9(05).
034500211001           03  li_Gidicount              PIC S9(05).
034600211001           03  lc_filename               PIC X(10).
034700211001           03  li_Tradedate              PIC S9(09).
034800211001      * QC 36467-Starts
034900211001           03  li_CountMKT               PIC S9(05).
035000211001           03  li_MktTradeDate           PIC S9(09).
035100211001           03  li_MKTvalue               PIC S9(11)V9(02).
035200211001           03  li_MarketValue            PIC S9(11)V9(02).
035300211001           03  ld_DateCCYYMMDD           PIC S9(09).
035400211001           03  li_Trade-Date             PIC S9(09).
035500211001           03  li_CertificateID          PIC S9(10) VALUE 0.
035600211001           03  li_MKTValueMode           PIC X(01)  VALUE "P".
035700211001           03  lc_InvestmentNo           PIC X(05)  VALUE SPACES.
035800211001           03  lc_PrevInvestmentNo       PIC X(05)  VALUE SPACES.
035900211001138950     03  lc_PrevInvestmentNo1      PIC X(05)  VALUE SPACES.
036000211001           03  li_RetrnAccrualInterest   PIC 9(11)V9(2).
036100211001147036     03  li_BackAccrualInterest    PIC 9(11)V9(2).
036200211001147036     03  li_BKTradedatewknp        PIC S9(09).
036300211001147036     03  lc_BK-Invt-Code           PIC X(05).
036400211001147036     03  lc_BK-Investment          PIC X(05).
036500211001           03  li_AcctMrktValue1         PIC 9(11)V9(2).
036600211001      * RFS137239 - Starts
036700211001           03  li_AccountNum             PIC S9(09).
036800211001           03  li_Account-Num            PIC S9(09).
036900211001           03  lc_AccAttributeCd         PIC X(05).
037000211001           03  li_ExpiryDate             PIC S9(09).
037100211001138589*    03  li_GIDIACP-ProcessDt      PIC S9(09).
037200211001138589     03  li_GIDIACP-ProcessDt      PIC S9(08) VALUE 0.
037300211001           03  ld_EffectiveDate          PIC S9(09).
037400211001           03  li_Effective-Date         PIC S9(09).
037500211001138589     03  ld_ACMDP-EffectivDt       PIC S9(08) VALUE 0.
037600211001138589     03  ld_EffectivDt-YYYY        PIC S9(04) VALUE 0.
037700211001138589     03  ld_ProcessDt-YYYY         PIC S9(04) VALUE 0.
037800211001138589     03  ld_GIDIACP-Year           PIC S9(05) VALUE 0.
037900211001138589     03  ld_Year-YYYY              PIC S9(04) VALUE 0.
038000211001           03  li_CountATP               PIC S9(05).
038100211001           03  li_CountREJ               PIC S9(05).
038200211001           03  li_SystemTime             PIC S9(08) VALUE 0.
038300211001           03  li_SystemDate             PIC S9(08) VALUE 0.
038400211001           03  lc_ChangeCategory         PIC X(20)  VALUE SPACES.
038500211001           03  li_InvestorNo             PIC S9(09) VALUE 0.
038600211001      * RFS1002626-Starts
038700211001           03  li_CurrEffectdate         PIC S9(09) VALUE 0.
038800211001           03  li_PrevEffectiveDate      PIC S9(09) VALUE 0.
038900211001           03  li_INTcharge              PIC S9(09)V9(2) VALUE 0.
039000211001           03  li_OrigTradedatewknp      PIC S9(09) VALUE 0.
039100211001           03  li_OrigPlacementdatewknp  PIC S9(09) VALUE 0.
039200211001           03  li_OrigTransnowknp        PIC S9(09) VALUE 0.
039300211001           03  li_PrevEffectDateYYYY     PIC S9(04) VALUE 0.
039400211001           03  li_ProcessSWOTRO          PIC S9(09).
039500211001           03  li_RetrnAccrualInt        PIC S9(11)V9(2).
039600211001      * RFS186075 - Starts
039700211001           03  li_AccAttEffecDate        PIC S9(8)  VALUE 0.
039800211001      * RFS186075 - Ends
039900211001      * RFS1106437- Starts
040000211001           03  ld_LastAccrualYear        PIC S9(04) VALUE 0.
040100211001      * RFS1106437- Ends
040200211001      * RFS1002626-Ends
040300211001      * RFS185233 - Begins
040400211001           03 lc_TaxCountryCode          PIC X(03) VALUE SPACES.
040500211001           03 lc_TaxProvinceCode         PIC X(03) VALUE SPACES.
040600211001      * RFS185233 - Ends
040700211001      * RFS187080 - Starts
040800211001           03 lc_PaymenTypeCode          PIC X(01) VALUE SPACES.
040900211001           03 lc_INTTradeAttachToBuy     PIC X(01).
041000211001                88 lb_INTAttachToBuyYes  VALUE "Y".
041100211001                88 lb_INTAttachToBuyNo   VALUE "N", " ".
041200211001      * RFS187080 - Ends
041300211001
041400211001       01  lc_Job_Attribute.
041500211001           03  lc_JobName                PIC X(10)  VALUE SPACES.
041600211001           03  lc_UserID                 PIC X(10)  VALUE SPACES.
041700211001           03  lc_JobNo                  PIC X(6)   VALUE SPACES.
041800211001
041900211001       01  ld_EffectiveDt                FORMAT DATE "@Y%m%d".
042000211001      * RFS137239 - Ends
042100211001
042200211001
042300211001       01  lc_MKTVALTD_Parms.
042400211001         03  li_MKTV_Date                PIC  9(08).
042500211001         03  li_MKTV_AccountNo           PIC  9(09).
042600211001         03  lc_MKTV_InvestmentCode      PIC  X(05).
042700211001         03  li_MKTV_ValueInvestmentCur  PIC S9(11)V9(2).
042800211001         03  li_MKTV_MarketValueBase     PIC S9(11)V9(2).
042900211001         03  li_MKTV_BookValueBase       PIC S9(11)V9(2).
043000211001         03  li_MKTV_BookValueExchange   PIC S9(02)V9(7).
043100211001         03  li_MKTV_TranClosUnitBal     PIC S9(10)V9(3).
043200211001         03  li_MKTV_BaseUnitPrice       PIC S9(05)V9(4).
043300211001         03  li_MKTV_ValueBaseCurrency   PIC S9(11)V9(2).
043400211001         03  lc_MKTV_ErrorCode           PIC  X(01).
043500211001         03  lc_MKTV_DateInd             PIC  X(01).
043600211001
043700211001       01  ld_DateYYYYMMDD               FORMAT DATE "@Y%m%d".
043800211001      * QC 36467-Ends
043900211001
044000211001       01  lc_ProcessDateDA.
044100211001           03 lc_ProcessDate              PIC X(08).
044200211001           03 li_ProcessDate REDEFINES lc_ProcessDate
044300211001                                          PIC S9(08).
044400211001           03 li_processdate1.
044500211001              05 li_ProcessDateYYYY       PIC S9(04).
044600211001              05 li_ProcessDateMMDD       PIC S9(04).
044700211001              05 lc_ProcessDateMMDD REDEFINES li_ProcessDateMMDD
044800211001                                          PIC X(04).
044900211001       01  li_ProcessDateYYYY1            PIC S9(05).
045000211001      * RFS138564 - START
045100211001       01  li_processdate2                PIC S9(09).
045200211001      * RFS138564 - END
045300211001
045400211001       01  lc_GICSysParms.
045500211001           03  lc_Filler1                 PIC X(06).
045600211001           03  lc_ACBT5SetupValue         PIC X(01).
045700211001      *RFS186075 - Starts
045800211001      *    03  lc_Filler2                 PIC X(83).
045900211001           03  lc_Filler2                 PIC X(03).
046000211001           03  lc_FullYear                PIC X(01).
046100211001      *RFS187080 - Starts
046200211001      *    03  lc_Filler3                 PIC X(79).
046300211001           03  lc_CpgOnRIntWithPayTypD    PIC X(01).
046400211001           03  lc_Filler3                 PIC X(78).
046500211001      *RFS187080 - End
046600211001      *RFS186075 - Ends
046700211001
046800211001       01  lc_DeleteTables                PIC X(500).
046900211001       01  li_TradedatervsSplit.
047000211001           03  li_Filler                  PIC S9(01).
047100211001           03  li_TradeRVSYYYY            PIC S9(04).
047200211001           03  li_TradeRVSMMDD            PIC S9(04).
047300211001
047400211001       01  li_EffectivedatervsSplit.
047500211001           03  li_Filler                  PIC S9(01).
047600211001           03  li_EffectiveRVSYYYY        PIC S9(04).
047700211001           03  li_EffectiveRVSMMDD        PIC S9(04).
047800211001
047900211001       01  li_Tradedatesplit.
048000211001           03  li_Filler                  PIC S9(01).
048100211001           03  li_TradeYYYY               PIC S9(04).
048200211001           03  li_TradeMMDD               PIC S9(04).
048300211001
048400211001      * RFS1002626-Starts
048500211001       01  li_ProcessDateSplit.
048600211001           03  li_Filler                  PIC S9(01).
048700211001           03  li_ProcessYYYY             PIC S9(04).
048800211001           03  li_ProcessMMDD             PIC S9(04).
048900211001      * RFS1002626-Ends
049000211001
049100211001      *RFS1118903 - Starts
049200211001      * RFS1116416 - begin
049300211001       01  li_TradeDateTrns.
049400211001      *    03  li_Filler                  PIC S9(01).
049500211001      *    03  li_TradeDateTrnsYYYY       PIC S9(04).
049600211001      *    03  li_TradeDateTrnsMMDD       PIC S9(04).
049700211001           03  li_TradeDateTrns1 FORMAT DATE "@Y%m%d".
049800211001           03  lc_TradeDateTrns2 REDEFINES li_TradeDateTrns1
049900211001                                             PIC X(08).
050000211001               05 lc_TradeDateTrnsYYYY       PIC X(04).
050100211001               05 li_TradeDateTrnsYYYY REDEFINES lc_TradeDateTrnsYYYY
050200211001                                             PIC S9(04).
050300211001               05 lc_TradeDateTrnsMMDD       PIC X(04).
050400211001               05 li_TradeDateTrnsMMDD REDEFINES lc_TradeDateTrnsMMDD
050500211001                                             PIC S9(04).
050600211001      * RFS1116416 - end
050700211001      *RFS1118903 - Ends
050800211001
050900211019      *RFS1120406 - Starts
051000211019           03  li_AccAttEffecDate1 FORMAT DATE "@Y%m%d".
051100211019           03  lc_AccAttEffecDate2 REDEFINES li_AccAttEffecDate1
051200211019                                             PIC X(08).
051300211019               05 lc_AccAttEffecYYYY         PIC X(04).
051400211019               05 li_AccAttEffecYYYY REDEFINES lc_AccAttEffecYYYY
051500211019                                             PIC S9(04).
051600211019               05 lc_AccAttEffecMMDD         PIC X(04).
051700211019               05 li_AccAttEffecMMDD REDEFINES lc_AccAttEffecMMDD
051800211019                                             PIC S9(04).
051900211019      *RFS1120406 - Ends
052000211019
052100211001       01  li_TradeSWOTROSplit.
052200211001           03  li_Filler                  PIC S9(01).
052300211001           03  li_TradeSWOTROYYYY         PIC S9(04).
052400211001           03  li_TradeSWOTROMMDD         PIC S9(04).
052500211001
052600211001       01  li_EffectivedateSplit.
052700211001           03  li_Filler                  PIC S9(01).
052800211001           03  li_EffectiveYYYY           PIC S9(04).
052900211001           03  li_EffectiveMMDD           PIC S9(04).
053000211001
053100211001       01  li_checkaccrualdate FORMAT DATE "@Y%m%d".
053200211001       01  lc_checkaccrualdate1 REDEFINES li_checkaccrualdate
053300211001                                          PIC X(08).
053400211001           03 lc_checkaccrualYYYY         PIC X(04).
053500211001           03 lc_checkaccrualMMDD         PIC X(04).
053600211001
053700211001       01  lc_MFAGIDIACP_Rec.
053800211001       COPY DD-ALL-FORMATS OF MFAGIDIACP.
053900211001
054000211001       01  lc_MFATRNP_Rec.
054100211001       COPY DD-ALL-FORMATS OF MFATRNP.
054200211001       01  lc_Constants.
054300211001           03  lnc_GE-MODE                PIC X(02) VALUE "GE".
054400211001           03  lnc_DE-MODE                PIC X(02) VALUE "DE".
054500211001           03  lnc_JOBDAILY               PIC X(08) VALUE 'JOBDAILY'.
054600211001           03  lnc_TRNPST                 PIC X(08) VALUE 'TRNPST'.
054700211001           03  lnc_TRNRVS                 PIC X(08) VALUE 'TRNRVS'.
054800211001           03  lnc_GIC                    PIC X(03) VALUE 'GIC'.
054900211001           03  lnc_BUY                    PIC X(03) VALUE 'BUY'.
055000211001           03  lnc_SEL                    PIC X(03) VALUE 'SEL'.
055100211001           03  lnc_SWI                    PIC X(03) VALUE 'SWI'.
055200211001           03  lnc_SWO                    PIC X(03) VALUE 'SWO'.
055300211001           03  lnc_TRI                    PIC X(03) VALUE 'TRI'.
055400211001           03  lnc_TRO                    PIC X(03) VALUE 'TRO'.
055500211001           03  lnc_INT                    PIC X(03) VALUE 'INT'.
055600211001           03  lnc_Y                      PIC X(01) VALUE 'Y'.
055700211001           03  lnc_N                      PIC X(01) VALUE 'N'.
055800211001           03  lnc_A                      PIC X(01) VALUE 'A'.
055900211001138302     03  lnc_V                      PIC X(01) VALUE 'V'.
056000211001           03  lnc_R                      PIC X(01) VALUE 'R'.
056100211001           03  lnc_D                      PIC X(01) VALUE 'D'.
056200211001           03  lnc_U                      PIC X(01) VALUE 'U'.
056300211001           03  lnc_zero                   PIC X(01) VALUE '0'.
056400211001           03  lnc_zeros                  PIC X(02) VALUE '00'.
056500211001           03  lnc_13                     PIC X(02) VALUE '13'.
056600211001           03  lnc_2                      PIC X(01) VALUE '2'.
056700211001           03  lnc_1                      PIC X(01) VALUE '1'.
056800211001           03  lnc_6                      PIC X(01) VALUE '6'.
056900211001           03  lnc_7                      PIC X(01) VALUE '7'.
057000211001           03  lnc_3                      PIC X(01) VALUE '3'.
057100211001           03  lnc_01504                  PIC X(05) VALUE '01504'.
057200211001           03  lnc_WKGICINT               PIC X(08) VALUE 'WKGICINT'.
057300211001           03  lnc_WKDIIINT               PIC X(08) VALUE 'WKDIIINT'.
057400211001           03  lnc_WKACCRINT              PIC X(09) VALUE 'WKACCRINT'.
05750021100136467      03  lc_DateType                PIC X(01) VALUE "T".
05760021100136467      03  lnc_SE                     PIC X(02) VALUE "SE".
05770021100136467      03  lnc_P                      PIC X(01) VALUE 'P'.
057800211001      * RFS 138307 - begin
057900211001           03  lnc_V2                     PIC X(02) VALUE "V2".
05800021100107021      03  lnc_V3                     PIC X(02) VALUE "V3".
058100211001      * RFS 138307 - end
058200211001      * RFS137239 - Starts
058300211001           03  lnc_ICACB                  PIC X(05) VALUE 'ICACB'.
058400211001           03  lnc_RCALCACB               PIC X(08) VALUE 'RCALCACB'.
058500211001           03  lnc_FXACCACB               PIC X(08) VALUE 'FXACCACB'.
058600211001           03  lnc_AccACBinsert           PIC X(15) VALUE
058700211001                                                    'ACCT ACB INSERT'.
058800211001           03  lnc_AccACBdelete           PIC X(15) VALUE
058900211001                                                    'ACCT ACB DELETE'.
059000211001      * RFS137239 - Ends
059100211001
059200211001
059300211001       01  WS-ERR-CODE                    PIC X(2) VALUE SPACES.
059400211001         88  lnc_Err_OK                 VALUE "  ".
059500211001         88  lnc_Err_01                 VALUE "01".
059600211001         88  lnc_Err_02                 VALUE "02".
059700211001         88  lnc_Err_03                 VALUE "03".
059800211001         88  lnc_Err_04                 VALUE "04".
059900211001         88  lnc_Err_05                 VALUE "05".
060000211001         88  lnc_Err_06                 VALUE "06".
060100211001         88  lnc_Err_07                 VALUE "07".
060200211001         88  lnc_Err_08                 VALUE "08".
060300211001         88  lnc_Err_09                 VALUE "09".
060400211001         88  lnc_Err_10                 VALUE "10".
060500211001         88  lnc_Err_11                 VALUE "11".
060600211001         88  lnc_Err_12                 VALUE "12".
060700211001         88  lnc_Err_13                 VALUE "13".
060800211001         88  lnc_Err_14                 VALUE "14".
060900211001         88  lnc_Err_15                 VALUE "15".
061000211001         88  lnc_Err_16                 VALUE "16".
061100211001         88  lnc_Err_17                 VALUE "17".
061200211001         88  lnc_Err_18                 VALUE "18".
061300211001         88  lnc_Err_19                 VALUE "19".
061400211001         88  lnc_Err_20                 VALUE "20".
061500211001         88  lnc_Err_21                 VALUE "21".
061600211001         88  lnc_Err_22                 VALUE "22".
061700211001         88  lnc_Err_23                 VALUE "23".
061800211001         88  lnc_Err_24                 VALUE "24".
061900211001         88  lnc_Err_25                 VALUE "25".
062000211001         88  lnc_Err_26                 VALUE "26".
062100211001         88  lnc_Err_27                 VALUE "27".
062200211001         88  lnc_Err_28                 VALUE "28".
062300211001         88  lnc_Err_29                 VALUE "29".
062400211001         88  lnc_Err_30                 VALUE "30".
062500211001         88  lnc_Err_31                 VALUE "31".
062600211001         88  lnc_Err_32                 VALUE "32".
062700211001         88  lnc_Err_33                 VALUE "33".
062800211001         88  lnc_Err_34                 VALUE "34".
062900211001         88  lnc_Err_35                 VALUE "35".
063000211001         88  lnc_Err_36                 VALUE "36".
063100211001         88  lnc_Err_37                 VALUE "37".
063200211001         88  lnc_Err_38                 VALUE "38".
063300211001         88  lnc_Err_39                 VALUE "39".
063400211001         88  lnc_Err_40                 VALUE "40".
063500211001         88  lnc_Err_41                 VALUE "41".
063600211001         88  lnc_Err_42                 VALUE "42".
063700211001         88  lnc_Err_43                 VALUE "43".
063800211001         88  lnc_Err_44                 VALUE "44".
063900211001         88  lnc_Err_45                 VALUE "45".
064000211001         88  lnc_Err_46                 VALUE "46".
064100211001         88  lnc_Err_47                 VALUE "47".
064200211001         88  lnc_Err_48                 VALUE "48".
064300211001         88  lnc_Err_49                 VALUE "49".
064400211001      * QC 36467- Start
064500211001         88  lnc_Err_50                 VALUE "50".
064600211001         88  lnc_Err_51                 VALUE "51".
064700211001         88  lnc_Err_52                 VALUE "52".
064800211001         88  lnc_Err_53                 VALUE "53".
064900211001         88  lnc_Err_54                 VALUE "54".
065000211001         88  lnc_Err_55                 VALUE "55".
065100211001         88  lnc_Err_56                 VALUE "56".
065200211001         88  lnc_Err_57                 VALUE "57".
065300211001         88  lnc_Err_58                 VALUE "58".
065400211001      * QC 36467- End
065500211001      * RFS137239 - Start
065600211001         88  lnc_Err_59                 VALUE "59".
065700211001         88  lnc_Err_60                 VALUE "60".
065800211001         88  lnc_Err_61                 VALUE "61".
065900211001         88  lnc_Err_62                 VALUE "62".
066000211001         88  lnc_Err_63                 VALUE "63".
066100211001         88  lnc_Err_64                 VALUE "64".
066200211001         88  lnc_Err_65                 VALUE "65".
066300211001         88  lnc_Err_66                 VALUE "66".
066400211001         88  lnc_Err_67                 VALUE "67".
066500211001      * RFS137239 - End
066600211001138589   88  lnc_Err_68                 VALUE "68".
066700211001      * RFS140268 begin - RM
066800211001         88  lnc_Err_69                 VALUE "69".
066900211001         88  lnc_Err_70                 VALUE "70".
067000211001         88  lnc_Err_71                 VALUE "71".
067100211001      * RFS140268 end   - RM
067200211001      * RFS1002626-Starts
067300211001         88  lnc_Err_72                 VALUE "72".
067400211001         88  lnc_Err_73                 VALUE "73".
067500211001         88  lnc_Err_74                 VALUE "74".
067600211001         88  lnc_Err_75                 VALUE "75".
067700211001         88  lnc_Err_76                 VALUE "76".
067800211001         88  lnc_Err_77                 VALUE "77".
067900211001         88  lnc_Err_78                 VALUE "78".
068000211001         88  lnc_Err_79                 VALUE "79".
068100211001         88  lnc_Err_80                 VALUE "80".
068200211001      *RFS185233 - Begins
068300211001         88  lnc_Err_81                 VALUE "81".
068400211001      *RFS185233 - Ends
068500211001      * RFS1002626-Ends
068600211001      *RFS1115174 - Starts
068700211001         88  lnc_Err_82                 VALUE "82".
068800211001         88  lnc_Err_83                 VALUE "83".
068900211001      *RFS1115174 - Ends
069000211001
069100211001
069200211001       01  lc_IsLeapDateFlag             PIC X(01).
069300211001           88  lncc_IsLeapDateNo                 VALUE "N".
069400211001           88  lncc_IsLeapDateYes                VALUE "Y".
069500211001
069600211001       01  lc_TransFoundACP              PIC X(01).
069700211001           88  lc_TransFoundACPNo                VALUE "N".
069800211001           88  lc_TransFoundACPYes               VALUE "Y".
069900211001
070000211001       01  lc_AccAmt                     PIC X(1) VALUE 'N'.
070100211001           88  lc_AccAmtYes                       VALUE 'Y'.
070200211001           88  lc_AccAmtNo                        VALUE 'N'.
070300211001
070400211001       01  lc_Recalcul-AccInt            PIC X(1) VALUE 'N'.
070500211001           88  lc_Recalcul-AccIntYes              VALUE 'Y'.
070600211001           88  lc_Recalcul-AccIntNo               VALUE 'N'.
070700211001
070800211001       01  lc_dispositionTrans           PIC X(1) VALUE 'N'.
070900211001           88  lc_dispositionTransYes             VALUE 'Y'.
071000211001           88  lc_dispositionTransNo              VALUE 'N'.
071100211001
071200211001       01  lc_CalcaccrualLoad            PIC X(1) VALUE 'N'.
071300211001           88  lc_CalcaccrualLoadYes              VALUE 'Y'.
071400211001           88  lc_CalcaccrualLoadNo               VALUE 'N'.
071500211001
071600211001       01  lc_CalcaccrualInt             PIC X(1) VALUE 'Y'.
071700211001           88  lc_CalcaccrualIntYes               VALUE 'Y'.
071800211001           88  lc_CalcaccrualIntNo                VALUE 'N'.
071900211001
072000211001       01  lc_NondispositionTrans        PIC X(1) VALUE 'N'.
072100211001           88  lc_NondispositionTransYes          VALUE 'Y'.
072200211001           88  lc_NondispositionTransNo           VALUE 'N'.
072300211001
072400211001       01  lc_NondispTrans               PIC X(1) VALUE 'N'.
072500211001           88  lc_NondispTransYes                 VALUE 'Y'.
072600211001           88  lc_NondispTransNo                  VALUE 'N'.
072700211001
072800211001       01  lc_dispTransSWITRI            PIC X(1) VALUE 'N'.
072900211001           88  lc_dispTransSWITRIYes              VALUE 'Y'.
073000211001           88  lc_dispTransSWITRINo               VALUE 'N'.
073100211001
073200211001       01  lc_dispTransSWOTRO            PIC X(1) VALUE 'N'.
073300211001           88  lc_dispTransSWOTROYes              VALUE 'Y'.
073400211001           88  lc_dispTransSWOTRONo               VALUE 'N'.
073500211001
073600211001       01  lc_FullTransfer               PIC X(1) VALUE 'N'.
073700211001           88  lc_FullTransferYes                 VALUE 'Y'.
073800211001           88  lc_FullTransferNo                  VALUE 'N'.
073900211001
074000211001       01  lc_TransferAtCost             PIC X(1) VALUE 'N'.
074100211001           88  lc_TransferAtCostYes               VALUE 'Y'.
074200211001           88  lc_TransferAtCostNo                VALUE 'N'.
074300211001
074400211001       01  lc_TransferAtMarket           PIC X(1) VALUE 'N'.
074500211001           88  lc_TransferAtMarketYes             VALUE 'Y'.
074600211001           88  lc_TransferAtMarketNo              VALUE 'N'.
074700211001
074800211001       01  lc_Days                       PIC X(1) VALUE 'N'.
074900211001           88  lb-Businessday                     VALUE 'Y'.
075000211001           88  lb-NonBusinessday                  VALUE 'N'.
075100211001
075200211001       01  lc_EofRec                     PIC X(1) VALUE 'N'.
075300211001           88  lb-NO-MORE-REC                     VALUE 'Y'.
075400211001           88  lb-MORE-REC                        VALUE 'N'.
075500211001
075600211001       01  lb_EofAct-Cursor              PIC X(1) VALUE 'N'.
075700211001           88  lb_EofAct-Cursoryes                VALUE 'Y'.
075800211001           88  lb_EofAct-CursorNo                 VALUE 'N'.
075900211001
076000211001       01  lb_eofAcc-Amt                 PIC X(1) VALUE 'N'.
076100211001           88  lb_eofAcc-Amtyes                   VALUE 'Y'.
076200211001           88  lb_eofAcc-Amtno                    VALUE 'N'.
076300211001
076400211001       01  lb_Eof-Wktrnp                 PIC X(1) VALUE 'N'.
076500211001           88  lb_Eof-Wktrnpyes                   VALUE 'Y'.
076600211001           88  lb_Eof-WktrnpNo                    VALUE 'N'.
076700211001
076800211001       01  lc_SWI-SWO-Account-Same       PIC X(1) VALUE 'N'.
076900211001           88  lc_SWI-SWO-Account-Same-Yes        VALUE 'Y'.
077000211001           88  lc_SWI-SWO-Account-Same-No         VALUE 'N'.
077100211001
077200211001       01  lc_EofTransaction             PIC X(1) VALUE 'N'.
077300211001           88  li_Transaction_ExhustedYes         VALUE 'Y'.
077400211001           88  li_Transaction_ExhustedNo          VALUE 'N'.
077500211001
07760021100136467  01  lc_eofAcc-Inv                 PIC X(1) VALUE 'N'.
07770021100136467      88  lb_eofAcc-InvYes                   VALUE 'Y'.
07780021100136467      88  lb_eofAcc-InvNo                    VALUE 'N'.
077900211001
078000211001137241 01  lc_ACBAccrualFirst            PIC X(1) VALUE 'Y'.
078100211001137241     88  lb_ACBAccrualFirstYes              VALUE 'Y'.
078200211001137241     88  lb_ACBAccrualFirstNo               VALUE 'N'.
078300211001
078400211001      * RFS137239 - Starts
078500211001       01  lc_RecalcMode                 PIC X(1) VALUE 'N'.
078600211001           88  lb_RecalcModeYes                   VALUE 'Y'.
078700211001           88  lb_RecalcModeNo                    VALUE 'N'.
078800211001
078900211001       01  lc_REJrecordMode              PIC X(1) VALUE 'N'.
079000211001           88  lb_REJrecModeYes                   VALUE 'Y'.
079100211001           88  lb_REJrecModeNo                    VALUE 'N'.
079200211001
079300211001       01  lc_EndofCursor                PIC X(1) VALUE 'N'.
079400211001           88  lb_EndofCursorTrue                 VALUE 'Y'.
079500211001           88  lb_EndofCursorFlase                VALUE 'N'.
079600211001
079700211001       01  lc_AccrualAmt                 PIC X(1) VALUE 'N'.
079800211001           88  lb_AccrualAmtYes                   VALUE 'Y'.
079900211001           88  lb_AccrualAmtNo                    VALUE 'N'.
080000211001
080100211001       01  lc_ProcessMode                PIC X(1) VALUE 'N'.
080200211001           88  lb_ProcessYes                      VALUE 'Y'.
080300211001           88  lb_ProcessNo                       VALUE 'N'.
080400211001
080500211001       01  lc_CallINTCLC                 PIC X(1) VALUE 'N'.
080600211001           88  lb_CallINTCLCYes                   VALUE 'Y'.
080700211001           88  lb_CallINTCLCNo                    VALUE 'N'.
080800211001      * RFS137239 - Ends
080900211001
081000211001      * RFS 140268 - begin RM
081100211001       01  lc_MktVal_Account.
081200211001           03 li_AcctNo                  PIC S9(09) VALUE 0.
081300211001           03 lc_InvCode                 PIC X(05) VALUE SPACES.
081400211001           03 li_ActMktVal               PIC S9(11)V9(2) VALUE 0.
081500211001           03 lc_ActInvEOF               PIC X(01) VALUE SPACES.
081600211001              88 ActInvEofYes            VALUE "Y".
081700211001              88 ActInvEofNo             VALUE "N".
081800211001
081900211001      * RFS 140268 - end   RM
082000211001      * External CL Calls using QCMDEXC.
082100211001       01  lc_CPYF-File.
082200211001         03  lc_CL-Command-1.
082300211001           05  lc_CL-Command-1A       PIC X(60) VALUE
082400211001               "CPYF FROMFILE(QTEMP/WKGICINT) TOFILE(QTEMP/MFAGIWRP)".
082500211001           05  lc_CL-Command-1B       PIC X(60) VALUE
082600211001               "MBROPT(*REPLACE) FMTOPT(*NOCHK)".
082700211001         03 ln_PACK-VAL-1             PIC S9(10)V9(5) COMP-3
082800211001                                                VALUE 120.
082900211001         03  lc_CL-Command-2.
083000211001           05  lc_CL-Command-2A       PIC X(60) VALUE
083100211001               "CPYF FROMFILE(QTEMP/MFAGIWRP) TOFILE(QTEMP/WKACCRINT)".
083200211001           05  lc_CL-Command-2B       PIC X(60) VALUE
083300211001               "MBROPT(*ADD) FMTOPT(*NOCHK)".
083400211001         03  ln_PACK-VAL-2            PIC S9(10)V9(5) COMP-3
083500211001                                                VALUE 120.
083600211001         03  lc_CL-Command-3.
083700211001           05  lc_CL-Command-3A       PIC X(60) VALUE
083800211001               "CPYF FROMFILE(QTEMP/WKDIIINT) TOFILE(QTEMP/MFAGIWRP)".
083900211001           05  lc_CL-Command-3B       PIC X(60) VALUE
084000211001               "MBROPT(*REPLACE) FMTOPT(*NOCHK)".
084100211001         03  ln_PACK-VAL-3            PIC S9(10)V9(5) COMP-3
084200211001                                                VALUE 120.
084300211001         03  lc_CL-Command-4.
084400211001           05  lc_CL-Command-4A       PIC X(60) VALUE
084500211001               "CPYF FROMFILE(QTEMP/MFAGIWRP) TOFILE(QTEMP/WKACCRINT)".
084600211001           05  lc_CL-Command-4B       PIC X(60) VALUE
084700211001               "MBROPT(*ADD) FMTOPT(*NOCHK)".
084800211001         03  ln_PACK-VAL-4            PIC S9(10)V9(5) COMP-3
084900211001                                                VALUE 120.
085000211001
085100211001       01  lc_Error-Desc.
085200211001         03  lnc_ErrDroppingWKDIIINT     PIC X(80)
085300211001                VALUE "Error while dropping WKDIIINT".
085400211001         03  lnc_ErrDroppingWKGICINT     PIC X(80)
085500211001                VALUE "Error while dropping WKGICINT".
085600211001         03  lnc_ErrDroppingWKACCRINT    PIC X(80)
085700211001                VALUE "Error while dropping WKACCRINT".
085800211001         03  lnc_ErrDroppingWKTRNP       PIC X(80)
085900211001                VALUE "Error while dropping WKTRNP".
086000211001         03  lnc_ErrCreatingWKDIIINT     PIC X(80)
086100211001                VALUE "Error while creating WKDIIINT".
086200211001         03  lnc_ErrCreatingWKGICINT     PIC X(80)
086300211001                VALUE "Error while creating WKGICINT".
086400211001         03  lnc_ErrCreatingWKACCRINT    PIC X(80)
086500211001                VALUE "Error while creating WKACCRINT".
086600211001         03  lnc_ErrCreatingWKTRNP       PIC X(80)
086700211001                VALUE "Error while creating WKTRNP".
086800211001         03  lnc_ErrAlteringWKTRNP       PIC X(80)
086900211001                VALUE "Error while altering WKTRNP".
087000211001         03  lnc_ErrOpenCursormfatrnp    PIC X(80)
087100211001                VALUE "Error while opening lcu_mfatrnp".
087200211001         03  lnc_ErrOpenCurAccruAmt      PIC X(80)
087300211001                VALUE "Error while opening lcu_AccrualAmt".
087400211001         03  lnc_ErrOpenCurWkaccact      PIC X(80)
087500211001                VALUE "Error while opening lcu_Wkaccact".
087600211001         03  lnc_ErrSelectAllowtrade     PIC X(80)
087700211001                VALUE "Error while select AllowTrading".
087800211001         03  lnc_ErrInsertWKGICINT       PIC X(80)
087900211001                VALUE "Error while Insert WKGICINT".
088000211001         03  lnc_ErrInsertWKDIIINT       PIC X(80)
088100211001                VALUE "Error while Insert WKDIIINT".
088200211001         03  lnc_ErrDeleteMFAGIWRP       PIC X(80)
088300211001                VALUE "Error while Delete MFAGIWRP".
088400211001         03  lnc_ErrInsertWKDIIINT1      PIC X(80)
088500211001                VALUE "Error while Insert WKDIIINT1".
088600211001         03  lnc_ErrSelectAccmktval      PIC X(80)
088700211001                VALUE "Error while Select Accmktval".
088800211001         03  lnc_ErrInsertWKTRNP         PIC X(80)
088900211001                VALUE "Error while Insert WKTRNP".
089000211001         03  lnc_ErrCloselcu_AccrualAmt  PIC X(80)
089100211001                VALUE "Error while Close lcu_AccrualAmt".
089200211001         03  lnc_ErrSelectMFATRNTGP      PIC X(80)
089300211001                VALUE "Error while Select MFATRNTGP".
089400211001         03  lnc_ErrSelectCorespOutTran  PIC X(80)
089500211001                VALUE "Error while Correspond OutTrans".
089600211001         03  lnc_ErrSelectDispoptcode    PIC X(80)
089700211001                VALUE "Error while Select Dispoptcode".
089800211001         03  lnc_ErrSelectMFAACTEVP      PIC X(80)
089900211001                VALUE "Error while Select MFAACTEVP".
090000211001         03  lnc_ErrSelectProdtyprul     PIC X(80)
090100211001                VALUE "Error while Select ProdTypeRule".
090200211001         03  lnc_ErrSelectCharge         PIC X(80)
090300211001                VALUE "Error while Select Charge".
090400211001         03  lnc_ErrSelectACBAmt         PIC X(80)
090500211001                VALUE "Error while Select ACBAmt".
090600211001         03  lnc_ErrSelectlatestseqno    PIC X(80)
090700211001                VALUE "Error while Select latestseqno".
090800211001         03  lnc_ErrInsertMFAGIDIACP     PIC X(80)
090900211001                VALUE "Error while Insert MFAGIDIACP".
091000211001         03  lnc_ErrUpdateMFAGIDIACP     PIC X(80)
091100211001                VALUE "Error while Update MFAGIDIACP".
091200211001         03  lnc_ErrSelectEffdatervs     PIC X(80)
091300211001                VALUE "Error while Select effdatervs".
091400211001         03  lnc_ErrSelectTradatervs     PIC X(80)
091500211001                VALUE "Error while Select Tradatervs".
091600211001         03  lnc_ErrSelectMFAGIDIACP     PIC X(80)
091700211001                VALUE "Error while Select MFAGIDIACP".
091800211001         03  lnc_ErrSelectWKGICINT       PIC X(80)
091900211001                VALUE "Error while Select WKGICINT".
092000211001         03  lnc_ErrSelectWKDIIINT       PIC X(80)
092100211001                VALUE "Error while Select WKDIIINT".
092200211001         03  lnc_ErrSelectloadtrnp       PIC X(80)
092300211001                VALUE "Error while Select loadTrnp".
092400211001         03  lnc_ErrSelectloadWKNP       PIC X(80)
092500211001                VALUE "Error while Select loadWKNP".
092600211001         03  lnc_ErrPreparequery         PIC X(80)
092700211001                VALUE "Error while Prepare Query".
092800211001         03  lnc_ErrExecutequery         PIC X(80)
092900211001                VALUE "Error while Execute Query".
093000211001         03  lnc_ErrSelectreeffect       PIC X(80)
093100211001                VALUE "Error while Select reeffect".
093200211001         03  lnc_ErrUpdategidiacp        PIC X(80)
093300211001                VALUE "Error while Update MFAGIDIACP".
093400211001         03  lnc_ErrSelectgidiacp        PIC X(80)
093500211001                VALUE "Error while Select MFAGIDIACP".
093600211001         03  lnc_ErrINTCLCWKGICINT       PIC X(80)
093700211001                VALUE "Error while INTCLC REC GICINT".
093800211001         03  lnc_ErrINTCLCWKDIIINT       PIC X(80)
093900211001                VALUE "Error while INTCLC REC DIIINT".
094000211001         03  lnc_ErrGettingINTtrans      PIC X(80)
094100211001                VALUE "Error while Getting INT trans".
094200211001      * QC 36467-Starts
094300211001         03  lc_ErrCodeDescr50           PIC X(80)
094400211001                VALUE "Error while insert into WKACCRINT for GIO".
094500211001         03  lc_ErrCodeDescr51           PIC X(80)
094600211001                VALUE "Error while insert into WKACCRINT for TIO".
094700211001         03  lc_ErrCodeDescr52           PIC X(80)
094800211001                VALUE "Error while counting the records in TMPACTMKT".
094900211001         03  lc_ErrCodeDescr53           PIC X(80)
095000211001                VALUE "Error while opening lcu_GetActInv cursor ".
095100211001         03  lc_ErrCodeDescr54           PIC X(80)
095200211001                VALUE "Error while fecting lcu_GetActInv cursor".
095300211001         03  lc_ErrCodeDescr55           PIC X(80)
095400211001                VALUE "Error while getting li_MKTvalue for TMPACTMKT".
095500211001         03  lc_ErrCodeDescr56           PIC X(80)
095600211001                VALUE "Error while Insert into TMPACTMKT".
095700211001         03  lc_ErrCodeDescr57           PIC X(80)
095800211001                VALUE "Error while Update into TMPACTMKT".
095900211001      * QC 36467-Ends
096000211001      * RFS137239 - Starts
096100211001         03  lnc-ErrDesc59               PIC X(80)
096200211001                VALUE "Error while opening lcu_MFAACCATP".
096300211001
096400211001         03  lnc-ErrDesc60               PIC X(80)
096500211001                VALUE "Error while Select count in MFAGICREJ".
096600211001
096700211001         03  lnc-ErrDesc61               PIC X(80)
096800211001                VALUE "Error while Select Count in MFAACCATP".
096900211001
097000211001         03  lnc-ErrDesc62               PIC X(80)
097100211001                VALUE "Error while Insert into MFAACCATP".
097200211001
097300211001         03  lnc-ErrDesc63               PIC X(80)
097400211001                VALUE "Error while Delete into MFAACCATP".
097500211001
097600211001         03  lnc-ErrDesc64               PIC X(80)
097700211001                VALUE "Error while Fetching lcu_MFAACCATP".
097800211001
097900211001         03  lnc-ErrDesc65               PIC X(80)
098000211001                VALUE "Error while Select records in MFAGIDIACP".
098100211001
098200211001         03  lnc-ErrDesc66               PIC X(80)
098300211001                VALUE "Error while Select records in MFAIVRP".
098400211001
098500211001         03  lnc-ErrDesc67               PIC X(80)
098600211001                VALUE "Error while Insert records in MFAIVRCLP".
098700211001      * RFS137239 - Ends
098800211001138589   03  lnc-ErrDesc68               PIC X(80)
098900211001138589          VALUE "Error while Selecting Year in MFAGIDIACP".
099000211001      * RFS140268 begin - RM
099100211001         03  lnc-ErrDesc69               PIC X(80)
099200211001                VALUE "Error while declaring cursor for GetActInv".
099300211001         03  lnc-ErrDesc70               PIC X(80)
099400211001                VALUE "Error while fetching cursor from GetActInv".
099500211001         03  lnc-ErrDesc71               PIC X(80)
099600211001                VALUE "Error while closing cursor from GetActInv".
099700211001      * RFS140268 end   - RM
099800211001
099900211001      * RFS1002626-Starts
100000211001         03  lnc-ErrDesc72               PIC X(80)
100100211001                VALUE "Error while declare cursor lcu_mfatrnp1".
100200211001         03  lnc-ErrDesc73               PIC X(80)
100300211001                VALUE "Error while inserting into WKTRNP      ".
100400211001         03  lnc-ErrDesc74               PIC X(80)
100500211001                VALUE "Error while closing cursor lcu_mfatrnp1".
100600211001         03  lnc-ErrDesc75               PIC X(80)
100700211001                VALUE "Error while Fetching prior business day".
100800211001         03  lnc-ErrDesc76               PIC X(80)
100900211001                VALUE "Error while insert into WKACCRINT for Recalc".
101000211001         03  lnc-ErrDesc77               PIC X(80)
101100211001                VALUE "Error while getting the charges on INT trade".
101200211001         03  lnc-ErrDesc78               PIC X(80)
101300211001                VALUE "Error while insert into WKACCRINT for Accrual".
101400211001         03  lnc-ErrDesc79               PIC X(80)
101500211001                VALUE "Error while opening lcu_AccrualAmt".
101600211001         03  lnc-ErrDesc80               PIC X(80)
101700211001                VALUE "Error while Closing lcu_AccrualAmt".
101800211001      * RFS185233 - Begins
101900211001         03  lnc-ErrDesc81              PIC X(80) VALUE
102000211001                "Error while getting the Investor tax country code".
102100211001      * RFS185233 - Ends
102200211001      * RFS1002626-Ends
102300211001      * RFS1115174 - Starts
102400211001         03  lnc-ErrDesc82              PIC X(80) VALUE
102500211001                "Error while getting Next Business Date".
102600211001         03  lnc-ErrDesc83              PIC X(80) VALUE
102700211001                "Error while getting monthend Int ".
102800211001      * RFS1115174 - Ends
102900211001
103000211001      * Copybooks.
103100211001         COPY INTCLCLS.
103200211001         COPY Cpisleap.
103300211001         COPY CPACBTOT.
103400211001         COPY CPYSQLFLD
103500211001           REPLACING == "CURRENT_PROGRAM" == BY == "FXACCACB" ==.
103600211001
103700211001           EXEC SQL
103800211001             INCLUDE SQLCA
103900211001           END-EXEC.
104000211001
104100211001
104200211001       LINKAGE SECTION.
104300211001
104400211001           COPY CPACCACB.
104500211001
104600211001
104700211001       PROCEDURE DIVISION USING pi_Account-No
104800211001                                pc_Investment-Code
104900211001                                pd_Placement-Date
105000211001                                pi_Trans-No
105100211001                                pc_Process-Mode.
105200211001
105300211001
105400211001      * ---------------------------------
105500211001       MAINLINE.
105600211001      * ---------------------------------
105700211001
105800211001           PERFORM Initial-Routine.
105900211001
106000211001           PERFORM Detail-Process.
106100211001
106200211001           PERFORM End-Job.
106300211001
106400211001
106500211001      * ---------------------------------
106600211001       Initial-Routine.
106700211001      * ---------------------------------
106800211001
106900211001           INITIALIZE lc_Variables.
107000211001
107100211001      * RFS1115174 - Starts
107200211001           INITIALIZE lc_GICVars.
107300211001      * RFS1115174 - Ends
107400211001
107500211001           MOVE pi_Account-No      TO li_AccountNo.
107600211001           MOVE pc_Investment-Code TO lc_InvestmentCode.
107700211001           MOVE pd_Placement-Date  TO ld_Placement-Date.
107800211001           MOVE pi_Trans-No        TO li_TransNo.
107900211001           MOVE pc_Process-Mode    TO lc_Process-Mode.
108000211001           MOVE lnc_P              TO li_MKTValueMode.
108100211001
108200211001           ACCEPT lc_ProcessDateDA FROM lc_DataArea
108300211001                  FOR "MFAPRCDTP".
108400211001
108500211001           ACCEPT lc_GICSysParms FROM lc_DataArea FOR "MFAGICPARM".
108600211001      * RFS137239 - Starts
108700211001           INITIALIZE  li_SystemTime
108800211001                       li_SystemDate
108900211001                       lc_Job_Attribute.
109000211001
109100211001           ACCEPT li_SystemTime FROM TIME.
109200211001           ACCEPT li_SystemDate FROM DATE YYYYMMDD.
109300211001
109400211001      * Retrieve User ID
109500211001           CALL "RTVJOBA" USING lc_JobName,
109600211001                                lc_UserID,
109700211001                                lc_JobNo.
109800211001           CANCEL "RTVJOBA".
109900211001      * RFS137239 - Ends
110000211001
110100211001
110200211001           IF lc_ACBT5SetupValue = lnc_2
110300211001      * RFS185233 - Begins
110400211001              OR lc_ACBT5SetupValue = lnc_3
110500211001      * RFS185233 - Ends
110600211001              CONTINUE
110700211001           ELSE
110800211001              PERFORM End-Job
110900211001           END-IF.
111000211001
111100211001      *DROP-TABLES.
111200211001           EXEC SQL
111300211001             DROP TABLE WKDIIINT
111400211001           END-EXEC.
111500211001
111600211001           MOVE SQLSTATE TO lc_sqlStates.
111700211001           IF lncc_sqlTblNotExists OR lncc_sqlSuccessful
111800211001              CONTINUE
111900211001           ELSE
112000211001              SET lnc_Err_01 TO TRUE
112100211001              MOVE lnc_ErrDroppingWKDIIINT TO lc_sqlErrShortDESCR
112200211001              PERFORM  SQL_Fail_Process
112300211001           END-IF.
112400211001
112500211001           EXEC SQL
112600211001             DROP TABLE WKGICINT
112700211001           END-EXEC.
112800211001
112900211001           MOVE SQLSTATE TO lc_sqlStates.
113000211001           IF lncc_sqlTblNotExists OR lncc_sqlSuccessful
113100211001              CONTINUE
113200211001           ELSE
113300211001              SET lnc_Err_02 TO TRUE
113400211001              MOVE lnc_ErrDroppingWKGICINT TO lc_sqlErrShortDESCR
113500211001              PERFORM  SQL_Fail_Process
113600211001           END-IF.
113700211001
113800211001           EXEC SQL
113900211001             DROP TABLE WKACCRINT
114000211001           END-EXEC.
114100211001
114200211001           MOVE SQLSTATE TO lc_sqlStates.
114300211001           IF lncc_sqlTblNotExists OR lncc_sqlSuccessful
114400211001              CONTINUE
114500211001           ELSE
114600211001              SET lnc_Err_03 TO TRUE
114700211001              MOVE lnc_ErrDroppingWKACCRINT TO lc_sqlErrShortDESCR
114800211001              PERFORM  SQL_Fail_Process
114900211001           END-IF.
115000211001
115100211001           EXEC SQL
115200211001             DROP TABLE WKTRNP
115300211001           END-EXEC.
115400211001
115500211001           MOVE SQLSTATE TO lc_sqlStates.
115600211001           IF lncc_sqlTblNotExists OR lncc_sqlSuccessful
115700211001              CONTINUE
115800211001           ELSE
115900211001              SET lnc_Err_04 TO TRUE
116000211001              MOVE lnc_ErrDroppingWKTRNP    TO lc_sqlErrShortDESCR
116100211001              PERFORM  SQL_Fail_Process
116200211001           END-IF.
116300211001
116400211001      *CREATE-TABLES.
116500211001           EXEC SQL
116600211001             CREATE TABLE QTEMP/WKDIIINT (
116700211001             ACCOUNT_NO        NUMERIC (09,0) NOT NULL WITH DEFAULT,
116800211001             INVESTMENT_CODE   CHAR    (05)   NOT NULL WITH DEFAULT,
116900211001             CERTIFICATE_ID_NO NUMERIC (10,0) NOT NULL WITH DEFAULT,
117000211001             AMOUNT            DECIMAL (13,2) NOT NULL WITH DEFAULT)
117100211001           END-EXEC.
117200211001
117300211001           MOVE SQLSTATE TO lc_sqlStates.
117400211001           IF lncc_sqlTblCrtedNotJrned OR lncc_sqlSuccessful
117500211001              CONTINUE
117600211001           ELSE
117700211001              SET lnc_Err_05 TO TRUE
117800211001              MOVE lnc_ErrCreatingWKDIIINT TO lc_sqlErrShortDESCR
117900211001              PERFORM  SQL_Fail_Process
118000211001           END-IF.
118100211001
118200211001           EXEC SQL
118300211001             CREATE TABLE QTEMP/WKGICINT (
118400211001             ACCOUNT_NO        NUMERIC (09,0) NOT NULL WITH DEFAULT,
118500211001             INVESTMENT_CODE   CHAR    (05)   NOT NULL WITH DEFAULT,
118600211001             CERTIFICATE_ID_NO NUMERIC (10,0) NOT NULL WITH DEFAULT,
118700211001             AMOUNT            DECIMAL (13,2) NOT NULL WITH DEFAULT)
118800211001           END-EXEC.
118900211001
119000211001           MOVE SQLSTATE TO lc_sqlStates.
119100211001           IF lncc_sqlTblCrtedNotJrned OR lncc_sqlSuccessful
119200211001              CONTINUE
119300211001           ELSE
119400211001              SET lnc_Err_06 TO TRUE
119500211001              MOVE lnc_ErrCreatingWKGICINT  TO lc_sqlErrShortDESCR
119600211001              PERFORM  SQL_Fail_Process
119700211001           END-IF.
119800211001
119900211001           EXEC SQL
120000211001             CREATE TABLE QTEMP/WKACCRINT (
120100211001             ACCOUNT_NO        NUMERIC (09,0) NOT NULL WITH DEFAULT,
120200211001             INVESTMENT_CODE   CHAR    (05)   NOT NULL WITH DEFAULT,
120300211001             CERTIFICATE_ID_NO NUMERIC (10,0) NOT NULL WITH DEFAULT,
120400211001             AMOUNT            DECIMAL (13,2) NOT NULL WITH DEFAULT)
120500211001           END-EXEC.
120600211001
120700211001           MOVE SQLSTATE TO lc_sqlStates.
120800211001           IF lncc_sqlTblCrtedNotJrned OR lncc_sqlSuccessful
120900211001              CONTINUE
121000211001           ELSE
121100211001              SET lnc_Err_07 TO TRUE
121200211001              MOVE lnc_ErrCreatingWKACCRINT TO lc_sqlErrShortDESCR
121300211001              PERFORM  SQL_Fail_Process
121400211001           END-IF.
121500211001
121600211001           EXEC SQL
121700211001             CREATE TABLE QTEMP/WKTRNP LIKE MFATRNP
121800211001           END-EXEC.
121900211001
122000211001           MOVE SQLSTATE TO lc_sqlStates.
122100211001           IF lncc_sqlTblCrtedNotJrned OR lncc_sqlSuccessful
122200211001              CONTINUE
122300211001           ELSE
122400211001              SET lnc_Err_08 TO TRUE
122500211001              MOVE lnc_ErrCreatingWKTRNP TO lc_sqlErrShortDESCR
122600211001              PERFORM  SQL_Fail_Process
122700211001           END-IF.
122800211001
122900211001           EXEC SQL
123000211001             ALTER TABLE QTEMP/WKTRNP
123100211001             ADD EFFECTIVE_DATE  DECIMAL (9,0) NOT NULL WITH DEFAULT
123200211001             ADD PRODUCT_TYPE_RULE   CHAR (05) NOT NULL WITH DEFAULT
123300211001             ADD ACCOUNT_TYPE_CODE CHAR (05) NOT NULL WITH DEFAULT
123400211001      * RFS 140909 - begin RM
123500211001             ADD Acct_Type_Rule CHAR (01) NOT NULL WITH DEFAULT
123600211001      * RFS 140909 - end   RM
123700211001           END-EXEC.
123800211001
123900211001           MOVE SQLSTATE TO lc_sqlStates.
124000211001           IF lncc_sqlSuccessful
124100211001              CONTINUE
124200211001           ELSE
124300211001              SET lnc_Err_09 TO TRUE
124400211001              MOVE lnc_ErrAlteringWKTRNP TO lc_sqlErrShortDESCR
124500211001              PERFORM  SQL_Fail_Process
124600211001           END-IF.
124700211001
124800211001      * RFS1002626-Starts
124900211001           IF lc_Process-Mode IS NOT = 'RCALCACB'
125000211001      * RFS1002626-Ends
125100211001           EXEC SQL
125200211001             DECLARE lcu_mfatrnp CURSOR FOR
125300211001             SELECT ACCOUNT_NO,
125400211001                    PLACEMENT_DATE,
125500211001                    TRANS_NO,
125600211001                    TRADE_DATE,
125700211001                    PROCESS_DATE,
125800211001                    TRANS_TYPE_CODE,
125900211001                    CONTR_REDEM_CODE,
126000211001                    GROSS_AMT,
126100211001                    NET_AMT,
126200211001                    EFFECTIVE_DATE,
126300211001                    PRODUCT_TYPE_RULE,
126400211001                    INVESTMENT_CODE,
126500211001                    CLOSING_UNIT_BAL,
126600211001                    SPLIT_OPTION_CODE,
126700211001      * RFS 140909 - begin RM
126800211001      *             ACCOUNT_TYPE_CODE
126900211001                    ACCOUNT_TYPE_CODE,
127000211001      * RFS187080 - Starts
127100211001      *             Acct_Type_Rule
127200211001                    Acct_Type_Rule,
127300211001                    PAYMENT_TYPE_CODE
127400211001      * RFS187080 - Ends
127500211001      * RFS 140909 - end   RM
127600211001               FROM WKTRNP
127700211001      * RFS1002626-Starts
127800211001      *    END-EXEC.
127900211001           END-EXEC
128000211001      * RFS1002626-Ends
128100211001
128200211001           EXEC SQL
128300211001             OPEN lcu_mfatrnp
128400211001      * RFS1002626-Starts
128500211001      *    END-EXEC.
128600211001           END-EXEC
128700211001      * RFS1002626-Ends
128800211001
128900211001      * RFS1002626-Starts
129000211001      *    MOVE SQLSTATE TO lc_sqlStates.
129100211001           MOVE SQLSTATE TO lc_sqlStates
129200211001      * RFS1002626-Ends
129300211001           IF NOT lncc_sqlSuccessful
129400211001              SET lnc_Err_10 TO TRUE
129500211001              MOVE lnc_ErrOpenCursormfatrnp TO lc_sqlErrShortDESCR
129600211001              PERFORM  SQL_Fail_Process
129700211001      * RFS1002626-Starts
129800211001           END-IF
129900211001           END-IF.
130000211001      * RFS1002626-Ends
130100211001
130200211001           EXEC SQL
130300211001             DECLARE lcu_AccrualAmt CURSOR FOR
130400211001             SELECT ACCOUNT_NO,
130500211001                    SUM(AMOUNT)
130600211001              FROM WKACCRINT
130700211001              GROUP BY ACCOUNT_NO
130800211001              ORDER BY ACCOUNT_NO
130900211001           END-EXEC.
131000211001
131100211001
131200211001
131300211001           EXEC SQL
131400211001              DECLARE lcu_Wkaccract CURSOR FOR
131500211001              SELECT COALESCE(ACCNTP.ACCOUNT_NO, 0),
131600211001                     COALESCE(RTCDP.PRODUCT_TYPE_CODE, " "),
131700211001                     COALESCE(INVP.INVESTMENT_CODE, " ")
131800211001              FROM MFAACCNTP ACCNTP
131900211001              INNER JOIN MFAACCTYP ACCTYP
132000211001               ON ACCNTP.ACCOUNT_TYPE_CODE = ACCTYP.ACCOUNT_TYPE_CODE
132100211001              INNER JOIN MFAACCIVP ACCIVP
132200211001               ON ACCNTP.ACCOUNT_NO = ACCIVP.ACCOUNT_NO
132300211001              INNER JOIN MFAACMDP ACMDP
132400211001               ON ACCNTP.ACCOUNT_NO = ACMDP.ACCOUNT_NO
132500211001              INNER JOIN MFAINVP INVP
132600211001               ON ACCIVP.INVESTMENT_CODE = INVP.INVESTMENT_CODE
132700211001              INNER JOIN MFAPRTCDP RTCDP
132800211001               ON INVP.PRODUCT_TYPE_CODE = RTCDP.PRODUCT_TYPE_CODE
132900211001              AND RTCDP.PRODUCT_TYPE_RULE IN ("2","7")
133000211001              WHERE ACCTYP.ACCOUNT_TYPE_RULE = "1"
133100211001                AND ACCNTP.NOMINEE <> "Y"
133200211001                AND ACCNTP.ACCOUNT_STATUS = "A"
133300211001      *RFS1002626-Starts
133400211001      *         AND ACCIVP.CURR_UNIT_BAL <> 0
133500211001      *RFS1002626-Ends
133600211001134626*         AND ( SUBSTR(CHAR(ACMDP.EFFECTIVE_DATE),5,4)
133700211001134626          AND ( SUBSTR(CHAR(ACMDP.EFFECTIV_DATE),5,4)
133800211001                      = :lc_checkaccrualMMDD
133900211001134626*               OR ( (SUBSTR(CHAR(ACMDP.EFFECTIVE_DATE),5,4)
134000211001134626                OR ( (SUBSTR(CHAR(ACMDP.EFFECTIV_DATE),5,4)
134100211001                           = "0229" OR
134200211001134626*                    SUBSTR(CHAR(ACMDP.EFFECTIVE_DATE),5,4)
134300211001134626                     SUBSTR(CHAR(ACMDP.EFFECTIV_DATE),5,4)
134400211001                           = "0301")
134500211001                         AND :lc_IsLeapDateFlag = "N"
134600211001      * RFS138589 - Starts
134700211001      *                  AND :lc_ProcessDateMMDD = "0228"))
134800211001                         AND :lc_ProcessDateMMDD = "0228"
134900211001                         AND :lc_RecalcMode = "N")
135000211001                OR  (ACCNTP.ACCOUNT_NO = :li_AccountNum
135100211001                AND :lc_RecalcMode = "Y"))
135200211001      * RFS138589 - Ends
135300211001           END-EXEC.
135400211001
135500211001      * RFS138589 - Starts
135600211001           EXEC SQL
135700211001             DECLARE lcu_MFAACCATP  CURSOR FOR
135800211001             SELECT ACCOUNT_NO,
135900211001                    ACCOUNT_ATTRIBUTE_CODE,
136000211001      *RFS186075 - Starts
136100211001                    EFFECTIV_DATE,
136200211001      *RFS186075 - Ends
136300211001                    EXPIRY_DATE
136400211001             FROM   MFAACCATP
136500211001             WHERE  ACCOUNT_ATTRIBUTE_CODE = :lnc_ICACB
136600211001           END-EXEC.
136700211001
136800211001           EXEC SQL
136900211001             OPEN lcu_MFAACCATP
137000211001           END-EXEC.
137100211001
137200211001           MOVE SQLSTATE                      TO lc_sqlStates.
137300211001           IF NOT lncc_sqlSuccessful
137400211001              SET lnc_Err_59     TO TRUE
137500211001              MOVE lnc-ErrDesc59 TO lc_sqlErrShortDESCR
137600211001              PERFORM  SQL_Fail_Process
137700211001           END-IF.
137800211001      * RFS138589 - Ends
137900211001      * ---------------------------------
138000211001       AccuralAccount.
138100211001      * ---------------------------------
138200211001           MOVE li_processdate TO li_Accprocessdate.
138300211001           MOVE FUNCTION ADD-DURATION(li_Accprocessdate DAYS 1)
138400211001                         TO li_checkaccrualdate.
138500211001           MOVE li_processdate TO pn_IsLeapDate.
138600211001           CALL "FXISLEAP" USING pn_IsLeapDate
138700211001                                 pc_IsLeapDateFlag.
138800211001           MOVE pc_IsLeapDateFlag TO lc_IsLeapDateFlag.
138900211001           MOVE li_ProcessDate    TO li_ProcessDate1.
139000211001           SET lb_EofAct-CursorNo  TO TRUE
139100211001
139200211001           EXEC SQL
139300211001              OPEN lcu_Wkaccract
139400211001           END-EXEC.
139500211001
139600211001           MOVE SQLSTATE TO lc_sqlStates.
139700211001           IF NOT lncc_sqlSuccessful
139800211001              SET lnc_Err_12 TO TRUE
139900211001              MOVE lnc_ErrOpenCurWkaccact TO lc_sqlErrShortDESCR
140000211001              PERFORM  SQL_Fail_Process
140100211001           END-IF.
140200211001      * ---------------------------------
140300211001       CalcAccrualDate.
140400211001      * ---------------------------------
140500211001           MOVE li_Accprocessdate TO li_Accprocessdate1
140600211001           IF lc_allowtrade = lnc_N
140700211001              MOVE li_Accprocessdate2 TO li_Accprocessdate1
140800211001           END-IF
140900211001           MOVE FUNCTION ADD-DURATION(li_Accprocessdate1 DAYS 1)
141000211001                            TO li_Accprocessdate2.
141100211001           MOVE li_Accprocessdate2 TO li_Buscaldate.
141200211001           EXEC SQL
141300211001             SELECT ALLOW_TRADING
141400211001                    INTO :lc_allowtrade
141500211001              FROM MFABUSDAP
141600211001              WHERE BUSINESS_DAY = :li_Buscaldate
141700211001           END-EXEC.
141800211001
141900211001           MOVE SQLSTATE TO lc_sqlStates.
142000211001           IF NOT lncc_sqlSuccessful
142100211001              SET lnc_Err_13 TO TRUE
142200211001              MOVE lnc_ErrSelectAllowtrade TO lc_sqlErrShortDESCR
142300211001              PERFORM SQL_Fail_Process
142400211001           END-IF.
142500211001           IF lc_allowtrade = lnc_Y
142600211001              SET lb-Businessday TO TRUE
142700211001           ELSE IF lc_allowtrade = lnc_N
142800211001                   SET lb-NonBusinessday TO TRUE
142900211001                   MOVE li_Accprocessdate2 TO li_processdate
143000211001                                              lc_checkaccrualdate1
143100211001           END-IF.
143200211001      * ---------------------------------
143300211001       Detail-Process.
143400211001      * ---------------------------------
143500211001
143600211001           EVALUATE TRUE
143700211001           WHEN lc_Process-Mode = lnc_JOBDAILY
143800211001               PERFORM Process-Mfatrnp-records
143900211001               SET  lc_AccAmtNo TO TRUE
144000211001               PERFORM Process-Accrual-AccountAmt
144100211001                                       UNTIL lb-Businessday
144200211001           WHEN lc_Process-Mode = lnc_TRNPST
144300211001               PERFORM LoadWknp-Records
144400211001               MOVE li_Processdatewknp TO li_ProcessDate
144500211001               CALL "GICINTENV"
144600211001137239         CALL "GICREJENV"
144700211001               PERFORM Process-Each-Transaction
144800211001           WHEN lc_Process-Mode = lnc_TRNRVS
144900211001138564         INITIALIZE lc_Dispoptioncode
145000211001               PERFORM LoadWknp-Records
145100211001137241*        MOVE li_Processdatewknp TO li_ProcessDate
145200211001138564         PERFORM Get-Next-Bus-Day
145300211001138564         CALL "GICINTENV"
145400211001137239         CALL "GICREJENV"
145500211001               PERFORM Trans-Found-MFAGIDIACP
145600211001               IF lc_TransFoundACPYes
145700211001137241            SET lb_ACBAccrualFirstYes TO TRUE
145800211001                  PERFORM Process-Reverse-Transaction
145900211001               END-IF
146000211001      * RFS138564 - START
146100211001      *  RM comment - begin
146200211001      *        IF lc_Transtypecodewknp = 'SWI' OR 'TRI'
146300211001      *           PERFORM Get-Trans-Target
146400211001      *           MOVE li_PlacementSWOTRO TO ld_Placement-Date
146500211001      *           MOVE li_transnoSWOTRO   TO li_TransNo
146600211001      *           PERFORM LoadWknp-Records
146700211001      *           PERFORM Trans-Found-MFAGIDIACP
146800211001      *           IF lc_TransFoundACPYes
146900211001      *              SET lb_ACBAccrualFirstYes TO TRUE
147000211001      *              PERFORM Process-Reverse-Transaction
147100211001      *           END-IF
147200211001      *        END-IF
147300211001      *  RM comment - end
147400211001               IF lc_Transtypecodewknp = 'INT'
147500211001                  PERFORM Check-distr-option
147600211001      * RFS 1110593 begin
147700211001                  PERFORM Check-INT-Trans-Target
147800211001141615*           IF lc_Dispoptioncode = lnc_R
147900211001141615*           IF lb_ReinvestTrade
148000211001141615            IF lb_ReinvestTrade AND
148100211001                     NOT lb_INTAttachFullSellYes
148200211001      * RFS 1110593 end
148300211001                    PERFORM Process-Reverse-Transaction
148400211001                  END-IF
148500211001               END-IF
148600211001      * RFS138564 - END
148700211001      * RFS138589 - Starts
148800211001           WHEN lc_Process-Mode = lnc_RCALCACB
148900211001               SET lb_RecalcModeYes TO TRUE
149000211001               SET lc_Recalcul-AccIntYes TO TRUE
149100211001               PERFORM Process-MFAACCATP-Records
149200211001                                       UNTIL lb_EndofCursorTrue
149300211001      * RFS138589 - Ends
149400211001           END-EVALUATE.
149500211001
149600211001      * RFS138564 - START
149700211001      * -----------------
149800211001       Get-Trans-Target.
149900211001      * ------------------
150000211001           EXEC SQL
150100211001             SELECT PLACEMENT_DATE,
150200211001                    TRANS_NO
150300211001                    INTO :li_PlacementSWOTRO,
150400211001                         :li_transnoSWOTRO
150500211001              FROM MFATRNTGP
150600211001              WHERE PLACEMENT_DATE_2 = :ld_Placement-Date
150700211001                AND TRANS_NO_2       = :li_TransNo
150800211001           END-EXEC.
150900211001
151000211001           MOVE SQLSTATE TO lc_sqlStates.
151100211001           IF NOT lncc_sqlSuccessful
151200211001              SET lnc_Err_20 TO TRUE
151300211001              MOVE lnc_ErrSelectMFATRNTGP TO lc_sqlErrShortDESCR
151400211001              PERFORM  SQL_Fail_Process
151500211001           END-IF.
151600211001
151700211001      * -----------------
151800211001       Get-Next-Bus-Day.
151900211001      * ------------------
152000211001           EXEC SQL
152100211001             SELECT BUSINESS_DAY
152200211001                    INTO :li_ProcessDate
152300211001             FROM   MFABUSDAP
152400211001             WHERE BUSINESS_DAY > :li_ProcessDate
152500211001             AND   ALLOW_TRADING = :lnc_Y
152600211001             ORDER BY BUSINESS_DAY ASC
152700211001              FETCH FIRST ROW ONLY
152800211001           END-EXEC.
152900211001
153000211001           MOVE SQLSTATE TO lc_sqlStates.
153100211001           IF NOT lncc_sqlSuccessful
153200211001              SET lnc_Err_20 TO TRUE
153300211001              MOVE lnc_ErrSelectMFATRNTGP TO lc_sqlErrShortDESCR
153400211001              PERFORM  SQL_Fail_Process
153500211001           END-IF.
153600211001      * RFS138564 - END
153700211001
153800211001      * ---------------------------------
153900211001       Trans-Found-MFAGIDIACP.
154000211001      * ---------------------------------
154100211001           EXEC SQL
154200211001             SELECT COUNT(*)
154300211001                    INTO :li_CountACP
154400211001              FROM MFAGIDIACP
154500211001              WHERE PLACEMENT_DATE = :li_Placementdatewknp
154600211001                AND TRANS_NO = :li_Transnowknp
15470021100136708           AND ACCOUNT_NO = :li_Accountwknp
154800211001           END-EXEC.
154900211001
155000211001           MOVE SQLSTATE TO lc_sqlStates.
155100211001           IF NOT lncc_sqlSuccessful
155200211001              SET lnc_Err_36 TO TRUE
155300211001              MOVE lnc_ErrSelectMFAGIDIACP TO lc_sqlErrShortDESCR
155400211001              PERFORM  SQL_Fail_Process
155500211001           ELSE
155600211001              IF li_CountACP = 0
155700211001                 SET lc_TransFoundACPNo TO TRUE
155800211001              ELSE
155900211001                 SET lc_TransFoundACPYes TO TRUE
156000211001              END-IF
156100211001           END-IF.
156200211001
156300211001      * RFS138302 - START
156400211001      * ---------------------------------
156500211001       Accrual-Found-MFAGIDIACP.
156600211001      * ---------------------------------
156700211001           EXEC SQL
156800211001             SELECT COUNT(*)
156900211001                    INTO :li_CountACP
157000211001              FROM MFAGIDIACP
157100211001              WHERE PLACEMENT_DATE = :li_Placementdatewknp
157200211001                AND TRANS_NO = :li_Transnowknp
157300211001                AND ACCOUNT_NO = :li_Accountwknp
157400211001                AND PROCESS_DATE = :li_AccrualDate
157500211001           END-EXEC.
157600211001
157700211001           MOVE SQLSTATE TO lc_sqlStates.
157800211001           IF NOT lncc_sqlSuccessful
157900211001              SET lnc_Err_36 TO TRUE
158000211001              MOVE lnc_ErrSelectMFAGIDIACP TO lc_sqlErrShortDESCR
158100211001              PERFORM  SQL_Fail_Process
158200211001           ELSE
158300211001              IF li_CountACP = 0
158400211001                 SET lc_TransFoundACPNo TO TRUE
158500211001              ELSE
158600211001                 SET lc_TransFoundACPYes TO TRUE
158700211001              END-IF
158800211001           END-IF.
158900211001      * RFS138302 - End
159000211001
159100211001      * ---------------------------------
159200211001       Process-Accrual-Act-Cursor.
159300211001      * ---------------------------------
159400211001           SET lb_EofAct-CursorNo  TO TRUE.
159500211001      * RFS 138307 - begin - Kian's
159600211001           MOVE "N" TO lc_Recalcul-AccInt.
159700211001      * RFS 138307 - end
159800211001      * RFS138589 - Start
159900211001      *    INITIALIZE SQLCODE.
160000211001           INITIALIZE SQLCODE,
160100211001                      li_CAccountNo,
160200211001                      lc_CProducttypecode,
160300211001      *RFS1002626-Starts
160400211001                      lc_PrevInvestmentNo1,
160500211001                      li_RetrnAccrualInterest,
160600211001                      li_RetrnAccrualInt,
160700211001      *RFS1002626-Ends
160800211001                      lc_CInvestmentcode.
160900211001      * RFS138589 - End
161000211001
161100211001           EXEC SQL
161200211001                FETCH NEXT FROM lcu_Wkaccract INTO
161300211001                  :li_CAccountNo,
161400211001                  :lc_CProducttypecode,
161500211001                  :lc_CInvestmentcode
161600211001           END-EXEC.
161700211001           MOVE SQLSTATE TO lc_sqlStates.
161800211001           EVALUATE TRUE
161900211001             WHEN lncc_sqlSuccessful
162000211001               MOVE li_CAccountNo TO li_Accountwknp
162100211001               MOVE lc_CInvestmentcode TO lc_Investmentcodewknp
162200211001      * RFS 138307 - begin Kian's issue
162300211001      *RFS186075 - Starts
162400211001      *        MOVE li_ProcessDate TO li_Tradedatewknp
162500211001               IF lc_FullYear = "Y"
162600211001                   MOVE li_ProcessDate    TO ld_DateYYYYMMDD
162700211001                   MOVE FUNCTION ADD-DURATION (ld_DateYYYYMMDD DAYS 1)
162800211001                                          TO ld_DateCCYYMMDD
162900211001                   MOVE ld_DateCCYYMMDD   TO li_Tradedatewknp
163000211001               ELSE
163100211001                   MOVE li_ProcessDate TO li_Tradedatewknp
163200211001               END-IF
163300211001      *RFS186075 - Ends
163400211001      * RFS 138307 - end
163500211001      *RFS1002626-Starts
163600211001      *        IF lc_CProducttypecode = lnc_GIC
163700211001      *           PERFORM Load-GIC-certificates
163800211001      *        ELSE
163900211001      *           PERFORM Load-DII-investments
164000211001      *        END-IF
164100211001               MOVE li_CAccountNo      TO li_AccountNo
164200211001               MOVE lc_CInvestmentcode TO lc_InvestmentNo
164300211001               PERFORM Call-INTCLC
164400211001               MOVE li_RetrnAccrualInterest TO li_RetrnAccrualInt
164500211001               PERFORM Insert-WKACCRINT-Rec
164600211001      *RFS1002626-Ends
164700211001             WHEN lncc_sqlEnd
164800211001               SET lb_EofAct-Cursoryes TO TRUE
164900211001             WHEN OTHER
165000211001               SET lnc_Err_32  TO TRUE
165100211001               PERFORM SQL_Fail_Process
165200211001           END-EVALUATE.
165300211001      * ---------------------------------
165400211001       Clear-Work-Files.
165500211001      * ---------------------------------
165600211001           INITIALIZE lc_DeleteTables.
165700211001           STRING
165800211001           "DELETE FROM "      DELIMITED BY SIZE
165900211001           lc_Filename         DELIMITED BY " "
166000211001           INTO lc_DeleteTables.
166100211001           EXEC SQL
166200211001             PREPARE DELETE_TABLE FROM :lc_DeleteTables
166300211001           END-EXEC.
166400211001           MOVE SQLSTATE TO lc_sqlStates.
166500211001           IF lc_sqlStates = lnc_01504 OR lncc_sqlSuccessful
166600211001              CONTINUE
166700211001           ELSE
166800211001              SET lnc_Err_40 TO TRUE
166900211001              MOVE lnc_ErrPreparequery   TO lc_sqlErrShortDESCR
167000211001              PERFORM SQL_Fail_Process
167100211001           END-IF.
167200211001           EXEC SQL
167300211001             EXECUTE DELETE_TABLE
167400211001           END-EXEC.
167500211001           MOVE SQLSTATE TO lc_sqlStates.
167600211001           IF lc_sqlStates = lnc_01504 OR lncc_sqlSuccessful
167700211001              OR lncc_sqlEnd
167800211001              CONTINUE
167900211001           ELSE
168000211001              SET lnc_Err_40 TO TRUE
168100211001              MOVE lnc_ErrExecutequery TO lc_sqlErrShortDESCR
168200211001              PERFORM SQL_Fail_Process
168300211001           END-IF.
168400211001      * ---------------------------------
168500211001       Load-GIC-certificates.
168600211001      * ---------------------------------
168700211001
168800211001           EXEC SQL
168900211001             INSERT INTO WKGICINT
169000211001             SELECT ACCOUNT_NO,INVESTMENT_CODE,
169100211001                    CERTIFICATE_ID_NO,"0"
169200211001              FROM MFAGICDP
169300211001              WHERE ACCOUNT_NO      = :li_Accountwknp
169400211001               AND   CERT_STATUS_CODE = :lnc_A
169500211001               AND ((INVESTMENT_CODE = :lc_Investmentcodewknp AND
169600211001                   :lc_Process-Mode = :lnc_JOBDAILY AND
169700211001                   :lc_CalcaccrualLoad = "N")
169800211001                   OR (:lc_CalcaccrualLoad = "Y"
169900211001                       AND INVESTMENT_CODE IN (
170000211001                        SELECT ACCIVP.INVESTMENT_CODE
170100211001                          FROM MFAACCIVP ACCIVP
170200211001                         INNER JOIN MFAINVP INVP
170300211001                            ON ACCIVP.INVESTMENT_CODE
170400211001                                              = INVP.INVESTMENT_CODE
170500211001                         INNER JOIN MFAPRTCDP RTCDP
170600211001                            ON INVP.PRODUCT_TYPE_CODE
170700211001                                            = RTCDP.PRODUCT_TYPE_CODE
170800211001                           AND RTCDP.PRODUCT_TYPE_RULE = "2"
170900211001                           AND ACCIVP.CURR_UNIT_BAL <> 0 )))
171000211001           END-EXEC.
171100211001           MOVE SQLSTATE TO lc_sqlStates.
171200211001           IF NOT lncc_sqlSuccessful AND
171300211001              NOT lncc_sqlEnd
171400211001              SET lnc_Err_14 TO TRUE
171500211001              MOVE lnc_ErrInsertWKGICINT TO lc_sqlErrShortDESCR
171600211001              PERFORM SQL_Fail_Process
171700211001           END-IF.
171800211001      * ---------------------------------
171900211001       Load-DII-investments.
172000211001      * ---------------------------------
172100211001           IF lc_Process-Mode = lnc_JOBDAILY
172200211001           AND lc_CalcaccrualLoad = "N"
172300211001            EXEC SQL
172400211001             INSERT INTO WKDIIINT
172500211001             (ACCOUNT_NO,INVESTMENT_CODE,CERTIFICATE_ID_NO,
172600211001              AMOUNT)
172700211001             VALUES
172800211001             (:li_Accountwknp,:lc_Investmentcodewknp,
172900211001              :lnc_zero,:lnc_zero)
173000211001            END-EXEC
173100211001            MOVE SQLSTATE TO lc_sqlStates
173200211001            IF NOT lncc_sqlSuccessful AND
173300211001              NOT lncc_sqlEnd
173400211001              SET lnc_Err_15 TO TRUE
173500211001              MOVE lnc_ErrInsertWKDIIINT TO lc_sqlErrShortDESCR
173600211001              PERFORM SQL_Fail_Process
173700211001            END-IF
173800211001           ELSE
173900211001            EXEC SQL
174000211001             INSERT INTO WKDIIINT
174100211001              SELECT ACCOUNT_NO,INVESTMENT_CODE,
174200211001                "0","0"
174300211001                FROM MFAACCIVP
174400211001                WHERE ACCOUNT_NO = :li_Accountwknp
174500211001                AND INVESTMENT_CODE IN (
174600211001                SELECT ACCIVP.INVESTMENT_CODE
174700211001                  FROM MFAACCIVP ACCIVP
174800211001                  INNER JOIN MFAINVP INVP
174900211001                    ON ACCIVP.INVESTMENT_CODE = INVP.INVESTMENT_CODE
175000211001                  INNER JOIN MFAPRTCDP RTCDP
175100211001                    ON INVP.PRODUCT_TYPE_CODE = RTCDP.PRODUCT_TYPE_CODE
175200211001                  AND RTCDP.PRODUCT_TYPE_RULE = "7"
175300211001                  AND ACCIVP.CURR_UNIT_BAL <> 0 )
175400211001            END-EXEC
175500211001            MOVE SQLSTATE TO lc_sqlStates
175600211001            IF NOT lncc_sqlSuccessful AND
175700211001              NOT lncc_sqlEnd
175800211001              SET lnc_Err_38 TO TRUE
175900211001              MOVE lnc_ErrInsertWKDIIINT1 TO lc_sqlErrShortDESCR
176000211001              PERFORM SQL_Fail_Process
176100211001            END-IF
176200211001           END-IF.
176300211001
176400211001      * QC36467 - Start
176500211001      * ---------------------------------
176600211001       Load-Account-Investments.
176700211001      * ---------------------------------
176800211001           EXEC SQL
176900211001             INSERT INTO WKACCRINT
177000211001             SELECT ACCOUNT_NO,INVESTMENT_CODE,
177100211001                    CERTIFICATE_ID_NO,"0"
177200211001              FROM MFAGICDP
177300211001138009*       WHERE ACCOUNT_NO  = :li_Accountwknp
177400211001138009        WHERE ACCOUNT_NO  = :li_AccountNo
177500211001              AND   ISSUE_DATE <= :li_TradeDatewknp
177600211001                       AND INVESTMENT_CODE IN (
177700211001                        SELECT ACCIVP.INVESTMENT_CODE
177800211001                          FROM MFAACCIVP ACCIVP
177900211001                         INNER JOIN MFAINVP INVP
178000211001                            ON ACCIVP.INVESTMENT_CODE
178100211001                                              = INVP.INVESTMENT_CODE
178200211001                         INNER JOIN MFAPRTCDP RTCDP
178300211001                            ON INVP.PRODUCT_TYPE_CODE
178400211001                                            = RTCDP.PRODUCT_TYPE_CODE
178500211001                           AND RTCDP.PRODUCT_TYPE_RULE = "2" )
178600211001           END-EXEC.
178700211001           MOVE SQLSTATE TO lc_sqlStates.
178800211001           IF NOT lncc_sqlSuccessful AND
178900211001              NOT lncc_sqlEnd
179000211001              SET lnc_Err_50 TO TRUE
179100211001              MOVE lc_ErrCodeDescr50 TO lc_sqlErrShortDESCR
179200211001              PERFORM SQL_Fail_Process
179300211001           END-IF.
179400211001
179500211001           EXEC SQL
179600211001             INSERT INTO WKACCRINT
179700211001              SELECT ACCOUNT_NO,INVESTMENT_CODE,
179800211001                "0","0"
179900211001                FROM MFAACCIVP
180000211001138009*         WHERE ACCOUNT_NO = :li_Accountwknp
180100211001138009          WHERE ACCOUNT_NO  = :li_AccountNo
180200211001                AND INVESTMENT_CODE IN (
180300211001                SELECT ACCIVP.INVESTMENT_CODE
180400211001                  FROM MFAACCIVP ACCIVP
180500211001                  INNER JOIN MFAINVP INVP
180600211001                    ON ACCIVP.INVESTMENT_CODE = INVP.INVESTMENT_CODE
180700211001                  INNER JOIN MFAPRTCDP RTCDP
180800211001                    ON INVP.PRODUCT_TYPE_CODE = RTCDP.PRODUCT_TYPE_CODE
180900211001                  AND RTCDP.PRODUCT_TYPE_RULE = "7")
181000211001           END-EXEC
181100211001           MOVE SQLSTATE TO lc_sqlStates
181200211001           IF NOT lncc_sqlSuccessful AND
181300211001              NOT lncc_sqlEnd
181400211001              SET lnc_Err_51 TO TRUE
181500211001              MOVE lc_ErrCodeDescr51 TO lc_sqlErrShortDESCR
181600211001              PERFORM SQL_Fail_Process
181700211001           END-IF.
181800211001      * QC36467 - Ends
181900211001
182000211001      * ---------------------------------
182100211001       Calculate-Accrual-interest.
182200211001      * ---------------------------------
182300211001      * Initialize variables.
182400211001           INITIALIZE  INTCLC-PARMS.
182500211001
182600211001           MOVE lnc_GE-MODE           TO PASS-MODE.
182700211001           MOVE li_processdate        TO PASS-END-DATE-OPTION.
182800211001
182900211001138302     IF lc_Recalcul-AccIntYes
183000211001   |          MOVE li_EffProcessDate  TO PASS-END-DATE-OPTION
183100211001138302     END-IF.
183200211001
183300211001      *RFS1114065 Starts
183400211001           IF lc_FullYear = "Y" AND lc_Recalcul-AccIntYes
183500211001              MOVE li_EffProcessDate TO ld_DateYYYYMMDD
183600211001              MOVE FUNCTION ADD-DURATION (ld_DateYYYYMMDD DAYS 1)
183700211001                                        TO ld_DateCCYYMMDD
183800211001              MOVE ld_DateCCYYMMDD   TO PASS-END-DATE-OPTION
183900211001           END-IF.
184000211001      *RFS1114065 Ends
184100211001
184200211001           EXEC SQL
184300211001            SELECT COUNT(*)
184400211001             INTO   :li_CountGIC
184500211001             FROM WKGICINT
184600211001           END-EXEC.
184700211001
184800211001           MOVE SQLSTATE TO lc_sqlStates.
184900211001           IF NOT lncc_sqlSuccessful
185000211001              SET lnc_Err_42 TO TRUE
185100211001              MOVE lnc_ErrSelectWKGICINT TO lc_sqlErrShortDESCR
185200211001              PERFORM  SQL_Fail_Process
185300211001           ELSE
185400211001             IF li_CountGIC > 0
185500211001      * Load from QTEMP/WKGICINT  into QTEMP/MFAGIWRP data.
185600211001                    CALL "QCMDEXC" USING lc_CL-Command-1 ln_PACK-VAL-1
185700211001      * Call program INTCLC with parameter.
185800211001                    CALL   "INTCLC"  USING INTCLC-PARMS
185900211001                    CANCEL "INTCLC"
186000211001
186100211001                    IF RETN-RET-CODE NOT = lnc_zeros
186200211001                       DISPLAY "Error in WKGICINT Process from INTCLC:"
186300211001                                RETN-RET-CODE
18640021100136643 *                PERFORM Force-Msgw
186500211001                    END-IF
186600211001      * Load from QTEMP/MFAGIWRP into QTEMP/WKACCRINT data.
186700211001                    CALL "QCMDEXC" USING lc_CL-Command-2 ln_PACK-VAL-2
186800211001              END-IF
186900211001            END-IF.
187000211001
187100211001             EXEC SQL
187200211001               DELETE FROM QTEMP/MFAGIWRP
187300211001             END-EXEC.
187400211001
187500211001             MOVE SQLSTATE TO lc_sqlStates.
187600211001             IF lc_sqlStates = lnc_01504 OR lncc_sqlSuccessful
187700211001                OR lncc_sqlEnd
187800211001                CONTINUE
187900211001             ELSE
188000211001                SET lnc_Err_16 TO TRUE
188100211001                MOVE lnc_ErrDeleteMFAGIWRP TO lc_sqlErrShortDESCR
188200211001                PERFORM SQL_Fail_Process
188300211001             END-IF.
188400211001      * Initialize variables.
188500211001             INITIALIZE INTCLC-PARMS.
188600211001
188700211001             MOVE lnc_DE-MODE       TO PASS-MODE.
188800211001             MOVE li_processdate    TO PASS-END-DATE-OPTION.
188900211001
189000211001138302       IF lc_Recalcul-AccIntYes
189100211001   |            MOVE li_EffProcessDate  TO PASS-END-DATE-OPTION
189200211001138302       END-IF.
189300211001      *RFS1114065 Starts
189400211001             IF lc_FullYear = "Y" AND lc_Recalcul-AccIntYes
189500211001                MOVE li_EffProcessDate TO ld_DateYYYYMMDD
189600211001                MOVE FUNCTION ADD-DURATION (ld_DateYYYYMMDD DAYS 1)
189700211001                                        TO ld_DateCCYYMMDD
189800211001                MOVE ld_DateCCYYMMDD   TO PASS-END-DATE-OPTION
189900211001             END-IF.
190000211001      *RFS1114065 Ends
190100211001
190200211001             EXEC SQL
190300211001               SELECT COUNT(*)
190400211001                      INTO :li_CountDII
190500211001                FROM WKDIIINT
190600211001             END-EXEC.
190700211001
190800211001             MOVE SQLSTATE TO lc_sqlStates
190900211001             IF NOT lncc_sqlSuccessful
191000211001                SET lnc_Err_43 TO TRUE
191100211001                MOVE lnc_ErrSelectWKDIIINT TO lc_sqlErrShortDESCR
191200211001                PERFORM  SQL_Fail_Process
191300211001             ELSE
191400211001                IF li_CountDII > 0
191500211001      * Load from QTEMP/WKDIIINT into QTEMP/MFAGIWRP data.
191600211001                   CALL "QCMDEXC" USING lc_CL-Command-3 ln_PACK-VAL-3
191700211001
191800211001      * Call program INTCLC with parameter.
191900211001                   CALL "INTCLC"  USING INTCLC-PARMS
192000211001                   CANCEL "INTCLC"
192100211001
192200211001                   IF RETN-RET-CODE NOT = lnc_zeros
192300211001                      DISPLAY "Error in WKDIIINT Process from INTCLC:"
192400211001                               RETN-RET-CODE
19250021100136643 *               PERFORM Force-Msgw
192600211001                   END-IF
192700211001      * Load from QTEMP/MFAGIWRP into QTEMP/WKACCRINT data.
192800211001                   CALL "QCMDEXC" USING lc_CL-Command-4 ln_PACK-VAL-4
192900211001                END-IF
193000211001             END-IF.
193100211001
193200211001             SET lb_eofAcc-AmtNo TO TRUE.
193300211001             EXEC SQL
193400211001               OPEN lcu_AccrualAmt
193500211001             END-EXEC.
193600211001
193700211001             MOVE SQLSTATE TO lc_sqlStates.
193800211001             IF NOT lncc_sqlSuccessful
193900211001                SET lnc_Err_11 TO TRUE
194000211001                MOVE lnc_ErrOpenCurAccruAmt TO lc_sqlErrShortDESCR
194100211001                PERFORM  SQL_Fail_Process
194200211001             END-IF.
194300211001
194400211001      * RFS138564 - START
194500211001             IF lc_Process-Mode = lnc_TRNRVS
194600211001             AND li_CountDII = 0
194700211001             AND li_CountGIC = 0
194800211001                 MOVE ZEROES         TO li_AccrualAmt
194900211001                 MOVE li_Accountwknp TO li_AccrualAccount
195000211001                 PERFORM Calc-Acc-Amt
195100211001                 SET lb_eofAcc-Amtyes TO TRUE
195200211001             END-IF
195300211001      * RFS138564 - END
195400211001
195500211001             PERFORM Process-Accrual-amt UNTIL lb_eofAcc-Amtyes.
195600211001
195700211001             IF lb_eofAcc-Amtyes
195800211001               EXEC SQL
195900211001                 CLOSE lcu_AccrualAmt
196000211001               END-EXEC
196100211001               MOVE SQLSTATE TO lc_sqlStates
196200211001               IF NOT lncc_sqlSuccessful
196300211001                  SET lnc_Err_19 TO TRUE
196400211001                  MOVE lnc_ErrCloselcu_AccrualAmt
196500211001                                        TO lc_sqlErrShortDESCR
196600211001                  PERFORM  SQL_Fail_Process
196700211001               END-IF
196800211001             END-IF.
196900211001
197000211001      * ---------------------------------
197100211001       Process-Accrual-amt.
197200211001      * ---------------------------------
197300211001           MOVE li_ProcessDate TO PROCESS-DATE OF
197400211001                                  lc_MFAGIDIACP_Rec,
197500211001                                  TRADE-DATE OF
197600211001                                  lc_MFAGIDIACP_Rec.
197700211001
197800211001137239         SET lb_AccrualAmtYes TO TRUE
197900211001
198000211001           EXEC SQL
198100211001                FETCH NEXT FROM lcu_AccrualAmt INTO
198200211001                  :li_AccrualAccount,
198300211001                  :li_AccrualAmt
198400211001           END-EXEC.
198500211001           MOVE SQLSTATE TO lc_sqlStates.
198600211001           EVALUATE TRUE
198700211001             WHEN lncc_sqlSuccessful
198800211001137239         PERFORM Check-Rejection
198900211001137239         SET lb_AccrualAmtNo  TO TRUE
199000211001               PERFORM Calc-Acc-Amt
199100211001138589         IF lc_Process-Mode = lnc_RCALCACB
199200211001138589            PERFORM Delete-MFAACCATP-rec
199300211001138589         END-IF
199400211001             WHEN lncc_sqlEnd
199500211001               SET lb_eofAcc-Amtyes TO TRUE
199600211001             WHEN OTHER
199700211001               SET lnc_Err_35  TO TRUE
199800211001               PERFORM SQL_Fail_Process
199900211001           END-EVALUATE.
200000211001
200100211001      * RFS137239 - Starts
200200211001      * ---------------------------------
200300211001       Check-Rejection.
200400211001      * ---------------------------------
200500211001           INITIALIZE  li_Account-Num.
200600211001
200700211001           IF lb_AccrualAmtYes
200800211001              MOVE li_AccrualAccount TO li_Account-Num
200900211001              PERFORM Get-Rejection-Record
201000211001           ELSE
201100211001              IF lb_CallINTCLCYes
201200211001                 MOVE li_AccountNo   TO li_Account-Num
201300211001                 PERFORM Get-Rejection-Record
201400211001              END-IF
201500211001           END-IF.
201600211001
201700211001      * ---------------------------------
201800211001       Get-Rejection-Record.
201900211001      * ---------------------------------
202000211001           INITIALIZE  li_CountREJ.
202100211001
202200211001           EXEC SQL
202300211001             SELECT COUNT(*)
202400211001             INTO   :li_CountREJ
202500211001             FROM   MFAGICREJ GICREJ
202600211001             WHERE GICREJ.ACCOUNT_NO = :li_Account-Num
202700211001           END-EXEC
202800211001
202900211001           MOVE SQLSTATE         TO lc_sqlStates.
203000211001           IF NOT lncc_sqlSuccessful
203100211001              SET lnc_Err_60     TO TRUE
203200211001              MOVE lnc-ErrDesc60 TO lc_sqlErrShortDESCR
203300211001              PERFORM  SQL_Fail_Process
203400211001           ELSE
203500211001              IF lncc_sqlSuccessful
203600211001                 PERFORM Check-MFAACCATP-records
203700211001              END-IF
203800211001           END-IF.
203900211001
204000211001      * ---------------------------------
204100211001       Check-MFAACCATP-records.
204200211001      * ---------------------------------
204300211001           INITIALIZE  li_CountATP,
204400211001                       lc_ChangeCategory.
204500211001
204600211001           EXEC SQL
204700211001             SELECT COUNT(*)
204800211001             INTO   :li_CountATP
204900211001             FROM   MFAACCATP
205000211001             WHERE  ACCOUNT_ATTRIBUTE_CODE = :lnc_ICACB
205100211001             AND    ACCOUNT_NO = :li_Account-Num
205200211001           END-EXEC
205300211001
205400211001           MOVE SQLSTATE         TO lc_sqlStates.
205500211001           IF NOT lncc_sqlSuccessful
205600211001              SET lnc_Err_61     TO TRUE
205700211001              MOVE lnc-ErrDesc61 TO lc_sqlErrShortDESCR
205800211001              PERFORM  SQL_Fail_Process
205900211001           ELSE
206000211001              IF (li_CountATP > 0  AND
206100211001                  li_CountREJ > 0)
206200211001                 SET lb_REJrecModeYes TO TRUE
206300211001                 CONTINUE
206400211001              ELSE
206500211001                 IF (li_CountATP = 0  AND
206600211001                     li_CountREJ > 0)
206700211001                    PERFORM Insert-MFAACCATP-rec
206800211001                    MOVE lnc_AccACBinsert TO lc_ChangeCategory
206900211001                    PERFORM Create-MFAIVRCLP-Log
207000211001                    SET lb_REJrecModeYes TO TRUE
207100211001                 ELSE
207200211001                    IF (li_CountATP > 0  AND
207300211001                        li_CountREJ = 0)
207400211001                       PERFORM Delete-MFAACCATP-rec
207500211001                       MOVE lnc_AccACBdelete TO lc_ChangeCategory
207600211001                       PERFORM Create-MFAIVRCLP-Log
207700211001                       SET lb_REJrecModeNo TO TRUE
207800211001                    END-IF
207900211001                 END-IF
208000211001              END-IF
208100211001           END-IF.
208200211001
208300211001      * ---------------------------------
208400211001       Insert-MFAACCATP-rec.
208500211001      * ---------------------------------
208600211001           EXEC SQL
208700211001             INSERT INTO MFAACCATP
208800211001               VALUES (:li_Account-Num,
208900211001                       :lnc_ICACB,
209000211001138950*                :li_ExpiryDate)
209100211001138950                 :li_ExpiryDate ,0)
209200211001           END-EXEC.
209300211001
209400211001           MOVE SQLSTATE          TO  lc_sqlStates
209500211001           IF NOT  lncc_sqlSuccessful
209600211001              SET  lnc_Err_62     TO  TRUE
209700211001              MOVE lnc-ErrDesc62  TO  lc_SqlErrShortDescr
209800211001              PERFORM Dsp-Error
209900211001           END-IF.
210000211001
210100211001      * ---------------------------------
210200211001       Delete-MFAACCATP-rec.
210300211001      * ---------------------------------
210400211001           EXEC SQL
210500211001             DELETE FROM MFAACCATP
210600211001             WHERE  ACCOUNT_NO = :li_Account-Num
210700211001             AND    ACCOUNT_ATTRIBUTE_CODE = :lnc_ICACB
210800211001           END-EXEC.
210900211001
211000211001           MOVE SQLSTATE         TO  lc_sqlStates
211100211001           IF NOT  lncc_sqlSuccessful
211200211001              SET  lnc_Err_63    TO  TRUE
211300211001              MOVE lnc-ErrDesc63 TO  lc_SqlErrShortDescr
211400211001              PERFORM Dsp-Error
211500211001           END-IF.
211600211001
211700211001      * ---------------------------------
211800211001       Create-MFAIVRCLP-Log.
211900211001      * ---------------------------------
212000211001           INITIALIZE  li_InvestorNo.
212100211001
212200211001           EXEC SQL
212300211001             SELECT COALESCE(IVRP.INVESTOR_NO, 0)
212400211001             INTO   :li_InvestorNo
212500211001             FROM   MFAIVRP IVRP
212600211001
212700211001             INNER JOIN MFAACCNTP ACCNTP ON
212800211001             ACCNTP.INVESTOR_NO = IVRP.INVESTOR_NO
212900211001
213000211001             WHERE ACCNTP.ACCOUNT_NO = :li_Account-Num
213100211001           END-EXEC.
213200211001
213300211001           MOVE SQLSTATE         TO lc_sqlStates.
213400211001           IF NOT lncc_sqlSuccessful
213500211001              SET lnc_Err_66     TO TRUE
213600211001              MOVE lnc-ErrDesc66 TO lc_sqlErrShortDESCR
213700211001              PERFORM  SQL_Fail_Process
213800211001           END-IF.
213900211001
214000211001           EXEC SQL
214100211001             INSERT  INTO MFAIVRCLP
214200211001             VALUES  (:li_InvestorNo,
214300211001                      :li_SystemDate,
214400211001                      :li_SystemTime,
214500211001                      :lc_UserID,
214600211001                      :lnc_FXACCACB,
214700211001                      :li_Account-Num,
214800211001                      :lc_InvestmentNo,
214900211001                      :lc_ChangeCategory)
215000211001           END-EXEC.
215100211001
215200211001           MOVE SQLSTATE          TO  lc_sqlStates
215300211001           IF NOT  lncc_sqlSuccessful
215400211001              SET  lnc_Err_67     TO  TRUE
215500211001              MOVE lnc-ErrDesc67  TO  lc_SqlErrShortDescr
215600211001              PERFORM Dsp-Error
215700211001           END-IF.
215800211001
215900211001      * RFS137239 - Ends
216000211001
216100211001      * RFS185233 - Begins
216200211001      * ---------------------------------
216300211001       Get-CntryCode.
216400211001      * ---------------------------------
216500211001              INITIALIZE lc_TaxCountryCode
216600211001              EXEC SQL
216700211001                SELECT COUNTRY_CODE,PROVINCE_CODE
216800211001                  INTO :lc_TaxCountryCode,
216900211001                       :lc_TaxProvinceCode
217000211001                FROM MFAACCNTP ACCNTP
217100211001                INNER JOIN MFAIVRP IVRP ON
217200211001                 IVRP.INVESTOR_NO = ACCNTP.INVESTOR_NO
217300211001                WHERE ACCNTP.ACCOUNT_NO = :li_Accountwknp
217400211001              END-EXEC
217500211001              MOVE SQLSTATE TO lc_sqlStates
217600211001              IF NOT lncc_sqlSuccessful
217700211001                SET lnc_Err_81 TO TRUE
217800211001                MOVE lnc-ErrDesc81 TO lc_sqlErrShortDESCR
217900211001                PERFORM SQL_Fail_Process
218000211001              END-IF.
218100211001      * RFS185233 - Ends
218200211001      * ---------------------------------
218300211001       Calc-Acc-Amt.
218400211001      * ---------------------------------
218500211001           MOVE li_AccrualAccount TO li_Accountwknp.
218600211001           PERFORM GetMktvalueInv.
218700211001           COMPUTE li_AccVal-GIO-TIO-Inv = li_AccrualAmt +
218800211001                                           li_acctmrktvalue.
218900211001           PERFORM Get-Latest-Account-ACB.
219000211001      *RFS137241 - Start
219100211001           IF lc_Process-Mode = lnc_TRNRVS
219200211001138307     OR lc_Recalcul-AccIntYes
219300211001      * RFS 138307 - begin - Kian's
219400211001              IF lc_AccAmtNo
219500211001              MOVE li_ACBAmount TO li_LatestACBAmt
219600211001              END-IF
219700211001      * RFS 138307 - end
219800211001138302*       COMPUTE li_AccVal-GIO-TIO-Inv = li_acctmrktvalue1
219900211001           END-IF
220000211001      *RFS137241 - End
220100211001           MOVE li_ProcessDate TO li_TradeDate.
220200211001           MOVE li_TradeDate TO li_Tradedatesplit.
220300211001      * RFS138564 - Start
220400211001           IF lc_Process-Mode = lnc_RCALCACB
220500211001              SET lc_Recalcul-AccIntYes  TO TRUE
220600211001              MOVE li_AccrualAmt  TO li_Accrint
220700211001           ELSE
220800211001152370* RFS 152370 - Begin Richie M
220900211001      *  Incorrect accrued interest on account anniversary
221000211001      *  for backdated redemption.
221100211001147036* Richie M - Defect xxxxxx - begin
221200211001147036*    IF lc_Recalcul-AccIntYes
221300211001147036*       MOVE li_AccrualAmt TO li_Accrint
221400211001147036*
221500211001147036*    ELSE
221600211001147036* Richie M - Defect xxxxxx - end
221700211001      *    COMPUTE li_Accrint =
221800211001      *            li_AccVal-GIO-TIO-inv - li_LatestACBAmt
221900211001      *            li_AccVal-GIO-TIO-inv - li_LatestACBAmt.
222000211001      * RFS 186962 - begin
222100211001      * RFS1112629 - Starts
222200211001           COMPUTE li_Accrint =
222300211001                   li_AccVal-GIO-TIO-inv - li_LatestACBAmt
222400211001      *    IF lc_AccAmtYes
222500211001      *       MOVE li_AccrualAmt TO li_Accrint
222600211001      **   ELSE
222700211001      **   COMPUTE li_Accrint =
222800211001      **           li_AccVal-GIO-TIO-inv - li_LatestACBAmt
222900211001      *    END-IF
223000211001      * RFS1112629 - Ends
223100211001      * RFS 186962 - end
223200211001152370* RFS 152370 - end   Richie M
223300211001           END-IF.
223400211001      * RFS138564 - End
223500211001      * RFS 138307 - begin - Kian's
223600211001           IF li_AccrInt < 0
223700211001             MOVE ZEROES to li_AccrInt
223800211001           END-IF.
223900211001      * RFS 138307 - end
224000211001           IF lc_AccAmtYes
224100211001              SET lc_CalcaccrualIntNo TO TRUE
224200211001           END-IF.
224300211001           IF lc_CalcaccrualIntNo
224400211001      * RFS185233 - Begins
224500211001           PERFORM Get-CntryCode
224600211001              IF lc_TaxCountryCode NOT = "CAN"
224700211001                 AND lc_ACBT5SetupValue = lnc_3
224800211001                 INITIALIZE li_Accrint
224900211001              END-IF
225000211001      *RFS185233 - Ends
225100211001              INITIALIZE MFAGIDIACP OF lc_MFAGIDIACP_rec
225200211001      * RFS185233 - Begins
225300211001              MOVE lc_TaxCountryCode TO TAX-COUNTRY-CODE OF
225400211001                                     lc_MFAGIDIACP_rec
225500211001              MOVE lc_TaxProvinceCode TO TAX-PROVINCE-CODE OF
225600211001                                     lc_MFAGIDIACP_rec
225700211001      *RFS185233 - Ends
225800211001              COMPUTE ACCRUED-INTREST OF lc_MFAGIDIACP_Rec
225900211001                   = li_Accrint
226000211001              COMPUTE ACB-AMT OF MFAGIDIACP = li_LatestACBAmt
226100211001                   + ACCRUED-INTREST OF lc_MFAGIDIACP_Rec
226200211001137241        COMPUTE li_PrevACB = ACB-AMT OF MFAGIDIACP
226300211001              MOVE li_AccrualAccount TO ACCOUNT-NO OF
226400211001                                     lc_MFAGIDIACP_Rec
226500211001              MOVE li_ProcessDate TO
226600211001                   PROCESS-DATE OF LC_MFAGIDIACP_REC,
226700211001                   TRADE-DATE OF LC_MFAGIDIACP_REC
226800211001              MOVE li_ProcessDate TO li_processdate1
226900211001              MOVE li_ProcessDateYYYY TO li_ProcessDateYYYY1
227000211001              MOVE li_ProcessDateYYYY1 TO
227100211001                         YEAR OF LC_MFAGIDIACP_REC
227200211001              IF lc_Recalcul-AccIntNo
227300211001                 PERFORM Insert-MFAGIDIACP-rec
227400211001              END-IF
227500211001              IF lc_Recalcul-AccIntYes
227600211001      * RFS 137241 - BEGIN
227700211001      *          EXEC SQL
227800211001134626*           SELECT EFFECTIVE_DATE
227900211001134626*           SELECT EFFECTIV_DATE
228000211001      *                  INTO :li_reeffectdate
228100211001      *             FROM MFAACMDP
228200211001      *            WHERE ACCOUNT_NO = :li_AccrualAccount
228300211001      *          END-EXEC
228400211001      *
228500211001      *         MOVE SQLSTATE TO lc_sqlStates
228600211001      *         IF NOT lncc_sqlSuccessful
228700211001      *            SET lnc_Err_44 TO TRUE
228800211001      *            MOVE lnc_ErrSelectreeffect TO lc_sqlErrShortDESCR
228900211001      *            PERFORM  SQL_Fail_Process
229000211001      *         END-IF
229100211001      *
229200211001      *         MOVE li_reeffectdate TO li_reeffectfordat
229300211001      *         MOVE FUNCTION SUBTRACT-DURATION
229400211001      *                                    (li_reeffectfordat DAYS 1)
229500211001      *                       TO li_reeffectdate1
229600211001      *         IF li_ProcessDateYYYY = li_TradeYYYY
229700211001      *            MOVE li_TradeYYYY TO li_reeffectdateYYYY
229800211001      *         ELSE
229900211001      *            IF li_reeffectdateMMDD < li_TradeMMDD
230000211001      *               MOVE li_ProcessDateYYYY TO li_reeffectdateYYYY
230100211001      *            ELSE
230200211001      *              IF li_TradeMMDD < li_reeffectdateMMDD
230300211001      *                 MOVE li_TradeYYYY TO li_reeffectdateYYYY
230400211001      *              END-IF
230500211001      *            END-IF
230600211001      *         END-IF
230700211001      *         MOVE li_reeffectdate3 TO li_reeffectdate4
230800211001138422* RFS 138422 - begin
230900211001  |   *  Fix the retrieval of Effective date to avoid MSGW.
231000211001  |   *         MOVE li_EffectivedatervsSplit TO li_reeffectdate4
231100211001  |             IF lc_Process-Mode = lnc_TRNRVS
231200211001  |             MOVE li_EffectiveDateRvsSplit TO li_Reeffectdate4
231300211001  |             ELSE
231400211001  |             MOVE li_EffectDate4  TO li_ReeffectDate4
231500211001                 IF lc_AccAmtYes
231600211001                 MOVE li_ProcessDate TO li_ReeffectDate4
231700211001                 END-IF
231800211001  |             END-IF
231900211001138422* RFS 138422 - end
232000211001      * RFS 137241 - END
232100211001                   EXEC SQL
232200211001                      SELECT COUNT(*)
232300211001                        INTO :li_Gidicount
232400211001                        FROM MFAGIDIACP
232500211001                      WHERE ACCOUNT_NO = :li_AccrualAccount
232600211001                        AND PROCESS_DATE = :li_reeffectdate4
232700211001                        AND TRADE_DATE = :li_reeffectdate4
232800211001                        AND CAPITAL_GAIN_AMOUNT = 0
232900211001                        AND DEPOSIT_AMT = 0
233000211001                        AND DISPOSITION_AMT = 0
233100211001                   END-EXEC
233200211001                   MOVE SQLSTATE TO lc_sqlStates
233300211001                   IF NOT lncc_sqlSuccessful
233400211001                      SET lnc_Err_48 TO TRUE
233500211001                      MOVE lnc_ErrSelectgidiacp  TO lc_sqlErrShortDESCR
233600211001                      PERFORM  SQL_Fail_Process
233700211001                   END-IF
233800211001
233900211001                  IF li_Gidicount > 0
234000211001                     COMPUTE li_reacbAmt =
234100211001137241                       li_LatestACBAmt + li_Accrint
234200211001137241*                      ACB-AMT OF MFAGIDIACP + li_Accrint
234300211001137241               COMPUTE li_PrevACB = li_reacbAmt
234400211001147036*            PERFORM V2-Rec-Accrued-Interest
234500211001                   EXEC SQL
234600211001                      UPDATE MFAGIDIACP
234700211001                           SET ACCRUED_INTREST = :li_Accrint
23480021100136708                      ,   ACB_AMT         = :li_reacbAmt
234900211001                      WHERE ACCOUNT_NO = :li_AccrualAccount
235000211001                        AND PROCESS_DATE = :li_reeffectdate4
235100211001                        AND TRADE_DATE = :li_reeffectdate4
235200211001                        AND CAPITAL_GAIN_AMOUNT = 0
235300211001                        AND DEPOSIT_AMT = 0
235400211001                        AND DISPOSITION_AMT = 0
235500211001                   END-EXEC
235600211001                   MOVE SQLSTATE TO lc_sqlStates
235700211001                   IF NOT lncc_sqlSuccessful
235800211001                      SET lnc_Err_45 TO TRUE
235900211001                      MOVE lnc_ErrUpdategidiacp  TO lc_sqlErrShortDESCR
236000211001                      PERFORM  SQL_Fail_Process
236100211001                   END-IF
236200211001                  ELSE
236300211001                   MOVE li_reeffectdate4 TO
236400211001                     PROCESS-DATE OF LC_MFAGIDIACP_REC,
236500211001                     TRADE-DATE OF LC_MFAGIDIACP_REC
236600211001137241*            MOVE li_reeffectdateYYYY TO
236700211001138422* RFS 138422 - begin
236800211001138422*  Fix the retrieval of Effective date to avoid MSGW
236900211001137241*            MOVE li_EffectiveRVSYYYY TO
237000211001      *                  YEAR OF LC_MFAGIDIACP_REC
237100211001138422          IF lc_Process-Mode = lnc_TRNRVS
237200211001  |                MOVE li_EffectiveRVSYYYY TO
237300211001  |                      YEAR OF LC_MFAGIDIACP_REC
237400211001  |             ELSE
237500211001      * RFS 138307 - begin Kian's issue
237600211001                   MOVE li_ReeffectDate4 TO
237700211001                        li_EffectiveDateSplit
237800211001      * RFS 138307 - end
237900211001  |                MOVE li_EffectiveYYYY TO
238000211001  |                      YEAR OF LC_MFAGIDIACP_REC
238100211001  |             END-IF
238200211001138422* RFS 138422 - end
238300211001                   PERFORM Insert-MFAGIDIACP-rec
238400211001                  END-IF
238500211001              END-IF
238600211001           END-IF.
238700211001
238800211001      * QC 36467-Starts
238900211001      * ---------------------------------
239000211001       GetMktvalueInv1.
239100211001      * ---------------------------------
239200211001137246     SET lb_eofAcc-InvNo  TO TRUE.
239300211001           PERFORM GetMKtTradeDate.
239400211001           PERFORM FindMKTValuexist.
239500211001
239600211001           IF li_CountMKT > 0
239700211001              PERFORM Get-Market-Value
239800211001           ELSE
239900211001              IF li_CountMKT = 0
240000211001137241           PERFORM CalcAcctLevelMKTValue
240100211001137241*          MOVE lnc_WKACCRINT TO lc_filename
240200211001  |   *          PERFORM Clear-Work-Files
240300211001  |   *          PERFORM Load-Account-Investments
240400211001  |   *          EXEC SQL
240500211001  |   *            DECLARE lcu_GetActInv CURSOR FOR
240600211001  |   *            SELECT ACCOUNT_NO,
240700211001  |   *                   INVESTMENT_CODE,
240800211001  |   *                   CERTIFICATE_ID_NO
240900211001  |   *            FROM   WKACCRINT
241000211001  |   *          END-EXEC
241100211001  |   *
241200211001  |   *          EXEC SQL
241300211001  |   *            OPEN lcu_GetActInv
241400211001  |   *          END-EXEC
241500211001  |   *          MOVE SQLSTATE TO lc_sqlStates
241600211001  |   *          IF NOT lncc_sqlSuccessful
241700211001  |   *             SET lnc_Err_53 TO TRUE
241800211001  |   *             MOVE lc_ErrCodeDescr53
241900211001  |   *               TO lc_sqlErrShortDESCR
242000211001  |   *             PERFORM  SQL_Fail_Process
242100211001  |   *          END-IF
242200211001  |   *
242300211001  |   *          PERFORM Process-Acc-INV UNTIL lb_eofAcc-InvYes
242400211001  |   *
242500211001  |   *          IF lb_eofAcc-InvYes
242600211001  |   *             EXEC SQL
242700211001  |   *                CLOSE lcu_GetActInv
242800211001  |   *             END-EXEC
242900211001137241*          END-IF
243000211001
243100211001      * RFS138950 - START
243200211001                 IF lc_Producttyperule = lnc_7
243300211001                   PERFORM GetAcctInv
243400211001141615*            IF (lc_Dispoptioncode = lnc_R AND
243500211001141615             IF lb_ReinvestTrade AND
243600211001                       lc_Transtypecodewknp = lnc_INT  AND
243700211001                       li_AcctInvAmt = 0
243800211001                       COMPUTE li_RetrnAccrualInterest =
243900211001                               li_RetrnAccrualInterest + li_Grossamtwknp
244000211001                   END-IF
244100211001141615* begin
244200211001                   IF lb_ReinvestTrade AND
244300211001                       lc_Transtypecodewknp = lnc_INT  AND
244400211001                       li_AcctInvAmt > 0
244500211001                       COMPUTE li_RetrnAccrualInterest =
244600211001                                                         li_Grossamtwknp
244700211001                   END-IF
244800211001                 END-IF
244900211001141615* end
245000211001      * RFS138950 - END
245100211001                 COMPUTE li_MarketValue = li_RetrnAccrualInterest +
245200211001                                          li_acctmrktvalue1
245300211001                 PERFORM Insert-TMPACTMKT
245400211001              END-IF
245500211001           END-IF.
245600211001
245700211001      * RFS138950 - Start
245800211001      * -----------------
245900211001       GetAcctInv.
246000211001      * -----------------
246100211001           EXEC SQL
246200211001              SELECT CURR_UNIT_BAL
246300211001              INTO   :li_AcctInvAmt
246400211001              FROM MFAACCIVP
246500211001              WHERE ACCOUNT_NO = :li_Accountwknp
246600211001              AND   INVESTMENT_CODE = :lc_Investmentcodewknp
246700211001           END-EXEC.
246800211001      * RFS138950 - End
246900211001
247000211001      * -----------------
247100211001       GetMKtTradeDate.
247200211001      * -----------------
247300211001           IF lc_TransTypeCodeWknp = lnc_SWO OR lnc_TRO
247400211001              MOVE li_TradeSWOTRO    TO li_Tradedatewknp
247500211001136431        MOVE li_SWOTROaccnowknp TO li_AccountNo
247600211001138009        MOVE li_GrossamtSWOTRO  TO li_GrossAmt
247700211001           ELSE
247800211001              MOVE li_Tradedatewknp  TO li_Tradedatewknp
247900211001136431        MOVE li_Accountwknp    TO li_AccountNo
248000211001138009        MOVE li_GrossamtWknp   TO li_GrossAmt
248100211001           END-IF.
248200211001
248300211001           MOVE li_Tradedatewknp  TO ld_DateYYYYMMDD
248400211001           MOVE FUNCTION SUBTRACT-DURATION (ld_DateYYYYMMDD DAYS 1)
248500211001                                  TO ld_DateCCYYMMDD
248600211001           MOVE ld_DateCCYYMMDD   TO li_Trade-Date
248700211001
248800211001           IF li_MKTValueMode = "P"
248900211001              COMPUTE li_MktTradeDate = li_Trade-Date
249000211001           END-IF.
249100211001
249200211001      * -----------------
249300211001       FindMKTValuexist.
249400211001      * -----------------
249500211001138009     INITIALIZE li_CountMKT.
249600211001           EXEC SQL
249700211001             SELECT COUNT(*)
249800211001             INTO   :li_CountMKT
249900211001             FROM   TMPACTMKT
250000211001             WHERE  ACCOUNT_NO = :li_AccountNo
250100211001             AND    TRADE_DATE = :li_MktTradeDate
250200211001           END-EXEC.
250300211001
250400211001           MOVE SQLSTATE TO lc_sqlStates.
250500211001           IF NOT lncc_sqlSuccessful
250600211001              SET lnc_Err_52         TO TRUE
250700211001              MOVE lc_ErrCodeDescr52 TO lc_sqlErrShortDESCR
250800211001              PERFORM  SQL_Fail_Process
250900211001           END-IF.
251000211001
251100211001      * --------------------
251200211001137241 CalcAcctLevelMKTValue.
251300211001  |   * ---------------------
251400211001138009     INITIALIZE lc_PrevInvestmentNo
251500211001138950                lc_PrevInvestmentNo1
251600211001  |                   li_acctmrktvalue1
251700211001  |                   li_RetrnAccrualInterest.
251800211001138009
251900211001      *RFS1002626-Starts
252000211001           IF lc_Process-Mode NOT = lnc_RCALCACB
252100211001      * RFS 1110593 - begin
252200211001            OR lb_RecalcModeYes
252300211001      * RFS 1110593 - end
252400211001      *RFS1002626-Ends
252500211001  |        MOVE lnc_WKACCRINT TO lc_filename
252600211001  |        PERFORM Clear-Work-Files
252700211001  |        PERFORM Load-Account-Investments
252800211001      *RFS1002626-Starts
252900211001           END-IF
253000211001      *RFS1002626-Ends
253100211001  |        EXEC SQL
253200211001  |          DECLARE lcu_GetActInv CURSOR FOR
253300211001  |          SELECT ACCOUNT_NO,
253400211001  |                 INVESTMENT_CODE,
253500211001  |                 CERTIFICATE_ID_NO
253600211001  |          FROM   WKACCRINT
253700211001      * RFS 1099872 - Start
253800211001             ORDER BY ACCOUNT_NO, INVESTMENT_CODE
253900211001      * RFS 1099872 - End
254000211001  |        END-EXEC
254100211001  |
254200211001  |        EXEC SQL
254300211001  |          OPEN lcu_GetActInv
254400211001  |        END-EXEC
254500211001  |        MOVE SQLSTATE TO lc_sqlStates
254600211001  |        IF NOT lncc_sqlSuccessful
254700211001  |           SET lnc_Err_53 TO TRUE
254800211001  |           MOVE lc_ErrCodeDescr53
254900211001  |             TO lc_sqlErrShortDESCR
255000211001  |           PERFORM  SQL_Fail_Process
255100211001  |        END-IF
255200211001  |
255300211001  |        PERFORM Process-Acc-INV UNTIL lb_eofAcc-InvYes
255400211001  |
255500211001  |        IF lb_eofAcc-InvYes
255600211001  |           EXEC SQL
255700211001  |              CLOSE lcu_GetActInv
255800211001  |           END-EXEC
255900211001137241     END-IF.
256000211001
256100211001      * ---------------------------------
256200211001       Process-Acc-INV.
256300211001      * ---------------------------------
256400211001           SET lb_eofAcc-InvNo  TO TRUE.
256500211001           EXEC SQL
256600211001                FETCH NEXT FROM lcu_GetActInv  INTO
256700211001                  :li_AccountNo,
256800211001                  :lc_InvestmentNo,
256900211001                  :li_CertificateID
257000211001           END-EXEC.
257100211001
257200211001           MOVE SQLSTATE TO lc_sqlStates.
257300211001           EVALUATE TRUE
257400211001             WHEN lncc_sqlSuccessful
257500211001137241       IF lc_Process-Mode = lnc_TRNRVS
257600211001138302*        MOVE lnc_A TO lc_DateType
257700211001  |            PERFORM Call-MKTVALTD
257800211001  |          ELSE
257900211001  |            PERFORM Call-MKTVALTD
258000211001137239         SET lb_CallINTCLCYes TO TRUE
258100211001  |            PERFORM Call-INTCLC
258200211001137241       END-IF
258300211001             WHEN lncc_sqlEnd
258400211001               SET lb_eofAcc-InvYes TO TRUE
258500211001             WHEN OTHER
258600211001               SET lnc_Err_54  TO TRUE
258700211001               MOVE lc_ErrCodeDescr54 TO lc_sqlErrShortDESCR
258800211001               PERFORM SQL_Fail_Process
258900211001           END-EVALUATE.
259000211001
259100211001      * ---------------------------------
259200211001       Get-Market-Value.
259300211001      * ---------------------------------
259400211001           EXEC SQL
259500211001             SELECT COALESCE(MARKET_VALUE, 0)
259600211001             INTO   :li_MarketValue
259700211001             FROM   TMPACTMKT
259800211001             WHERE  ACCOUNT_NO = :li_AccountNo
259900211001             AND    TRADE_DATE = :li_MktTradeDate
260000211001           END-EXEC.
260100211001
260200211001           MOVE SQLSTATE TO lc_sqlStates.
260300211001           IF NOT lncc_sqlSuccessful
260400211001              SET lnc_Err_55         TO TRUE
260500211001              MOVE lc_ErrCodeDescr55 TO lc_sqlErrShortDESCR
260600211001              PERFORM  SQL_Fail_Process
260700211001           END-IF.
260800211001
260900211001      * ---------------------------------
261000211001       Call-MKTVALTD.
261100211001      * ---------------------------------
261200211001           INITIALIZE lc_MKTVALTD_Parms.
261300211001
261400211001           IF (lc_InvestmentNo NOT = lc_PrevInvestmentNo  AND
261500211001               lc_PrevInvestmentNo NOT = SPACES )         OR
261600211001               lc_PrevInvestmentNo = SPACES
261700211001              MOVE li_MktTradeDate       TO li_MKTV_Date
261800211001              MOVE li_AccountNo          TO li_MKTV_AccountNo
261900211001              MOVE lc_InvestmentNo       TO lc_MKTV_InvestmentCode
262000211001              MOVE lc_DateType           TO lc_MKTV_DateInd
262100211001
262200211001              CALL "MKTVALTD" USING  li_MKTV_Date
262300211001                                     li_MKTV_AccountNo
262400211001                                     lc_MKTV_InvestmentCode
262500211001                                     li_MKTV_ValueInvestmentCur
262600211001                                     li_MKTV_MarketValueBase
262700211001                                     li_MKTV_BookValueBase
262800211001                                     li_MKTV_BookValueExchange
262900211001                                     li_MKTV_TranClosUnitBal
263000211001                                     li_MKTV_BaseUnitPrice
263100211001                                     li_MKTV_ValueBaseCurrency
263200211001                                     lc_MKTV_ErrorCode
263300211001                                     lc_MKTV_DateInd
263400211001
263500211001136431*       COMPUTE li_acctmrktvalue1 = li_MKTV_MarketValueBase
263600211001136431        COMPUTE li_acctmrktvalue1 =
263700211001136431                li_acctmrktvalue1 + li_MKTV_MarketValueBase
263800211001
263900211001      * RFS 138950 - START
264000211001      *       IF lc_Transtypecodewknp = lnc_SEL OR
264100211001      *          lc_Transtypecodewknp = lnc_INT
264200211001      *          MOVE lnc_V2           TO PASS-MODE
264300211001      *          MOVE ZEROES           TO PASS-CERTIFICATE-ID-NO
264400211001      *          MOVE li_AccountNo          TO PASS-ACCOUNT-NO
264500211001      *          MOVE lc_InvestmentNo       TO PASS-INVESTMENT-CODE
264600211001      *          MOVE li_Tradedatewknp      TO PASS-END-DATE-OPTION
264700211001      *          MOVE ZEROS                 TO PASS-GROSS-AMT
264800211001      *          CALL "INTCLC" USING    INTCLC-PARMS
264900211001      *          COMPUTE li_RetrnAccrualInterest =
265000211001      *                  li_RetrnAccrualInterest + RETN-ACCRUAL-AMT
265100211001      *
265200211001      *          IF RETN-RET-CODE NOT = lnc_zeros
265300211001      *             DISPLAY "Error in WKGICINT Process from INTCLC:"
265400211001      *                       RETN-RET-CODE
265500211001      *             PERFORM Force-Msgw
265600211001      *             PERFORM Check-Rejection
265700211001      *             SET lb_CallINTCLCNo TO TRUE
265800211001      *          END-IF
265900211001      *       END-IF
266000211001              MOVE lc_InvestmentNo   TO lc_PrevInvestmentNo
266100211001           END-IF.
266200211001      * RFS 138950 - END
266300211001
266400211001      * ----------------
266500211001       Call-INTCLC.
266600211001      * ----------------
266700211001      * RFS138950 - Start
266800211001      * RFS 138307 - begin
266900211001      *  Call INTCLC in V2 mode for redemption/interest trans
267000211001      *  return accrual amount on specified date.
267100211001      *  set lb_eofAcc-InvYes to true because V2 report act level
267200211001      *  accrual we don't need to loop per cert.
267300211001      * RFS138564 - Start
267400211001      *    IF lc_Transtypecodewknp = lnc_SEL OR
267500211001      *       lc_Transtypecodewknp = lnc_INT
267600211001      *       MOVE lnc_V2           TO PASS-MODE
267700211001      *       MOVE ZEROES           TO PASS-CERTIFICATE-ID-NO
267800211001DD    *       SET lb_eofAcc-InvYes  TO TRUE
267900211001      *    ELSE
268000211001      *       MOVE lnc_SE                TO PASS-MODE
268100211001      *       MOVE li_CertificateID      TO PASS-CERTIFICATE-ID-NO
268200211001      *    END-IF.
268300211001      *
268400211001      *    MOVE lnc_SE                TO PASS-MODE.
268500211001      *    MOVE li_AccountNo          TO PASS-ACCOUNT-NO.
268600211001      *    MOVE lc_InvestmentNo       TO PASS-INVESTMENT-CODE.
268700211001      *    MOVE li_CertificateID      TO PASS-CERTIFICATE-ID-NO.
268800211001      * RFS 138307 - end
26890021100136708 *    MOVE li_MktTradeDate       TO PASS-END-DATE-OPTION.
26900021100136708 *    MOVE li_Tradedatewknp      TO PASS-END-DATE-OPTION.
269100211001      *    MOVE ZEROS                 TO PASS-GROSS-AMT.
269200211001      *
269300211001      *    CALL "INTCLC" USING    INTCLC-PARMS.
269400211001      *    COMPUTE li_RetrnAccrualInterest =
269500211001      *            li_RetrnAccrualInterest + RETN-ACCRUAL-AMT.
269600211001      *
269700211001      *    IF RETN-RET-CODE NOT = lnc_zeros
269800211001      *       DISPLAY "Error in WKGICINT Process from INTCLC:"
269900211001      *                 RETN-RET-CODE
27000021100136643 *       PERFORM Force-Msgw
270100211001137239*       PERFORM Check-Rejection
270200211001137239*       SET lb_CallINTCLCNo TO TRUE
270300211001      *    END-IF.
270400211001      * RFS138950 - End
270500211001
270600211001      * RFS 138950 - START
270700211001           IF (lc_InvestmentNo NOT = lc_PrevInvestmentNo1 AND
270800211001               lc_PrevInvestmentNo1 NOT = SPACES )         OR
270900211001               lc_PrevInvestmentNo1 = SPACES
271000211001      * RFS 139596 - begin RM
271100211001      *       IF lc_Transtypecodewknp = lnc_SEL OR
271200211001      *       IF lc_Transtypecodewknp = lnc_SEL OR
271300211001      *          lc_Transtypecodewknp = lnc_SWO OR
271400211001      *          lc_Transtypecodewknp = lnc_INT
271500211001      * RFS 139596 - end
271600211001      *           MOVE lnc_V2           TO PASS-MODE
271700211001017021             MOVE lnc_V3           TO PASS-MODE
271800211001
271900211001                 MOVE ZEROES           TO PASS-CERTIFICATE-ID-NO
272000211001                 MOVE li_AccountNo          TO PASS-ACCOUNT-NO
272100211001                 MOVE lc_InvestmentNo       TO PASS-INVESTMENT-CODE
272200211001                 MOVE li_Tradedatewknp      TO PASS-END-DATE-OPTION
272300211001                 MOVE ZEROS                 TO PASS-GROSS-AMT
272400211001                 CALL "INTCLC" USING    INTCLC-PARMS
272500211001                 COMPUTE li_RetrnAccrualInterest =
272600211001                         li_RetrnAccrualInterest + RETN-ACCRUAL-AMT
272700211001
272800211001
272900211001                 IF RETN-RET-CODE NOT = lnc_zeros
273000211001                    DISPLAY "Error in WKGICINT Process from INTCLC:"
273100211001                              RETN-RET-CODE
273200211001                    PERFORM Check-Rejection
273300211001                    SET lb_CallINTCLCNo TO TRUE
273400211001                 END-IF
273500211001      * RFS1115174 - Starts
273600211001             IF lc_Process-Mode = 'RCALCACB' OR
273700211001                 lc_Process-Mode = lnc_JOBDAILY
273800211001             INITIALIZE lc_GICVars
273900211001             EXEC SQL
274000211001                SELECT BUSINESS_DAY
274100211001                       INTO :li_NextBusDate
274200211001                FROM   MFABUSDAP
274300211001                WHERE BUSINESS_DAY > :li_Processdatewknp
274400211001                AND   ALLOW_TRADING = :lnc_Y
274500211001                ORDER BY BUSINESS_DAY ASC
274600211001                 FETCH FIRST ROW ONLY
274700211001             END-EXEC
274800211001              MOVE SQLSTATE TO lc_sqlStates
274900211001              IF NOT lncc_sqlSuccessful
275000211001                SET lnc_Err_82 TO TRUE
275100211001                MOVE lnc-ErrDesc82 TO lc_sqlErrShortDESCR
275200211001                PERFORM SQL_Fail_Process
275300211001              END-IF
275400211001
275500211001             EXEC SQL
275600211001                  SELECT
275700211001                  COALESCE(SUM(TRNP.GROSS_AMT),0)
275800211001                  INTO
275900211001                  :li_GICGrossAmt
276000211001                  FROM   MFATRNP TRNP
276100211001                  INNER  JOIN MFAGITRP GITRP
276200211001                  ON    TRNP.PLACEMENT_DATE = GITRP.PLACEMENT_DATE
276300211001                  AND    TRNP.TRANS_NO       = GITRP.TRANS_NO
276400211001                  INNER  JOIN MFAGICDP GICDP
276500211001                  ON     GITRP.CERTIFICATE_ID_NO
276600211001                  =  GICDP.CERTIFICATE_ID_NO
276700211001                  WHERE  TRNP.ACCOUNT_NO =  :li_AccountNo
276800211001      *RFS1118903 - Starts
276900211001                  AND    TRNP.INVESTMENT_CODE= :lc_InvestmentNo
277000211001      *RFS1118903 - Ends
277100211001                  AND    TRNP.TRADE_DATE >= :li_Tradedatewknp
277200211001                  AND    TRNP.PROCESS_DATE < :li_NextBusDate
277300211001                  AND    TRNP.TRADE_DATE = GICDP.MATURITY_DATE
277400211001                  AND    GITRP.CERT_TXN_RELATIONSHIP = "INT"
277500211001                  AND    GICDP.CERT_STATUS_CODE = "C"
277600211001                  AND    TRNP.PROCESS_DATE < TRNP.TRADE_DATE
277700211001             END-EXEC
277800211001              MOVE SQLSTATE TO lc_sqlStates
277900211001              IF NOT lncc_sqlSuccessful
278000211001                SET lnc_Err_83 TO TRUE
278100211001                MOVE lnc-ErrDesc83 TO lc_sqlErrShortDESCR
278200211001                PERFORM SQL_Fail_Process
278300211001              END-IF
278400211001
278500211001
278600211001                   COMPUTE li_RetrnAccrualInterest =
278700211001                        li_RetrnAccrualInterest + li_GICGrossAmt
278800211001            END-IF
278900211001      * RFS1115174 - Ends
279000211001      * RFS 139596 - begin RM
279100211001      *       END-IF
279200211001      * RFS 139596 - end
279300211001              MOVE lc_InvestmentNo   TO lc_PrevInvestmentNo1
279400211001           END-IF.
279500211001
279600211001      * RFS 139596 - begin RM
279700211001      *    IF lc_Transtypecodewknp NOT = lnc_SEL AND
279800211001      *    IF lc_Transtypecodewknp NOT = lnc_SEL AND
279900211001      *       lc_Transtypecodewknp NOT = lnc_SWO AND
280000211001      *       lc_Transtypecodewknp NOT = lnc_INT
280100211001      * RFS 139596 - end
280200211001      * RFS 139596 - begin RM
280300211001      *       MOVE lnc_SE                TO PASS-MODE
280400211001      *       MOVE li_CertificateID      TO PASS-CERTIFICATE-ID-NO
280500211001      *       MOVE li_AccountNo          TO PASS-ACCOUNT-NO
280600211001      *       MOVE lc_InvestmentNo       TO PASS-INVESTMENT-CODE
280700211001      *       MOVE li_Tradedatewknp      TO PASS-END-DATE-OPTION
280800211001      *       MOVE ZEROS                 TO PASS-GROSS-AMT
280900211001      *
281000211001      *       CALL "INTCLC" USING    INTCLC-PARMS
281100211001      *       COMPUTE li_RetrnAccrualInterest =
281200211001      *               li_RetrnAccrualInterest + RETN-ACCRUAL-AMT
281300211001      *
281400211001      *       IF RETN-RET-CODE NOT = lnc_zeros
281500211001      *          DISPLAY "Error in WKGICINT Process from INTCLC:"
281600211001      *                    RETN-RET-CODE
281700211001      *          PERFORM Check-Rejection
281800211001      *          SET lb_CallINTCLCNo TO TRUE
281900211001      *       END-IF
282000211001      *    END-IF.
282100211001      * RFS 138950 - End
282200211001      * RFS 139596 - end
282300211001
282400211001
282500211001      *    END-IF
282600211001      * RFS138564 - End
282700211001
282800211001      * QC 36467-Ends
282900211001
283000211001      *-------------------
283100211001       GetMktvalueInv.
283200211001      *-------------------
283300211001
283400211001      * RFS 140268 begin - RM
283500211001      * Get the true MV of the account
283600211001
283700211001           INITIALIZE li_AcctNo
283800211001                      lc_InvCode
283900211001                      li_ActMktVal
284000211001                      lc_ActInvEOF.
284100211001      *    EXEC SQL
284200211001      *      SELECT
284300211001      *             COALESCE(SUM(CURR_UNIT_BAL), 0)
284400211001      *             INTO:li_acctmrktvalue
284500211001      *       FROM MFAACCIVP ACCIVP
284600211001      *       INNER JOIN MFAINVP INVP
284700211001      *         ON ACCIVP.INVESTMENT_CODE = INVP.INVESTMENT_CODE
284800211001      *       INNER JOIN MFAPRTCDP RTCDP
284900211001      *         ON INVP.PRODUCT_TYPE_CODE = RTCDP.PRODUCT_TYPE_CODE
285000211001      *        AND RTCDP.PRODUCT_TYPE_RULE IN ("2","7")
285100211001      *       WHERE ACCIVP.ACCOUNT_NO = :li_Accountwknp
285200211001      *    END-EXEC.
285300211001
285400211001      *    MOVE SQLSTATE TO lc_sqlStates.
285500211001      *    IF NOT lncc_sqlSuccessful
285600211001      *       SET lnc_Err_18 TO TRUE
285700211001      *       MOVE lnc_ErrSelectAccmktval TO lc_sqlErrShortDESCR
285800211001      *       PERFORM  SQL_Fail_Process
285900211001      *    END-IF.
286000211001
286100211001           EXEC SQL
286200211001            DECLARE GetActInv CURSOR FOR
286300211001             SELECT AccIvp.Account_No,
286400211001                    AccIvp.Investment_Code
286500211001              FROM MFAACCIVP AccIvp
286600211001              INNER JOIN MFAINVP Invp
286700211001                ON AccIvp.Investment_Code = Invp.INVESTMENT_CODE
286800211001              INNER JOIN MFAPRTCDP PrdCod
286900211001                ON Invp.PRODUCT_TYPE_CODE = PrdCod.PRODUCT_TYPE_CODE
287000211001               AND PrdCod.PRODUCT_TYPE_RULE IN ("2","7")
287100211001              WHERE AccIvp.ACCOUNT_NO = :li_Accountwknp
287200211001           END-EXEC.
287300211001
287400211001           EXEC SQL
287500211001            OPEN GetActInv
287600211001           END-EXEC.
287700211001
287800211001           MOVE SQLSTATE TO lc_sqlStates.
287900211001           IF NOT lncc_sqlSuccessful
288000211001              SET lnc_Err_69 TO TRUE
288100211001              MOVE lnc-ErrDesc69         TO lc_sqlErrShortDESCR
288200211001              PERFORM  SQL_Fail_Process
288300211001           END-IF.
288400211001
288500211001           PERFORM Process-ActInv-Cursor UNTIL ActInvEofYes.
288600211001
288700211001           MOVE li_ActMktVal TO li_AcctMrktValue.
288800211001      * RFS 186962 -  begin RM
288900211001           MOVE li_RetrnAccrualInterest TO li_Accrint
289000211001      * RFS 186962 -  end RM
289100211001
289200211001           EXEC SQL
289300211001             CLOSE GetActInv
289400211001           END-EXEC
289500211001
289600211001           MOVE SQLSTATE TO lc_sqlStates.
289700211001           IF NOT lncc_sqlSuccessful
289800211001              SET lnc_Err_71 TO TRUE
289900211001              MOVE lnc-ErrDesc71         TO lc_sqlErrShortDESCR
290000211001              PERFORM  SQL_Fail_Process
290100211001           END-IF.
290200211001
290300211001        Process-ActInv-Cursor.
290400211001
290500211001           EXEC SQL
290600211001                FETCH NEXT FROM GetActInv INTO
290700211001                  :li_AcctNo,
290800211001                  :lc_InvCode
290900211001           END-EXEC.
291000211001
291100211001           MOVE SQLSTATE TO lc_sqlStates.
291200211001           IF lncc_SqlSuccessful
291300211001              INITIALIZE lc_MKTVALTD_Parms
291400211001
291500211001      *  RFS 186962 - begin
291600211001      *       MOVE li_Tradedatewknp      TO li_MKTV_Date
291700211001              IF lc_AccAmtYes
291800211001                MOVE li_ProcessDate TO li_MKTV_Date
291900211001              ELSE
292000211001                MOVE li_Tradedatewknp TO li_MKTV_Date
292100211001              END-IF
292200211001      *  RFS 186962 - end
292300211001              MOVE li_AcctNo             TO li_MKTV_AccountNo
292400211001              MOVE lc_InvCode            TO lc_MKTV_InvestmentCode
292500211001              MOVE lc_DateType           TO lc_MKTV_DateInd
292600211001
292700211001              CALL "MKTVALTD" USING  li_MKTV_Date
292800211001                                     li_MKTV_AccountNo
292900211001                                     lc_MKTV_InvestmentCode
293000211001                                     li_MKTV_ValueInvestmentCur
293100211001                                     li_MKTV_MarketValueBase
293200211001                                     li_MKTV_BookValueBase
293300211001                                     li_MKTV_BookValueExchange
293400211001                                     li_MKTV_TranClosUnitBal
293500211001                                     li_MKTV_BaseUnitPrice
293600211001                                     li_MKTV_ValueBaseCurrency
293700211001                                     lc_MKTV_ErrorCode
293800211001                                     lc_MKTV_DateInd
293900211001
294000211001                COMPUTE li_ActMktVal =
294100211001                        li_ActMktVal + li_MKTV_MarketValueBase
294200211001
294300211001      * RM - RFS 186962 -begin
294400211001              IF li_EffProcessDate IS NOT EQUAL TO ZEROES
294500211001               IF lc_FullYear = "Y"
294600211001                  MOVE li_EffProcessDate TO ld_DateYYYYMMDD
294700211001                  MOVE FUNCTION ADD-DURATION (ld_DateYYYYMMDD DAYS 1)
294800211001                                            TO ld_DateCCYYMMDD
294900211001                  MOVE ld_DateCCYYMMDD TO li_EffProcessDate
295000211001               END-IF
295100211001               MOVE li_AcctNo TO li_AccountNo
295200211001               MOVE lc_InvCode TO lc_InvestmentNo
295300211001               MOVE li_EffProcessDate TO li_TradeDatewknp
295400211001               INITIALIZE lc_PrevInvestmentNo1
295500211001                          li_RetrnAccrualInterest
295600211001               PERFORM Call-INTCLC
295700211001               MOVE li_MKTV_Date to li_TradeDatewknp
295800211001              END-IF
295900211001      * RM - RFS 186962 -end
296000211001           ELSE
296100211001           IF lncc_SqlEnd
296200211001              SET ActInvEofYes TO TRUE
296300211001           ELSE
296400211001           IF NOT lncc_sqlSuccessful AND NOT lncc_SqlEnd
296500211001              SET lnc_Err_70 TO TRUE
296600211001              MOVE lnc-ErrDesc70          TO lc_sqlErrShortDESCR
296700211001              PERFORM  SQL_Fail_Process
296800211001           END-IF.
296900211001
297000211001      * RFS 140268 end - RM
297100211001      * ---------------------------------
297200211001       GetMktvalueRemInv.
297300211001      * ---------------------------------
297400211001           EXEC SQL
297500211001             SELECT
297600211001                    COALESCE(SUM(CURR_UNIT_BAL), 0)
297700211001                    INTO:li_acctmrktvalueRem
297800211001              FROM MFAACCIVP ACCIVP
297900211001              INNER JOIN MFAINVP INVP
298000211001                ON ACCIVP.INVESTMENT_CODE = INVP.INVESTMENT_CODE
298100211001              INNER JOIN MFAPRTCDP RTCDP
298200211001                ON INVP.PRODUCT_TYPE_CODE = RTCDP.PRODUCT_TYPE_CODE
298300211001               AND RTCDP.PRODUCT_TYPE_RULE IN ("2","7")
298400211001              WHERE ACCIVP.ACCOUNT_NO = :li_Accountwknp
298500211001              AND   ACCIVP.INVESTMENT_CODE <> :lc_investmentcodewknp
298600211001           END-EXEC.
298700211001
298800211001           MOVE SQLSTATE TO lc_sqlStates.
298900211001           IF NOT lncc_sqlSuccessful
299000211001              SET lnc_Err_18 TO TRUE
299100211001              MOVE lnc_ErrSelectAccmktval TO lc_sqlErrShortDESCR
299200211001              PERFORM  SQL_Fail_Process
299300211001           END-IF.
299400211001      * RFS1002626-Starts
299500211001      * ---------------------------------
299600211001       Open-WKTRNP-Cursor-Rcalc.
299700211001      * ---------------------------------
299800211001           EXEC SQL
299900211001             DECLARE lcu_mfatrnp1 CURSOR FOR
300000211001             SELECT ACCOUNT_NO,
300100211001                    PLACEMENT_DATE,
300200211001                    TRANS_NO,
300300211001                    TRADE_DATE,
300400211001                    PROCESS_DATE,
300500211001                    TRANS_TYPE_CODE,
300600211001                    CONTR_REDEM_CODE,
300700211001                    GROSS_AMT,
300800211001                    NET_AMT,
300900211001                    EFFECTIVE_DATE,
301000211001                    PRODUCT_TYPE_RULE,
301100211001                    INVESTMENT_CODE,
301200211001                    CLOSING_UNIT_BAL,
301300211001                    SPLIT_OPTION_CODE,
301400211001                    ACCOUNT_TYPE_CODE,
301500211001      *RFS187080 - Starts
301600211001      *             ACCT_TYPE_RULE
301700211001                    ACCT_TYPE_RULE,
301800211001                    PAYMENT_TYPE_CODE
301900211001      *RFS187080 - Ends
302000211001               FROM WKTRNP
302100211001               WHERE ACCOUNT_NO = :li_AccountNum
302200211001           END-EXEC.
302300211001
302400211001           EXEC SQL
302500211001             OPEN lcu_mfatrnp1
302600211001           END-EXEC.
302700211001
302800211001           MOVE SQLSTATE TO lc_sqlStates.
302900211001           IF NOT lncc_sqlSuccessful
303000211001              SET lnc_Err_72 TO TRUE
303100211001              MOVE lnc-ErrDesc72           TO lc_sqlErrShortDESCR
303200211001              PERFORM  SQL_Fail_Process
303300211001           END-IF.
303400211001      * RFS1002626-Ends
303500211001      * RFS138589 - Starts
303600211001      * ---------------------------------
303700211001       Process-MFAACCATP-Records.
303800211001      * ---------------------------------
303900211001           INITIALIZE li_AccountNum
304000211001                      lc_AccAttributeCd
304100211001      *RFS186075 - Starts
304200211001                      li_AccAttEffecDate
304300211001      *RFS186075 - Ends
304400211001                      li_ExpiryDate.
304500211001
304600211001           MOVE "N"                   TO lb_Eof-Wktrnp.
304700211001           SET lb_EndofCursorFlase    TO TRUE.
304800211001
304900211001           EXEC SQL
305000211001                FETCH NEXT FROM lcu_MFAACCATP INTO
305100211001                  :li_AccountNum,
305200211001                  :lc_AccAttributeCd,
305300211001      *RFS186075 - Starts
305400211001                  :li_AccAttEffecDate,
305500211001      *RFS186075 - Ends
305600211001                  :li_ExpiryDate
305700211001           END-EXEC.
305800211001
305900211001           MOVE SQLSTATE              TO lc_sqlStates.
306000211001           EVALUATE TRUE
306100211001             WHEN lncc_sqlSuccessful
306200211001      * RFS1002626-Starts
306300211001      *        PERFORM Get-MFAGIDIACP-records
306400211001      *        PERFORM Process-MFATRNP-records
306500211001      *RFS1106437 - Starts
306600211001               PERFORM Get-Last-Accrual-year
306700211001      *RFS1106437 - Ends
306800211001               SET lb_EOF-WKtrnpNo TO TRUE
306900211001               PERFORM Process-Recalc-records
307000211001               MOVE li_AccountNum  TO li_Account-Num
307100211001               PERFORM Delete-MFAACCATP-rec
307200211001      * RFS1002626-Ends
307300211001             WHEN lncc_sqlEnd
307400211001               SET lb_EndofCursorTrue TO TRUE
307500211001               PERFORM CLOSE-lcu_MFAACCATP
307600211001             WHEN OTHER
307700211001               SET lnc_Err_64         TO TRUE
307800211001               MOVE lnc-ErrDesc64     TO lc_sqlErrShortDESCR
307900211001               PERFORM SQL_Fail_Process
308000211001           END-EVALUATE.
308100211001
308200211001      * ---------------------------------
308300211001       CLOSE-lcu_MFAACCATP.
308400211001      * ---------------------------------
308500211001           EXEC SQL
308600211001             CLOSE lcu_MFAACCATP
308700211001           END-EXEC.
308800211001
308900211001      * ---------------------------------
309000211001       Get-MFAGIDIACP-records.
309100211001      * ---------------------------------
309200211001           INITIALIZE li_GIDIACP-ProcessDt.
309300211001
309400211001           EXEC SQL
309500211001             SELECT COALESCE(Max(PROCESS_DATE),0)
309600211001             INTO   :li_GIDIACP-ProcessDt
309700211001             FROM   MFAGIDIACP
309800211001             WHERE  ACCOUNT_NO = :li_AccountNum
309900211001           END-EXEC.
310000211001
310100211001           MOVE SQLSTATE  TO lc_sqlStates.
310200211001           IF lncc_sqlSuccessful
310300211001              CONTINUE
310400211001           ELSE
310500211001           IF NOT lncc_sqlSuccessful
310600211001              SET lnc_Err_65     TO TRUE
310700211001              MOVE lnc-ErrDesc65 TO lc_sqlErrShortDESCR
310800211001              PERFORM  SQL_Fail_Process
310900211001           END-IF.
311000211001      * RFS138589 - Ends
311100211001      * ---------------------------------
311200211001       Process-MFATRNP-records.
311300211001      * ---------------------------------
311400211001           EXEC SQL
311500211001             INSERT INTO WKTRNP
311600211001134626*      SELECT TRNP.*,ACMDP.EFFECTIVE_DATE,
311700211001134626       SELECT TRNP.*,ACMDP.EFFECTIV_DATE,
311800211001                    RTCDP.PRODUCT_TYPE_RULE,
311900211001      * RFS 140909 - begin RM
312000211001      *             ACCTYP.ACCOUNT_TYPE_CODE
312100211001                    ACCTYP.Account_Type_Code,
312200211001                    ACCTYP.Account_Type_Rule
312300211001      * RFS 140909 - end   RM
312400211001              FROM MFATRNP TRNP
312500211001              INNER JOIN MFATRDPSP TRDPSP
312600211001                ON TRDPSP.PLACEMENT_DATE = TRNP.PLACEMENT_DATE
312700211001               AND TRDPSP.TRANS_NO = TRNP.TRANS_NO
312800211001      * RFS 140909 - begin RM
312900211001      * to check for Out transaction for Cash to Non-Cash
313000211001      * transfers/switches to different accounts
313100211001              LEFT OUTER JOIN MFATRNTGP TGP ON
313200211001                TGP.PLACEMENT_DATE_2 = TRNP.PLACEMENT_DATE AND
313300211001                TGP.TRANS_NO_2 = TRNP.TRANS_NO AND
313400211001                TGP.RELATIONSHIP_TYPE = "DSB"
313500211001              LEFT OUTER JOIN MFATRNP TRN2 ON
313600211001                TRN2.PLACEMENT_DATE = TGP.PLACEMENT_DATE AND
313700211001                TRN2.TRANS_NO = TGP.TRANS_NO AND
313800211001                TRN2.TRANS_TYPE_CODE IN ("TRO", "SWO")
313900211001              LEFT OUTER JOIN MFAACCNTP NTP2 ON
314000211001                TRN2.ACCOUNT_NO = NTP2.ACCOUNT_NO
314100211001      * RFS 140909 - end   RM
314200211001              INNER JOIN MFAACCNTP ACCNTP
314300211001                ON ACCNTP.ACCOUNT_NO = TRNP.ACCOUNT_NO
314400211001              INNER JOIN MFAACMDP ACMDP
314500211001                ON ACCNTP.ACCOUNT_NO = ACMDP.ACCOUNT_NO
314600211001      * RFS 140909 - begin RM
314700211001      * RFS 138307 - begin Kian's
314800211001      *          AND
314900211001      *            ACMDP.EFFECTIV_DATE <> 0
315000211001      * RFS 138307 - end
315100211001      * RFS 140909 - end   RM
315200211001              INNER JOIN MFAACCTYP ACCTYP
315300211001                ON ACCTYP.ACCOUNT_TYPE_CODE = ACCNTP.ACCOUNT_TYPE_CODE
315400211001              INNER JOIN MFAACCIVP ACCIVP
315500211001                ON TRNP.ACCOUNT_NO = ACCIVP.ACCOUNT_NO
315600211001                AND TRNP.INVESTMENT_CODE = ACCIVP.INVESTMENT_CODE
315700211001              INNER JOIN MFAINVP INVP
315800211001                ON ACCIVP.INVESTMENT_CODE = INVP.INVESTMENT_CODE
315900211001              INNER JOIN MFAPRTCDP RTCDP
316000211001                ON INVP.PRODUCT_TYPE_CODE = RTCDP.PRODUCT_TYPE_CODE
31610021100136467           AND RTCDP.PRODUCT_TYPE_RULE IN ("2","7","6")
316200211001      * RFS 140909 - begin RM
316300211001      *       WHERE ACCTYP.ACCOUNT_TYPE_RULE  = "1"
316400211001      *         AND ACCNTP.NOMINEE <> "Y"
316500211001138589*         AND TRNP.PROCESS_DATE = :li_ProcessDate
316600211001      *         AND TRNP.TRANS_TYPE_CODE IN
316700211001      *                  ("BUY","SEL","SWI","TRI","INT")
316800211001      *         AND TRNP.TRANS_STATUS_CODE IN
316900211001      *                  ("HST","HSC")
317000211001              WHERE
317100211001               ((ACCTYP.ACCOUNT_TYPE_RULE = "1"
317200211001                 AND ACCNTP.NOMINEE <> "Y"
317300211001                 AND TRNP.TRANS_TYPE_CODE IN
317400211001                     ("BUY","SEL","INT"))
317500211001                OR
317600211001                (ACCNTP.NOMINEE <> "Y"
317700211001                 AND NTP2.NOMINEE <> "Y"
317800211001                 AND TRNP.TRANS_TYPE_CODE IN ("SWI", "TRI"))
317900211001                )
318000211001                AND TRNP.TRANS_STATUS_CODE IN
318100211001                         ("HST","HSC")
318200211001      * RFS138589 - Starts
318300211001                AND ((TRNP.PROCESS_DATE = :li_ProcessDate
318400211001                AND :lc_RecalcMode = "N")
318500211001      * RFS 140909 - end   RM
318600211001                OR  (ACCNTP.ACCOUNT_NO = :li_AccountNum
318700211001                AND :lc_RecalcMode = "Y"
318800211001                AND TRNP.PROCESS_DATE >= :li_GIDIACP-ProcessDt))
318900211001      * RFS138589 - Ends
319000211001138307*         ORDER BY TRDPSP.PROC_SEQ_NO
319100211001138307          ORDER BY TRNP.TRADE_DATE,TRDPSP.PROC_SEQ_NO
319200211001           END-EXEC.
319300211001           MOVE SQLSTATE TO lc_sqlStates.
319400211001           IF NOT lncc_sqlSuccessful AND
319500211001              NOT lncc_sqlEnd
319600211001              SET lnc_Err_19 TO TRUE
319700211001              MOVE lnc_ErrInsertWKTRNP TO lc_sqlErrShortDESCR
319800211001              PERFORM  SQL_Fail_Process
319900211001           END-IF.
320000211001138589     SET lb_ProcessYes  TO TRUE.
320100211001      * RFS1002626-Starts
320200211001           SET lb_ProcessNo   TO TRUE.
320300211001      * RFS1002626-Ends
320400211001           PERFORM Fetch-Wktrnp-Records UNTIL lb_Eof-Wktrnpyes.
320500211001      * ---------------------------------
320600211001       Process-Each-Transaction.
320700211001      * ---------------------------------
320800211001
320900211001      * RFS 138307 - begin Kian's
321000211001      *    SET lb_ACBAccrualFirstYes TO TRUE.
321100211001      * RFS 138307 - end   Kian's
321200211001
321300211001           EVALUATE lc_Transtypecodewknp
321400211001             WHEN lnc_BUY
321500211001      * RFS186964 - Starts
321600211001               PERFORM Validate-Disposition-Trans
321700211001               IF lc_NondispositionTransNo
321800211001      * RFS186964 - Ends
321900211001               PERFORM Process-Buy-transaction
322000211001      * RFS186964 - Starts
322100211001               END-IF
322200211001      * RFS186964 - Ends
322300211001             WHEN lnc_SEL
322400211001             WHEN lnc_INT
322500211001               PERFORM Process-Sell-transaction
322600211001             WHEN lnc_SWI
322700211001138302         MOVE li_Accountwknp       TO li_SWIAccountNo
322800211001   |           MOVE li_Placementdatewknp TO li_SWIPlacementDate
322900211001138302         MOVE li_Transnowknp       To li_SWITransNo
323000211001               PERFORM Process-switch-transaction
323100211001             WHEN lnc_TRI
323200211001      * RFS 140909 - begin RM
323300211001               MOVE li_Accountwknp       TO li_SwiAccountNo
323400211001               MOVE li_PlacementDatewknp TO li_SwiPlacementDate
323500211001               MOVE li_TransNowknp       TO li_SWITransNo
323600211001      * RFS 140909 - end   RM
323700211001               PERFORM process-Transfer-transaction
323800211001             WHEN OTHER
323900211001               CONTINUE
324000211001           END-EVALUATE.
324100211001      * ---------------------------------
324200211001       Fetch-Wktrnp-Records.
324300211001      * ---------------------------------
324400211001
324500211001      * RFS 138307 - begin Kian's
324600211001           SET lb_ACBAccrualFirstYes TO TRUE.
324700211001           INITIALIZE li_ACBAmount
324800211001138589                li_Effective-Date
324900211001      * RFS 140909 begin - RM
325000211001      *               li_EffectiveYYYY.
325100211001                      li_EffectiveYYYY
325200211001                      lc_TransferAtCost
325300211001                      lc_TransferAtMarket.
325400211001      * RFS 140909 end   - RM
325500211001           MOVE "N" TO lc_RejRecordMode.
325600211001      * RFS 138307 - end   Kian's
325700211001      * RFS1002626-Starts
325800211001           IF lc_Process-Mode IS NOT EQUAL 'RCALCACB'
325900211001      * RFS1002626-Ends
326000211001           EXEC SQL
326100211001                FETCH NEXT FROM lcu_mfatrnp INTO
326200211001                  :li_Accountwknp,
326300211001                  :li_Placementdatewknp,
326400211001                  :li_Transnowknp,
326500211001                  :li_Tradedatewknp,
326600211001                  :li_Processdatewknp,
326700211001                  :lc_Transtypecodewknp,
326800211001                  :lc_Contredemwknp,
326900211001                  :li_Grossamtwknp,
327000211001                  :li_Netamtwknp,
327100211001                  :li_Effectivedatewknp,
327200211001                  :lc_productTypeRulewknp,
327300211001                  :lc_Investmentcodewknp,
327400211001                  :li_ClosingUnitWknp,
327500211001                  :lc_SplitOptionWknp,
327600211001      * RFS 140909 - begin RM
327700211001      *           :lc_Accttypecodewknp
327800211001                  :lc_AcctTypeCodeWknp,
327900211001      * RFS187080 - Starts
328000211001      *           :lc_AcctTypeRuleWknp
328100211001                  :lc_AcctTypeRuleWknp,
328200211001                  :lc_PaymenTypeCode
328300211001      * RFS187080 - Ends
328400211001      * RFS 140909 - end   RM
328500211001      * RFS1002626-Starts
328600211001      *    END-EXEC.
328700211001           END-EXEC
328800211001           ELSE
328900211001           EXEC SQL
329000211001                FETCH NEXT FROM lcu_mfatrnp1 INTO
329100211001                  :li_Accountwknp,
329200211001                  :li_Placementdatewknp,
329300211001                  :li_Transnowknp,
329400211001                  :li_Tradedatewknp,
329500211001                  :li_Processdatewknp,
329600211001                  :lc_Transtypecodewknp,
329700211001                  :lc_Contredemwknp,
329800211001                  :li_Grossamtwknp,
329900211001                  :li_Netamtwknp,
330000211001                  :li_Effectivedatewknp,
330100211001                  :lc_productTypeRulewknp,
330200211001                  :lc_Investmentcodewknp,
330300211001                  :li_ClosingUnitWknp,
330400211001                  :lc_SplitOptionWknp,
330500211001                  :lc_AcctTypeCodeWknp,
330600211001      * RFS187080 - Ends
330700211001      *           :lc_AcctTypeRuleWknp
330800211001                  :lc_AcctTypeRuleWknp,
330900211001                  :lc_PaymenTypeCode
331000211001      * RFS187080 - Ends
331100211001           END-EXEC
331200211001
331300211001           END-IF.
331400211001      * RFS1002626-Ends
331500211001           MOVE SQLSTATE TO lc_sqlStates.
331600211001           EVALUATE TRUE
331700211001             WHEN lncc_sqlSuccessful
331800211001      * RFS138589 - Starts
331900211001             IF lc_Process-Mode = lnc_RCALCACB
332000211001                MOVE li_Effectivedatewknp
332100211001                  TO ld_EffectiveDt
332200211001                MOVE FUNCTION SUBTRACT-DURATION
332300211001                  (ld_EffectiveDt DAYS 1)
332400211001                  TO ld_EffectiveDate
332500211001      * RFS1002626-Starts
332600211001      *         MOVE ld_EffectiveDate  TO li_Effective-Date
332700211001      *         IF li_Tradedatewknp >= li_Effective-Date
332800211001                MOVE ld_EffectiveDate   TO li_Effectdate1
332900211001                MOVE li_ProcessDatewknp TO li_ProcessDateSplit
333000211001      *RFS1118903 - Starts
333100211001      * RFS1116416 - begin
333200211001      *         MOVE li_TradeDatewknp TO li_TradeDateTrns
333300211001                MOVE li_TradeDatewknp TO li_TradeDateTrns1
333400211001                IF li_AccAttEffecDate IS NOT EQUAL TO ZEROES
333500211001                   MOVE ld_lastAccrualYear to lc_EffectDateYYYY
333600211001                   SET lb_ProcessYes    TO TRUE
333700211001      *RFS1120406 - Starts
333800211001      *            MOVE li_Effectdate1 TO li_TradeDateTrns1
333900211001                   MOVE li_TradeDatewknp TO li_TradeDateTrns1
334000211019                   MOVE li_AccAttEffecDate TO li_AccAttEffecDate1
334100211001      *RFS1120406 - Ends
334200211001                   MOVE li_AccountNum TO li_AccountNo
334300211001                END-IF
334400211001      * RFS1116416 - end
334500211001
334600211001      *         IF li_ProcessYYYY  NOT= li_PrevEffectDateYYYY AND
334700211001      *            li_PrevEffectDateYYYY NOT= ZEROES
334800211001                IF li_TradeDateTrnsYYYY NOT= li_PrevEffectDateYYYY AND
334900211001                   li_TradeDatewknp > ld_EffectiveDate
335000211001      *RFS1118903 - Ends
335100211001                   SET lb_ProcessYes    TO TRUE
335200211001                END-IF
335300211001
335400211001      *RFS1118903 - Starts
335500211001      *         MOVE li_ProcessYYYY     TO li_EffectDateYYYY
335600211001      *                                    li_PrevEffectDateYYYY
335700211001                MOVE li_TradeDateTrnsYYYY TO li_EffectDateYYYY
335800211001                                             li_PrevEffectDateYYYY
335900211001
336000211001      *         IF li_EffectDateMMDD <  li_ProcessMMDD AND
336100211001      * RFS 186962 begin
336200211001      **           lb_ProcessYes
336300211001                IF li_EffectDateMMDD < li_TradeDateTrnsMMDD AND
336400211001      *RFS1118903 - Ends
336500211001                   lb_ProcessYes AND
336600211001                   li_Tradedatewknp > li_EffectDate3
336700211001      * RFS1116416 - begin
336800211001                   OR
336900211001                  (li_AccAttEffecDate IS NOT EQUAL to ZEROES AND
337000211001                    lb_ProcessYes AND
337100211019      * RFS1120406 - Starts
337200211019      *            li_EffectDateMMDD = li_TradeDateTrnsMMDD)
337300211019                   li_EffectDateMMDD = li_TradeDateTrnsMMDD
337400211019               AND li_AccAttEffecMMDD > li_TradeDateTrnsMMDD)
337500211019      * RFS1120406 - Ends
337600211001      * RFS1116416 - end
337700211001      * RFS 186962 end
337800211001                   SET lb_ProcessNo         TO TRUE
337900211001                   MOVE li_Tradedatewknp    TO li_OrigTradedatewknp
338000211001                   MOVE li_Placementdatewknp TO li_OrigPlacementdatewknp
338100211001                   MOVE li_Transnowknp      TO li_OrigTransnowknp
338200211001
338300211001                   MOVE li_effectdate3      TO li_Tradedatewknp
338400211001                   SET lb_eofAcc-InvNo      TO TRUE
338500211001                   PERFORM AnnvAcc-INT-Process
338600211001      * RFS1116416 - begin
338700211019      * RFS1120406 - Starts
338800211019      *            IF li_OrigTradeDatewknp > li_effectDate3
338900211019      *             AND li_AccAttEffecDate IS NOT EQUAL ZEROES
339000211019                   IF li_OrigTradeDatewknp > li_effectDate3
339100211019                   OR li_AccAttEffecDate IS NOT EQUAL ZEROES
339200211019      * RFS1120406 - Ends
339300211001                   MOVE li_OrigTradedatewknp TO li_Tradedatewknp
339400211001                   MOVE li_OrigPlacementdatewknp TO li_Placementdatewknp
339500211001                   MOVE li_OrigTransnowknp TO li_Transnowknp
339600211001      * RFS1120406 - Starts
339700211001      *            ELSE
339800211001      *             SET lb_Eof-Wktrnpyes TO TRUE
339900211001      * RFS1120406 - Ends
340000211001                   END-IF
340100211001      * RFS1116416 - end
340200211001                END-IF
340300211001      * RFS1002626-Ends
340400211001                   PERFORM Trans-Found-MFAGIDIACP
340500211001                   IF lc_TransFoundACPNo
340600211001                      PERFORM Process-Each-Transaction
340700211001                   END-IF
340800211001      * RFS1002626-Starts
340900211001      *         ELSE
341000211001      *            IF lb_ProcessYes
341100211001      *              SET lb_ProcessNo  TO TRUE
341200211001      *              PERFORM Calc-Accrual-Interest
341300211001      *               PERFORM Trans-Found-MFAGIDIACP
341400211001      *               IF lc_TransFoundACPNo
341500211001      *                  PERFORM Process-Each-Transaction
341600211001      *               END-IF
341700211001      *            END-IF
341800211001      *         END-IF
341900211001      * RFS1002626-Ends
342000211001             ELSE
342100211001      * RFS138589 - Ends
342200211001             PERFORM Trans-Found-MFAGIDIACP
342300211001             IF lc_TransFoundACPNo
342400211001                PERFORM Process-Each-Transaction
342500211001             END-IF
342600211001138589       END-IF
342700211001             WHEN lncc_sqlEnd
342800211001      *RFS1002626-Starts
342900211001      * RFS138589 - Starts
343000211001      *      IF lc_Process-Mode = lnc_RCALCACB
343100211001      *         PERFORM Get-MFAGIDIACP-records
343200211001      *         PERFORM Get-MFAGIDIACP-Year
343300211001      *        IF li_Effective-Date <= li_processdate
343400211001      *           SET lc_Recalcul-AccIntYes TO TRUE
343500211001      *           PERFORM Calc-Accrual-Interest
343600211001             IF lc_Process-Mode = lnc_RCALCACB
343700211001               IF lb_ProcessNo
343800211001                  COMPUTE li_effectdateYYYY = li_effectdateYYYY + 1
343900211001               END-IF
344000211001
344100211001               IF li_Effectdate1 <= li_processdate
344200211001                   PERFORM UNTIL li_Effectdate1 > li_processdate
344300211001                   MOVE li_Effectdate1     TO li_Tradedatewknp
344400211001                   SET lb_eofAcc-InvNo     TO TRUE
344500211001                   PERFORM AnnvAcc-INT-Process
344600211001                   COMPUTE li_effectdateYYYY = li_effectdateYYYY + 1
344700211001                   END-PERFORM
344800211001      * RFS1002626-Ends
344900211001                  SET lb_Eof-Wktrnpyes TO TRUE
345000211001               ELSE
345100211001                  SET lb_Eof-Wktrnpyes TO TRUE
345200211001               END-IF
345300211001            ELSE
345400211001      * RFS138589 - Ends
345500211001               SET lb_Eof-Wktrnpyes TO TRUE
345600211001138589      END-IF
345700211001             WHEN OTHER
345800211001               SET lnc_Err_34  TO TRUE
345900211001               PERFORM SQL_Fail_Process
346000211001           END-EVALUATE.
346100211001
346200211001      * RFS138589 - Starts
346300211001      * ---------------------------------
346400211001       Get-MFAGIDIACP-Year.
346500211001      * ---------------------------------
346600211001           INITIALIZE ld_GIDIACP-Year
346700211001                      ld_ACMDP-EffectivDt
346800211001                      ld_Year-YYYY
346900211001                      li_Effective-Date
347000211001                      ld_ProcessDt-YYYY
347100211001                      ld_EffectivDt-YYYY.
347200211001
347300211001           EXEC SQL
347400211001             SELECT COALESCE(GIDIACP.YEAR, 0),
347500211001                    COALESCE(ACMDP.EFFECTIV_DATE, 0)
347600211001             INTO   :ld_GIDIACP-Year,
347700211001                    :ld_ACMDP-EffectivDt
347800211001             FROM   MFAGIDIACP GIDIACP
347900211001
348000211001             INNER JOIN MFAACMDP ACMDP
348100211001               ON  GIDIACP.ACCOUNT_NO = ACMDP.ACCOUNT_NO
348200211001              AND  ACMDP.EFFECTIV_DATE <> 0
348300211001
348400211001             WHERE GIDIACP.ACCOUNT_NO          = :li_AccountNum
348500211001             AND   GIDIACP.PROCESS_DATE        = :li_GIDIACP-ProcessDt
348600211001             AND   GIDIACP.PLACEMENT_DATE      = 0
348700211001             AND   GIDIACP.TRANS_NO            = 0
348800211001             AND   GIDIACP.CAPITAL_GAIN_AMOUNT = 0
348900211001             AND   GIDIACP.DEPOSIT_AMT         = 0
349000211001             AND   GIDIACP.DISPOSITION_AMT     = 0
349100211001             AND   GIDIACP.START_VALUE_FLAG   <> :lnc_Y
349200211001           END-EXEC.
349300211001
349400211001           MOVE SQLSTATE  TO lc_sqlStates.
349500211001           EVALUATE TRUE
349600211001           WHEN lncc_sqlSuccessful
349700211001              MOVE ld_GIDIACP-Year           TO ld_Year-YYYY
349800211001              MOVE ld_ACMDP-EffectivDt(1:4)  TO ld_EffectivDt-YYYY
349900211001              MOVE li_GIDIACP-ProcessDt(1:4) TO ld_ProcessDt-YYYY
350000211001              IF ld_Year-YYYY = ld_EffectivDt-YYYY
350100211001                 MOVE ld_ACMDP-EffectivDt   TO ld_EffectiveDt
350200211001                 MOVE FUNCTION SUBTRACT-DURATION
350300211001                   (ld_EffectiveDt DAYS 1)  TO ld_EffectiveDate
350400211001                 MOVE ld_EffectiveDate      TO li_Effective-Date
350500211001              ELSE
350600211001                 IF ld_Year-YYYY = ld_ProcessDt-YYYY
350700211001                    MOVE li_GIDIACP-ProcessDt  TO li_Effective-Date
350800211001                 END-IF
350900211001              END-IF
351000211001           WHEN lncc_sqlEnd
351100211001              CONTINUE
351200211001           WHEN OTHER
351300211001              SET lnc_Err_68     TO TRUE
351400211001              MOVE lnc-ErrDesc68 TO lc_sqlErrShortDESCR
351500211001              PERFORM  SQL_Fail_Process
351600211001           END-EVALUATE.
351700211001
351800211001      * ---------------------------------
351900211001       Calc-Accrual-Interest.
352000211001      * ---------------------------------
352100211001           SET lc_CalcaccrualLoadYes TO TRUE.
352200211001           MOVE lnc_WKGICINT TO lc_filename.
352300211001           PERFORM Clear-Work-Files.
352400211001           MOVE lnc_WKDIIINT TO lc_filename.
352500211001           PERFORM Clear-Work-Files.
352600211001           MOVE lnc_WKACCRINT TO lc_filename.
352700211001           PERFORM Clear-Work-Files.
352800211001           MOVE SPACES TO li_MKTValueMode.
352900211001           PERFORM AccuralAccount.
353000211001           PERFORM Process-Accrual-Act-Cursor
353100211001                   UNTIL lb_EofAct-Cursoryes.
353200211001           SET lc_AccAmtYes TO TRUE.
353300211001
353400211001           EXEC SQL
353500211001              CLOSE lcu_Wkaccract
353600211001           END-EXEC.
353700211001
353800211001           PERFORM Calculate-accrual-Interest.
353900211001      * RFS138589 - Ends
354000211001
354100211001      * ---------------------------------
354200211001       Process-Accrual-AccountAmt.
354300211001      * ---------------------------------
354400211001           MOVE lnc_WKGICINT TO lc_filename.
354500211001           PERFORM Clear-Work-Files.
354600211001           MOVE lnc_WKDIIINT TO lc_filename.
354700211001           PERFORM Clear-Work-Files.
354800211001           MOVE lnc_WKACCRINT TO lc_filename.
354900211001           PERFORM Clear-Work-Files.
355000211001           MOVE SPACES TO li_MKTValueMode.
355100211001           PERFORM AccuralAccount.
355200211001           PERFORM Process-Accrual-Act-Cursor UNTIL
355300211001                                  lb_EofAct-Cursoryes.
355400211001           SET lc_AccAmtYes TO TRUE.
355500211001
355600211001           EXEC SQL
355700211001              CLOSE lcu_Wkaccract
355800211001           END-EXEC.
355900211001      *RFS1002626-Starts
356000211001      *    PERFORM Calculate-accrual-Interest.
356100211001           PERFORM Calculate-accrual-Interest1.
356200211001      *RFS1002626-Ends
356300211001           PERFORM CalcAccrualDate.
356400211001      * ---------------------------------
356500211001       Process-buy-transaction.
356600211001      * ---------------------------------
356700211001           INITIALIZE MFAGIDIACP OF lc_MFAGIDIACP_rec.
356800211001           PERFORM Check-Investment-Type.
356900211001           IF lc_Producttyperule = lnc_2 OR
357000211001              lc_Producttyperule = lnc_7
35710021100136467         PERFORM GetMktvalueInv1
357200211001137239     IF lb_REJrecModeNo
357300211001              MOVE li_Tradedatewknp TO li_Tradedatesplit
357400211001                                       li_TradedateTrans
357500211001              MOVE li_Accountwknp TO ACCOUNT-NO OF lc_MFAGIDIACP_rec
357600211001              MOVE li_Placementdatewknp TO PLACEMENT-DATE OF
357700211001                                         lc_MFAGIDIACP_rec
357800211001              MOVE li_Transnowknp TO TRANS-NO OF lc_MFAGIDIACP_rec
357900211001              MOVE li_Tradedatewknp TO TRADE-DATE OF lc_MFAGIDIACP_rec
358000211001              MOVE li_Processdatewknp TO PROCESS-DATE OF
358100211001                                                  lc_MFAGIDIACP_rec
358200211001              MOVE li_TradeYYYY TO YEAR OF lc_MFAGIDIACP_rec
358300211001              MOVE li_Grossamtwknp TO DEPOSIT-AMT OF lc_MFAGIDIACP_rec
358400211001              PERFORM Get-Latest-Account-ACB
358500211001              COMPUTE ACB-AMT OF lc_MFAGIDIACP_rec = DEPOSIT-AMT OF
358600211001                                           lc_MFAGIDIACP_rec
358700211001                                           + li_LatestACBAmt
358800211001              PERFORM Insert-MFAGIDIACP-rec
358900211001      *RFS1002626-Starts
359000211001              IF lc_Process-Mode IS NOT = 'RCALCACB'
359100211001      *RFS1002626-Ends
359200211001              MOVE li_ProcessDate TO li_ProcessDate1
359300211001      * QC 36708 start
359400211001      *       MOVE li_Effectivedatewknp TO li_EffectivedateSplit
359500211001              MOVE li_Effectivedatewknp TO li_effectfordat
359600211001              MOVE FUNCTION SUBTRACT-DURATION
359700211001                                         (li_effectfordat DAYS 1)
359800211001                            TO li_effectdate1
359900211001              MOVE li_effectdate3 TO li_effectdate4
360000211001              MOVE li_effectdate4 TO li_EffectivedateSplit
360100211001      * QC 36708 End
360200211001138307*       IF li_EffectiveMMDD >= li_TradeMMDD AND
360300211001138307*          li_EffectiveMMDD < li_ProcessDateMMDD
360400211001   |          MOVE li_TradeYYYY TO li_EffectiveYYYY
360500211001138564        MOVE li_Processdate  TO li_Processdate2
360600211001   |          PERFORM UNTIL li_EffectiveYYYY > li_ProcessDateYYYY
360700211001138564*       IF li_EffectivedateSplit >= li_TradedateTrans AND
360800211001138564*          li_EffectivedateSplit < li_processdate1
360900211001138564        MOVE li_EffectivedateSplit TO li_EffDateCmp
361000211001138564        IF li_EffDateCmp         >= li_TradedateTrans AND
361100211001138564           li_EffDateCmp         < li_processdate2
361200211001138307           MOVE li_EffectivedateSplit TO li_EffProcessDate
361300211001                                               li_effectdate4
361400211001                 PERFORM Insert-Backtrades
361500211001                 MOVE li_TradedateTrans  TO li_Tradedatervs
361600211001138307           IF lb_ACBAccrualFirstYes
361700211001   |                PERFORM Get-AccountACB-Accrual
361800211001   |                SET lb_ACBAccrualFirstNo TO TRUE
361900211001   |             ELSE
362000211001   |                COMPUTE li_ACBAmount = li_PrevACB
362100211001138307           END-IF
362200211001                 SET lc_CalcaccrualIntNo TO TRUE
362300211001                 SET lc_Recalcul-AccIntYes TO TRUE
362400211001                 PERFORM Calculate-Accrual-interest
362500211001138307        END-IF
362600211001   |          COMPUTE li_EffectiveYYYY = li_EffectiveYYYY + 1
362700211001   |          END-PERFORM
362800211001138307*       END-IF
362900211001      *RFS1002626-Starts
363000211001              END-IF
363100211001      *RFS1002626-Ends
363200211001      * RFS137239 - Starts
363300211001      *    END-IF.
363400211001           END-IF
363500211001           END-IF.
363600211001      * RFS137239 - Ends
363700211001      * ---------------------------------
363800211001       Insert-Backtrades.
363900211001      * ---------------------------------
364000211001           SET lc_CalcaccrualLoadYes TO TRUE.
364100211001           MOVE lnc_WKGICINT TO lc_filename.
364200211001           PERFORM Clear-Work-Files.
364300211001           PERFORM Load-GIC-certificates.
364400211001           MOVE lnc_WKDIIINT TO lc_filename.
364500211001           PERFORM Clear-Work-Files.
364600211001           PERFORM Load-DII-investments.
364700211001           MOVE lnc_WKACCRINT TO lc_filename.
364800211001           PERFORM Clear-Work-Files.
364900211001      * ---------------------------------
365000211001       Process-sell-transaction.
365100211001      * ---------------------------------
365200211001           INITIALIZE MFAGIDIACP OF lc_MFAGIDIACP_rec.
365300211001138950     INITIALIZE lc_Dispoptioncode.
365400211001      * RFS 1110593 - begin
365500211001           INITIALIZE lc_INTTradeAttachToFullSell.
365600211001      * RFS 1110593 - end
365700211001
365800211001           PERFORM Check-Investment-Type.
365900211001           IF (lc_Producttyperule = lnc_2 OR
366000211001               lc_Producttyperule = lnc_7)
366100211001           IF lc_Transtypecodewknp = lnc_SEL
366200211001                 PERFORM Validate-Disposition-Trans
366300211001           ELSE
366400211001              PERFORM Check-distr-option
366500211001      * RFS 1110593 begin
366600211001              PERFORM Check-INT-Trans-Target
366700211001      * RFS 1110593 end
366800211001           END-IF
366900211001      * RFS138950 - Start
367000211001      * RFS 1110593 begin
367100211001141615*    IF (lc_Dispoptioncode = lnc_R AND
367200211001141615*    IF (lb_ReinvestTrade AND
367300211001      *        lc_Transtypecodewknp = lnc_INT )
367400211001           IF (lb_ReinvestTrade AND
367500211001               lc_Transtypecodewknp = lnc_INT ) AND
367600211001              NOT lb_INTAttachFullSellYes
367700211001      * RFS 1110593 end
367800211001              PERFORM GetMktValueInv1
367900211001           END-IF
368000211001      * RFS138950 - End
368100211001           IF ((lc_dispositionTransYes AND
368200211001                lc_Transtypecodewknp = lnc_SEL)
368300211001141615*    OR (lc_Dispoptioncode NOT = lnc_R AND
368400211001141615     OR (NOT lb_ReinvestTrade AND
368500211001               lc_Transtypecodewknp = lnc_INT ))
368600211001             MOVE li_Accountwknp TO ACCOUNT-NO OF lc_MFAGIDIACP_rec
368700211001             MOVE li_Tradedatewknp TO li_Tradedatesplit
368800211001                                      li_TradedateTrans
368900211001             MOVE li_Placementdatewknp TO PLACEMENT-DATE OF
369000211001                                                lc_MFAGIDIACP_rec
369100211001             MOVE li_Transnowknp TO TRANS-NO OF lc_MFAGIDIACP_rec
369200211001             MOVE li_Tradedatewknp TO TRADE-DATE OF lc_MFAGIDIACP_rec
369300211001             MOVE li_Processdatewknp TO PROCESS-DATE OF
369400211001                                                  lc_MFAGIDIACP_rec
369500211001             MOVE li_TradeYYYY TO YEAR OF lc_MFAGIDIACP_rec
369600211001             MOVE li_Netamtwknp TO DISPOSITION-AMT
369700211001                                      OF lc_MFAGIDIACP_rec
369800211001
369900211001138009*      PERFORM Get-Latest-Account-ACB
370000211001      * QC36859 - start
370100211001      *      COMPUTE ACB-AMT OF lc_MFAGIDIACP_rec = li_LatestACBAmt
370200211001      *                        - DISPOSITION-AMT OF lc_MFAGIDIACP_rec
370300211001      * QC36859 - end
37040021100136467        MOVE lnc_P         TO li_MKTValueMode
370500211001      * RFS187080 - Starts
370600211001      *      PERFORM Calculate-Gain-on-Disposition
370700211001             INITIALIZE lc_INTTradeAttachToBuy
370800211001             IF  lc_CpgOnRIntWithPayTypD = "N"
370900211001             AND lc_Transtypecodewknp    = lnc_INT
371000211001             AND lc_PaymenTypeCode       = "D"
371100211001               PERFORM Check-INT-Trans-Target-BUY
371200211001             END-IF
371300211001
371400211001             IF lb_INTAttachToBuyYes
371500211001               PERFORM Get-Latest-Account-ACB
371600211001               MOVE ZEROES     TO li_Gain
371700211001              ELSE
371800211001               PERFORM Calculate-Gain-on-Disposition
371900211001             END-IF
372000211001      * RFS187080 - End
372100211001137239     IF lb_REJrecModeNo
372200211001      * QC36859 - start
372300211001             COMPUTE ACB-AMT OF lc_MFAGIDIACP_rec = li_LatestACBAmt
372400211001                               + li_Gain
372500211001                               - DISPOSITION-AMT OF lc_MFAGIDIACP_rec
372600211001      * QC36859 - end
372700211001             PERFORM Insert-MFAGIDIACP-rec
372800211001      *RFS1002626-Starts
372900211001             IF lc_Process-Mode IS NOT = 'RCALCACB'
373000211001      *RFS1002626-Ends
373100211001             MOVE li_ProcessDate TO li_ProcessDate1
373200211001      * QC 36708 start
373300211001      *      MOVE li_Effectivedatewknp TO li_EffectivedateSplit
373400211001              MOVE li_Effectivedatewknp TO li_effectfordat
373500211001              MOVE FUNCTION SUBTRACT-DURATION
373600211001                                         (li_effectfordat DAYS 1)
373700211001                            TO li_effectdate1
373800211001              MOVE li_effectdate3 TO li_effectdate4
373900211001              MOVE li_effectdate4 TO li_EffectivedateSplit
374000211001      * QC 36708 End
374100211001138307*      IF li_EffectiveMMDD >= li_TradeMMDD AND
374200211001138307*         li_EffectiveMMDD < li_ProcessDateMMDD
374300211001  |          MOVE li_TradeYYYY TO li_EffectiveYYYY
374400211001138564       MOVE li_Processdate  TO li_Processdate2
374500211001  |          PERFORM UNTIL li_EffectiveYYYY > li_ProcessDateYYYY
374600211001  |   *      IF li_EffectivedateSplit >= li_TradedateTrans AND
374700211001  |   *         li_EffectivedateSplit < li_processdate1
374800211001138564       MOVE li_EffectivedateSplit TO li_EffDateCmp
374900211001  |          IF li_EffDateCmp         >= li_TradedateTrans AND
375000211001138564          li_EffDateCmp         < li_processdate2
375100211001  |             MOVE li_EffectivedateSplit TO li_EffProcessDate
375200211001  |                                           li_effectdate4
375300211001  |             PERFORM Insert-Backtrades
375400211001  |             MOVE li_TradedateTrans  TO li_Tradedatervs
375500211001  |             IF lb_ACBAccrualFirstYes
375600211001  |                PERFORM Get-AccountACB-Accrual
375700211001  |                SET lb_ACBAccrualFirstNo TO TRUE
375800211001  |             ELSE
375900211001  |                COMPUTE li_ACBAmount = li_PrevACB
376000211001  |             END-IF
376100211001  |             SET lc_CalcaccrualIntNo TO TRUE
376200211001  |             SET lc_Recalcul-AccIntYes TO TRUE
376300211001  |             PERFORM Calculate-Accrual-interest
376400211001  |          END-IF
376500211001  |          COMPUTE li_EffectiveYYYY = li_EffectiveYYYY + 1
376600211001  |          END-PERFORM
376700211001138307*      END-IF
376800211001           END-IF
376900211001      *RFS1002626-Starts
377000211001           END-IF
377100211001      *RFS1002626-Ends
377200211001      * RFS137239 - Starts
377300211001      *    END-IF.
377400211001           END-IF
377500211001           END-IF.
377600211001      * RFS137239 - Ends
377700211001      * ---------------------------------
377800211001       Process-switch-transaction.
377900211001      * ---------------------------------
378000211001           MOVE lc_productTypeRulewknp TO lc_productTypeRule-SWI.
378100211001           PERFORM Get-Coresp-Out-Trans.
378200211001
378300211001      * RFS 140909 - begin RM
378400211001           PERFORM Validate-Disposition-Trans.
378500211001           MOVE lc_NondispositionTrans  TO lc_NondispTrans.
378600211001           MOVE lc_Accttypecode-SWOTRO TO lc_Accttypecodewknp.
378700211001           MOVE lc_ContrRedem-SWOTRO TO lc_Contredemwknp.
378800211001
378900211001           IF lc_TransTypeCodeWknp = lnc_SWI
379000211001            MOVE lnc_SWO TO lc_TransTypeCodeWknp
379100211001           END-IF.
379200211001
379300211001           PERFORM Validate-Disposition-Trans.
379400211001
379500211001           IF lc_NondispositionTransYes AND
379600211001              lc_NondispTransYes
379700211001              SET lc_TransferAtCostYes TO TRUE
379800211001           ELSE
379900211001              SET lc_TransferAtMarketYes TO TRUE
380000211001           END-IF.
380100211001
380200211001      * RFS 140909 - end   RM
380300211001           IF (lc_Acctyperule-SWOTRO = lnc_1 AND
380400211001               lc_Nominee-SWOTRO NOT = lnc_Y)
380500211001            IF li_SWOTROaccnowknp = li_Accountwknp
380600211001              SET lc_SWI-SWO-Account-Same-Yes TO TRUE
380700211001            ELSE
380800211001              SET lc_SWI-SWO-Account-Same-No TO TRUE
380900211001            END-IF
381000211001      * Richie fix - RFS 142685 begin
381100211001            IF (  (lc_productTypeRule-SWOTRO = lnc_2 AND
381200211001                   lc_productTypeRule-SWI = lnc_7)
381300211001                   OR (lc_productTypeRule-SWOTRO = lnc_7 AND
381400211001                       lc_productTypeRule-SWI = lnc_2)
381500211001                   OR ((lc_productTypeRule-SWOTRO = lnc_2 OR
381600211001                        lc_productTypeRule-SWOTRO = lnc_7)
381700211001                        AND lc_productTypeRule-SWI = lnc_6)
381800211001               )
381900211001              Perform Calculate-SWO-TRO-disposition
382000211001            END-IF
382100211001      * Richie fix - RFS 142685 end
382200211001            IF (lc_SWI-SWO-Account-Same-Yes
382300211001142685*        AND lc_productTypeRule-SWOTRO = lnc_6
382400211001142685         AND ((lc_productTypeRule-SWOTRO = lnc_6
382500211001               AND (lc_productTypeRule-SWI = lnc_2 OR
382600211001142685*             lc_productTypeRule-SWI = lnc_7)
382700211001142685              lc_productTypeRule-SWI = lnc_7))
382800211001142685* Richie fix - RFS 142685 begin
382900211001142685*        OR  (lc_productTypeRule-SWOTRO = lnc_2 AND
383000211001142685*            (lc_productTypeRule-SWI = lnc_7 OR
383100211001142685*             lc_productTypeRule-SWI = lnc_6))
383200211001142685*        OR  (lc_productTypeRule-SWOTRO = lnc_7 AND
383300211001142685*            (lc_productTypeRule-SWI = lnc_2 OR
383400211001142685*             lc_productTypeRule-SWI = lnc_6)))
383500211001              )
383600211001              )
383700211001142685*                         OR
383800211001142685*        (lc_SWI-SWO-Account-Same-No
383900211001142685*        AND ((lc_productTypeRule-SWOTRO = lnc_7 AND
384000211001142685*            (lc_productTypeRule-SWI = lnc_2 OR
384100211001142685*             lc_productTypeRule-SWI = lnc_6))
384200211001142685*         OR (lc_productTypeRule-SWOTRO = lnc_2 AND
384300211001142685*            (lc_productTypeRule-SWI = lnc_7 OR
384400211001142685*             lc_productTypeRule-SWI = lnc_6))))
384500211001142685* Richie fix - RFS 142685 end
384600211001              PERFORM Process-SWI-TRI-Deposit
384700211001            END-IF
384800211001142685*     IF (  (lc_productTypeRule-SWOTRO = lnc_2 AND
384900211001142685*            lc_productTypeRule-SWI = lnc_7)
385000211001142685*            OR (lc_productTypeRule-SWOTRO = lnc_7 AND
385100211001142685*                lc_productTypeRule-SWI = lnc_2)
385200211001142685*            OR ((lc_productTypeRule-SWOTRO = lnc_2 OR
385300211001142685*                 lc_productTypeRule-SWOTRO = lnc_7)
385400211001142685*                 AND lc_productTypeRule-SWI = lnc_6)
385500211001142685*        )
385600211001142685*       Perform Calculate-SWO-TRO-disposition
385700211001142685*     END-IF
385800211001           END-IF.
385900211001      *RFS142685 STARTS
386000211001           IF (lc_Acctyperule-SWOTRO NOT = lnc_1 AND
386100211001               lc_Nominee-SWOTRO NOT = lnc_Y)
386200211001              IF li_SWOTROaccnowknp = li_Accountwknp
386300211001                 SET lc_SWI-SWO-Account-Same-Yes TO TRUE
386400211001              ELSE
386500211001                 SET lc_SWI-SWO-Account-Same-No TO TRUE
386600211001              END-IF
386700211001            IF (lc_SWI-SWO-Account-Same-Yes
386800211001               AND ((lc_productTypeRule-SWOTRO = lnc_6
386900211001               AND (lc_productTypeRule-SWI = lnc_2 OR
387000211001                    lc_productTypeRule-SWI = lnc_7))
387100211001               OR  (lc_productTypeRule-SWOTRO = lnc_2 AND
387200211001                   (lc_productTypeRule-SWI = lnc_7 OR
387300211001                    lc_productTypeRule-SWI = lnc_6))
387400211001               OR  (lc_productTypeRule-SWOTRO = lnc_7 AND
387500211001                   (lc_productTypeRule-SWI = lnc_2 OR
387600211001                    lc_productTypeRule-SWI = lnc_6)))
387700211001              )
387800211001                                OR
387900211001               (lc_SWI-SWO-Account-Same-No
388000211001               AND ((lc_productTypeRule-SWOTRO = lnc_7 AND
388100211001                   (lc_productTypeRule-SWI = lnc_2 OR
388200211001                    lc_productTypeRule-SWI = lnc_6))
388300211001                OR (lc_productTypeRule-SWOTRO = lnc_2 AND
388400211001                   (lc_productTypeRule-SWI = lnc_7 OR
388500211001                    lc_productTypeRule-SWI = lnc_6))))
388600211001               PERFORM Process-SWI-TRI-Deposit
388700211001            END-IF
388800211001           END-IF.
388900211001      *RFS142685 ENDS
389000211001      * ---------------------------------
389100211001       Process-Transfer-transaction.
389200211001      * ---------------------------------
389300211001           MOVE  lc_productTypeRulewknp TO lc_productTypeRule-TRI.
389400211001           PERFORM Get-Coresp-Out-Trans.
389500211001
389600211001      * RFS 140909 - begin RM
389700211001           PERFORM Validate-Disposition-Trans.
389800211001           MOVE lc_NondispositionTrans  TO lc_NondispTrans.
389900211001           MOVE lc_Accttypecode-SWOTRO TO lc_Accttypecodewknp.
390000211001           MOVE lc_ContrRedem-SWOTRO TO lc_Contredemwknp.
390100211001
390200211001           IF lc_TransTypeCodeWknp = lnc_TRI
390300211001            MOVE lnc_TRO TO lc_TransTypeCodeWknp
390400211001           END-IF.
390500211001
390600211001           PERFORM Validate-Disposition-Trans.
390700211001
390800211001           IF lc_NondispositionTransYes AND
390900211001              lc_NondispTransYes
391000211001              SET lc_TransferAtCostYes TO TRUE
391100211001           ELSE
391200211001              SET lc_TransferAtMarketYes TO TRUE
391300211001           END-IF.
391400211001
391500211001      * RFS 140909 - end   RM
391600211001           IF lc_AccTypeRule-SWOTRO = lnc_1 AND
391700211001              lc_Nominee-SWOTRO NOT = lnc_Y
391800211001            IF li_SWOTROAccnoWknp = li_AccountWknp
391900211001              SET lc_SWI-SWO-Account-Same-Yes TO TRUE
392000211001            ELSE
392100211001              SET lc_SWI-SWO-Account-Same-No TO TRUE
392200211001            END-IF
392300211001      * RFS 140909 - begin RM
392400211001            IF (lc_SWI-SWO-Account-Same-No
392500211001              AND ((lc_productTypeRule-SWOTRO = lnc_7 AND
392600211001                    lc_productTypeRule-TRI = lnc_7)
392700211001                OR (lc_productTypeRule-SWOTRO = lnc_2 AND
392800211001                    lc_productTypeRule-TRI = lnc_2)))
392900211001              Perform Calculate-SWO-TRO-disposition
393000211001            END-IF
393100211001      * RFS 140909 - end RM
393200211001           END-IF.
393300211001      * RFS 140909 - begin RM
393400211001      * Defect QC38758 for Non-Cash to Cash (At-market transfer)
393500211001           IF lc_AccTypeRule-SWOTRO NOT = lnc_1 AND
393600211001              lc_Nominee-SWOTRO NOT = lnc_Y AND
393700211001              lc_AcctTypeRuleWknp = lnc_1 AND
393800211001              lc_TransferAtMarketYes
393900211001            IF li_SWOTROAccnoWknp = li_AccountWknp
394000211001              SET lc_SWI-SWO-Account-Same-Yes TO TRUE
394100211001            ELSE
394200211001              SET lc_SWI-SWO-Account-Same-No TO TRUE
394300211001            END-IF
394400211001            IF (lc_SWI-SWO-Account-Same-No
394500211001              AND ((lc_productTypeRule-SWOTRO = lnc_7 AND
394600211001                    lc_productTypeRule-TRI = lnc_7)
394700211001                OR (lc_productTypeRule-SWOTRO = lnc_2 AND
394800211001                    lc_productTypeRule-TRI = lnc_2)))
394900211001              MOVE lnc_TRI TO lc_TransTypeCodeWknp
395000211001              MOVE li_SWIAccountNo TO  li_Accountwknp
395100211001              MOVE li_SWIPlacementDate TO li_Placementdatewknp
395200211001              MOVE li_SWITransNo       TO li_Transnowknp
395300211001              PERFORM Process-SWI-TRI-Deposit
395400211001            END-IF
395500211001           END-IF.
395600211001      * RFS 140909 - end   RM
395700211001      * ---------------------------------
395800211001       Get-Coresp-Out-Trans.
395900211001      * ---------------------------------
396000211001           EXEC SQL
396100211001             SELECT PLACEMENT_DATE,
396200211001                    TRANS_NO
396300211001                    INTO :li_PlacementSWOTRO,
396400211001                         :li_transnoSWOTRO
396500211001              FROM MFATRNTGP
396600211001              WHERE PLACEMENT_DATE_2 = :li_Placementdatewknp
396700211001                AND TRANS_NO_2       = :li_Transnowknp
396800211001           END-EXEC.
396900211001
397000211001           MOVE SQLSTATE TO lc_sqlStates.
397100211001           IF NOT lncc_sqlSuccessful
397200211001              SET lnc_Err_20 TO TRUE
397300211001              MOVE lnc_ErrSelectMFATRNTGP TO lc_sqlErrShortDESCR
397400211001              PERFORM  SQL_Fail_Process
397500211001           END-IF.
397600211001
397700211001           EXEC SQL
397800211001             SELECT
397900211001                    TRNP.ACCOUNT_NO,
398000211001                    TRNP.NET_AMT,
398100211001                    TRNP.GROSS_AMT,
398200211001                    TRNP.CONTR_REDEM_CODE,
398300211001                    TRNP.SPLIT_OPTION_CODE,
398400211001                    TRNP.TRADE_DATE,
398500211001                    RTCDP.PRODUCT_TYPE_RULE,
398600211001                    ACCTYP.ACCOUNT_TYPE_RULE,
398700211001                    ACCTYP.ACCOUNT_TYPE_CODE,
398800211001                    ACCNTP.NOMINEE,
398900211001                    TRNP.CLOSING_UNIT_BAL,
399000211001134626*             ACMDP.EFFECTIVE_DATE
399100211001134626              ACMDP.EFFECTIV_DATE
399200211001      * RFS1002626-Starts
399300211001                   ,TRNP.PROCESS_DATE
399400211001      * RFS1002626-Ends
399500211001                    INTO :li_SWOTROaccnowknp,
399600211001                         :li_NetamtSWOTRO,
399700211001                         :li_GrossamtSWOTRO,
399800211001                         :lc_ContrRedem-SWOTRO,
399900211001                         :lc_Splitopt-SWOTRO,
400000211001                         :li_TradeSWOTRO,
400100211001                         :lc_productTypeRule-SWOTRO,
400200211001                         :lc_Acctyperule-SWOTRO,
400300211001                         :lc_Accttypecode-SWOTRO,
400400211001                         :lc_Nominee-SWOTRO,
400500211001                         :li_ClosingUnit-SWOTRO,
400600211001                         :li_EffectdateSWOTRO
400700211001      * RFS1002626-Starts
400800211001                        ,:li_ProcessSWOTRO
400900211001      * RFS1002626-Ends
401000211001              FROM MFATRNP TRNP
401100211001              INNER JOIN MFAACCNTP ACCNTP
401200211001                 ON ACCNTP.ACCOUNT_NO = TRNP.ACCOUNT_NO
401300211001              INNER JOIN MFAACMDP ACMDP
401400211001                 ON ACCNTP.ACCOUNT_NO = ACMDP.ACCOUNT_NO
401500211001              INNER JOIN MFAACCIVP ACCIVP
401600211001                 ON TRNP.ACCOUNT_NO = ACCIVP.ACCOUNT_NO AND
401700211001                    TRNP.INVESTMENT_CODE = ACCIVP.INVESTMENT_CODE
401800211001              INNER JOIN MFAACCTYP ACCTYP
401900211001                 ON ACCTYP.ACCOUNT_TYPE_CODE = ACCNTP.ACCOUNT_TYPE_CODE
402000211001              INNER JOIN MFAINVP INVP
402100211001                 ON ACCIVP.INVESTMENT_CODE = INVP.INVESTMENT_CODE
402200211001              INNER JOIN MFAPRTCDP RTCDP
402300211001                 ON INVP.PRODUCT_TYPE_CODE = RTCDP.PRODUCT_TYPE_CODE
402400211001              WHERE TRNP.PLACEMENT_DATE = :li_PlacementSWOTRO
402500211001                AND TRNP.TRANS_NO = :li_transnoSWOTRO
402600211001           END-EXEC.
402700211001           MOVE SQLSTATE TO lc_sqlStates.
402800211001           MOVE li_TradeSWOTRO TO li_TradeSWOTROSplit.
402900211001           MOVE li_EffectdateSWOTRO TO li_EffectdateSWOTROSplit.
403000211001           IF NOT lncc_sqlSuccessful
403100211001              SET lnc_Err_21 TO TRUE
403200211001              MOVE lnc_ErrSelectCorespOutTran TO lc_sqlErrShortDESCR
403300211001              PERFORM  SQL_Fail_Process
403400211001           END-IF.
403500211001      * ---------------------------------
403600211001       Check-distr-option.
403700211001      * ---------------------------------
403800211001           EXEC SQL
403900211001             SELECT DISTR_OPTION_CODE
404000211001                    INTO:lc_Dispoptioncode
404100211001              FROM MFATRNIDP
404200211001              WHERE PLACEMENT_DATE = :li_Placementdatewknp
404300211001                AND TRANS_NO       = :li_Transnowknp
404400211001           END-EXEC.
404500211001
404600211001           MOVE SQLSTATE TO lc_sqlStates.
404700211001           IF NOT lncc_sqlSuccessful
404800211001              SET lnc_Err_22 TO TRUE
404900211001              MOVE lnc_ErrSelectDispoptcode TO lc_sqlErrShortDESCR
405000211001              PERFORM  SQL_Fail_Process
405100211001           END-IF.
405200211001      * RFS 1110593 - begin
405300211001      *  Check INT trade trans-target if there is a full redemption
405400211001      *  (SEL,SWO,TRO) attached to INT transaction.
405500211001      *  If INT transaction is attached to the full redemption
405600211001      *  exclude the INT from calculation the ACB and
405700211001      *  ensure the Gain from disposition is correct.
405800211001      * ---------------------------------
405900211001        Check-INT-Trans-Target.
406000211001            EXEC SQL
406100211001             SELECT ("Y")
406200211001              INTO :lc_INTTradeAttachToFullSell
406300211001             FROM MFATRNP TRN
406400211001             INNER JOIN      MFATRNTGP TGT ON
406500211001              TGT.Placement_Date_2 = TRN.Placement_Date AND
406600211001              TGT.Trans_No_2 = TRN.Trans_No AND
406700211001              TGT.Relationship_Type IN ("REI")
406800211001             INNER JOIN      MFATRNP TRN1 ON
406900211001              TRN1.Placement_Date = TGT.Placement_Date AND
407000211001              TRN1.Trans_No = TGT.Trans_No AND
407100211001              TRN1.Trans_Type_Code IN ("SEL", "SWO", "TRO") AND
407200211001              TRN1.Closing_Unit_Bal = 0
407300211001            WHERE
407400211001             TRN.Placement_Date = :li_Placementdatewknp AND
407500211001             TRN.Trans_No = :li_Transnowknp
407600211001            END-EXEC.
407700211001      * ---------------------------------
407800211001      * RFS 1110593 - end
407900211001      * RFS187080 - Starts
408000211001          Check-INT-Trans-Target-BUY.
408100211001
408200211001            INITIALIZE lc_INTTradeAttachToBuy.
408300211001
408400211001            EXEC SQL
408500211001             SELECT ("Y")
408600211001               INTO :lc_INTTradeAttachToBuy
408700211001             FROM MFATRNP TRNP
408800211001
408900211001             INNER JOIN MFATRNTGP TRNTGP ON
409000211001              TRNTGP.PLACEMENT_DATE   = TRNP.PLACEMENT_DATE   AND
409100211001              TRNTGP.TRANS_NO         = TRNP.TRANS_NO         AND
409200211001              TRNTGP.RELATIONSHIP_TYPE = "GIR"
409300211001
409400211001             INNER JOIN MFATRNP TRNP1 ON
409500211001              TRNP1.PLACEMENT_DATE    = TRNTGP.PLACEMENT_DATE_2 AND
409600211001              TRNP1.TRANS_NO          = TRNTGP.TRANS_NO_2     AND
409700211001              TRNP1.Trans_Type_Code   = "BUY"                 AND
409800211001              TRNP1.PAYMENT_TYPE_CODE = "R"
409900211001              WHERE
410000211001               TRNP.PLACEMENT_DATE = :li_Placementdatewknp     AND
410100211001               TRNP.TRANS_NO       = :li_Transnowknp
410200211001           END-EXEC.
410300211001      * RFS187080 - Ends
410400211001      * ---------------------------------
410500211001       Process-SWI-TRI-deposit.
410600211001      * ---------------------------------
410700211001      * QC36975 - removed all the periods from the below lines and
410800211001      * to avoide unnnecessary comments
410900211001137238     PERFORM Check-Investment-Type
41100021100136975      IF lc_Producttyperule = lnc_2 OR
41110021100136975         lc_Producttyperule = lnc_7
411200211001           INITIALIZE MFAGIDIACP OF lc_MFAGIDIACP_rec
41130021100136467      PERFORM GetMktvalueInv1
411400211001137239     IF lb_REJrecModeNo
411500211001           MOVE li_Accountwknp TO ACCOUNT-NO OF lc_MFAGIDIACP_rec
411600211001           MOVE li_Tradedatewknp TO li_Tradedatesplit
411700211001138307                              li_TradedateTrans
411800211001           MOVE li_Placementdatewknp TO PLACEMENT-DATE OF
411900211001                                                lc_MFAGIDIACP_rec
412000211001           MOVE li_Transnowknp TO TRANS-NO OF lc_MFAGIDIACP_rec
412100211001           MOVE li_Tradedatewknp TO TRADE-DATE OF lc_MFAGIDIACP_rec
412200211001           MOVE li_Processdatewknp TO PROCESS-DATE OF
412300211001                                               lc_MFAGIDIACP_rec
412400211001           MOVE li_TradeYYYY   TO YEAR OF lc_MFAGIDIACP_rec
412500211001           MOVE li_Grossamtwknp TO DEPOSIT-AMT OF lc_MFAGIDIACP_rec
412600211001           PERFORM Get-Latest-Account-ACB
412700211001           COMPUTE ACB-AMT OF lc_MFAGIDIACP_rec =
412800211001                         DEPOSIT-AMT OF lc_MFAGIDIACP_rec
412900211001                                         + li_LatestACBAmt
413000211001           PERFORM Insert-MFAGIDIACP-rec
413100211001      *RFS1002626-Starts
413200211001           IF lc_Process-Mode IS NOT = 'RCALCACB'
413300211001      *RFS1002626-Ends
413400211001           MOVE li_ProcessDate TO li_ProcessDate1
413500211001      * QC 36708 start
413600211001      *    MOVE li_Effectivedatewknp TO li_EffectivedateSplit
413700211001              MOVE li_Effectivedatewknp TO li_effectfordat
413800211001              MOVE FUNCTION SUBTRACT-DURATION
413900211001                                         (li_effectfordat DAYS 1)
414000211001                            TO li_effectdate1
414100211001              MOVE li_effectdate3 TO li_effectdate4
414200211001              MOVE li_effectdate4 TO li_EffectivedateSplit
414300211001      * QC 36708 End
414400211001138307*    IF li_EffectiveMMDD >= li_TradeMMDD AND
414500211001138307*       li_EffectiveMMDD < li_ProcessdateMMDD
414600211001138307     MOVE li_TradeYYYY TO li_EffectiveYYYY
414700211001138564     MOVE li_Processdate  TO li_Processdate2
414800211001  |        PERFORM UNTIL li_EffectiveYYYY > li_ProcessDateYYYY
414900211001138564*    IF li_EffectivedateSplit >= li_TradedateTrans AND
415000211001138564*       li_EffectivedateSplit < li_processdate1
415100211001138564     MOVE li_EffectivedateSplit TO li_EffDateCmp
415200211001138564     IF li_EffDateCmp         >= li_TradedateTrans AND
415300211001138564        li_EffDateCmp         < li_processdate2
415400211001  |        MOVE li_EffectivedateSplit TO li_EffProcessDate
415500211001  |                                      li_effectdate4
415600211001  |        PERFORM Insert-Backtrades
415700211001  |        MOVE li_TradedateTrans  TO li_Tradedatervs
415800211001  |        IF lb_ACBAccrualFirstYes
415900211001  |           PERFORM Get-AccountACB-Accrual
416000211001  |           SET lb_ACBAccrualFirstNo TO TRUE
416100211001  |        ELSE
416200211001  |           COMPUTE li_ACBAmount = li_PrevACB
416300211001  |        END-IF
416400211001  |
416500211001  |        SET lc_CalcaccrualIntNo TO TRUE
416600211001  |        SET lc_Recalcul-AccIntYes TO TRUE
416700211001  |        PERFORM Calculate-Accrual-interest
416800211001  |        END-IF
416900211001  |        COMPUTE li_EffectiveYYYY = li_EffectiveYYYY + 1
417000211001138307     END-PERFORM
417100211001      *RFS1002626-Starts
417200211001           END-IF
417300211001      *RFS1002626-Ends
417400211001138307*    END-IF
417500211001      * RFS137239 - Starts
41760021100136975 *    END-IF.
417700211001           END-IF
417800211001           END-IF.
417900211001      * RFS137239 - Ends
418000211001      * ---------------------------------
418100211001       Calculate-SWO-TRO-disposition.
418200211001      * ---------------------------------
418300211001136431*    IF lc_Splitopt-SWOTRO = lnc_A
418400211001136431*       SET lc_FullTransferYes TO TRUE
418500211001      * RFS 140909 - begin RM
418600211001      *    PERFORM Validate-Disposition-Trans
418700211001      *    MOVE lc_NondispositionTrans  TO lc_NondispTrans
418800211001      *    MOVE lc_Accttypecode-SWOTRO TO lc_Accttypecodewknp
418900211001      *    MOVE lc_ContrRedem-SWOTRO TO lc_Contredemwknp
419000211001      *    MOVE lnc_SWO              TO lc_Transtypecodewknp
419100211001      *    PERFORM Validate-Disposition-Trans
419200211001      *    IF lc_NondispositionTransYes AND
419300211001136431*       lc_NondispTransYes
419400211001136431**      lc_NondispTransYes        AND
419500211001136431**      lc_FullTransferYes
419600211001      *       SET lc_TransferAtCostYes TO TRUE
419700211001      *    ElSE
419800211001      *       SET lc_TransferAtMarketYes TO TRUE
419900211001      *    END-IF
420000211001      * RFS 140909 - end   RM
420100211001           IF lc_TransferAtMarketYes
420200211001137246*       PERFORM Process-SWI-TRI-deposit
420300211001              PERFORM CalSWOTRODisp
420400211001      * RFS 140909 begin - RM
420500211001138009*       MOVE lnc_SWI TO lc_TransTypeCodeWknp
420600211001              IF lc_TransTypeCodeWknp = lnc_SWO
420700211001                MOVE lnc_SWI TO lc_TransTypeCodeWknp
420800211001              ELSE
420900211001                MOVE lnc_TRI TO lc_TransTypeCodeWknp
421000211001              END-IF
421100211001      * RFS 140909 end   - RM
421200211001   |          MOVE li_SWIAccountNo TO  li_Accountwknp
421300211001   |          MOVE li_SWIPlacementDate TO li_Placementdatewknp
421400211001138009        MOVE li_SWITransNo       TO li_Transnowknp
421500211001      * RFS 140909 begin - RM
421600211001              IF lc_AcctTypeRuleWknp = lnc_1
421700211001137246          PERFORM Process-SWI-TRI-deposit
421800211001              END-IF
421900211001      * RFS 140909 end   - RM
422000211001           END-IF
422100211001           IF lc_TransferAtCostYes
422200211001              IF li_Effectivedatewknp = li_EffectdateSWOTRO
422300211001      * RFS 186963 - Starts
422400211001      * Check if accounts are the same for two-sided transactions
422500211001      * when at cost. If accounts are not same then proceed
422600211001      * with the logic only when both effective dates are the
422700211001      * same for both accounts and account effective date are equal.
422800211001                 AND
422900211001                 lc_SWI-SWO-Account-Same-No
423000211001      * RFS 186963 - Ends
423100211001                 MOVE li_Accountwknp  TO Pi_AccountNo
423200211001                                         li_Accountwknp1
423300211001                 MOVE lnc_R           TO pc_Mode
423400211001                 PERFORM CallFxacbtot
423500211001                 MOVE pi_Startdeposit    TO li_Startdeposit,
423600211001                 MOVE pi_Startdisp       TO li_Startdisp,
423700211001                 MOVE pi_Startgain       TO li_Startgain,
423800211001                 MOVE pi_StartAccruedINT TO li_StartAccruedINT
423900211001                 MOVE li_SWOTROaccnowknp TO li_SWOTROaccnowknp1
424000211001                 MOVE li_SWOTROaccnowknp1 TO pi_Accountno
424100211001                 MOVE lnc_R               TO lc_Mode
424200211001                 PERFORM CallFxacbtot
424300211001                 MOVE pi_TotDeposit     TO li_TotDeposit
424400211001                 MOVE pi_TotDisp        TO li_TotDisp
424500211001                 MOVE pi_TotGain        TO li_TotGain
424600211001                 MOVE pi_Tot-AccruedINT TO li_Tot-AccruedINT
424700211001      * RFS 140909 - begin RM
424800211001                 EXEC SQL
424900211001                  SELECT
425000211001                   COALESCE(GID.Deposit_Amt, 0),
425100211001                   COALESCE(GID.Disposition_Amt, 0),
425200211001                   COALESCE(GID.Capital_Gain_Amount, 0),
425300211001                   COALESCE(GID.Accrued_Intrest, 0)
425400211001                  INTO
425500211001                   :li_ToAcctDeposit,
425600211001                   :li_ToAcctDisp,
425700211001                   :li_ToAcctGain,
425800211001                   :li_ToAcctAccrInt
425900211001                  FROM MFAGIDIACP GID
426000211001                  WHERE
426100211001                     GID.Account_No = :li_AccountWknp
426200211001                  AND GID.Start_Value_Flag = "Y"
426300211001                  ORDER BY
426400211001                   GID.PROCESS_DATE DESC,
426500211001                   GID.TRADE_DATE DESC,
426600211001                   GID.PROC_SEQ_NO DESC
426700211001                  FETCH FIRST ROW ONLY
426800211001                 END-EXEC
426900211001
427000211001                 MOVE SQLSTATE TO lc_SqlStates
427100211001                 IF lncc_SQLSuccessful
427200211001                   CONTINUE
427300211001                 ELSE IF
427400211001                   lncc_SQLEnd
427500211001      * RFS 140909 - end   RM
427600211001                 COMPUTE li_Startdeposit = li_TotDeposit +
427700211001                                           li_Startdeposit
427800211001                 COMPUTE li_Startdisp    = li_TotDisp +
427900211001                                           li_Startdisp
428000211001                 COMPUTE li_Startgain    = li_TotGain +
428100211001                                           li_Startgain
428200211001                 COMPUTE li_StartAccruedINT = li_Tot-AccruedINT +
428300211001                                           li_StartAccruedINT
428400211001                 MOVE li_Accountwknp1    TO Pi_AccountNo
428500211001                 MOVE lnc_U              TO pc_Mode
428600211001                 MOVE li_Startdeposit    TO pi_Startdeposit
428700211001                 MOVE li_Startdisp       TO pi_Startdisp
428800211001                 MOVE li_Startgain       TO pi_Startgain
428900211001                 MOVE li_StartAccruedINT TO pi_StartAccruedINT
429000211001                 PERFORM CallFxacbtot
429100211001      * RFS 140909 - begin RM
429200211001                 END-IF
429300211001      * RFS 140909 - end   RM
429400211001              END-IF
429500211001      * RFS136431 - START
429600211001      *    END-IF
429700211001      *    ELSE
429800211001      *      IF lc_FullTransferNo
429900211001      *         PERFORM Validate-Disposition-Trans
430000211001      *         MOVE lc_dispositionTrans   TO lc_dispTransSWOTRO
430100211001      *         PERFORM CalSWOTRODisp
430200211001      *      END-IF
430300211001      * RFS136431 - END
430400211001           END-IF.
430500211001
430600211001      * ---------------------------------
430700211001       CalSWOTRODisp.
430800211001      * ---------------------------------
430900211001             INITIALIZE MFAGIDIACP OF lc_MFAGIDIACP_rec.
43100021100136467        PERFORM GetMktvalueInv1.
431100211001      * RFS137239 - Starts
431200211001           IF lb_REJrecModeNo
431300211001             MOVE li_SWOTROaccnowknp
431400211001      *                            TO ACCOUNT-NO OF lc_MFAGIDIACP_rec.
431500211001                                   TO ACCOUNT-NO OF lc_MFAGIDIACP_rec
431600211001             MOVE li_PlacementSWOTRO TO PLACEMENT-DATE OF
431700211001      *                                         lc_MFAGIDIACP_rec.
431800211001                                                lc_MFAGIDIACP_rec
431900211001      *      MOVE li_transnoSWOTRO TO TRANS-NO OF lc_MFAGIDIACP_rec.
432000211001             MOVE li_transnoSWOTRO TO TRANS-NO OF lc_MFAGIDIACP_rec
432100211001             MOVE li_TradeSWOTRO   TO TRADE-DATE OF lc_MFAGIDIACP_rec
432200211001                                      li_TradedateTrans
432300211001                                      li_TradeSWOTROMMDD
432400211001      * RFS1002626-Starts
432500211001      *      MOVE li_Processdate TO PROCESS-DATE OF
432600211001      *                                           lc_MFAGIDIACP_rec.
432700211001      *                                           lc_MFAGIDIACP_rec
432800211001            IF lc_Process-Mode IS NOT = 'RCALCACB'
432900211001               MOVE li_Processdate   TO PROCESS-DATE OF
433000211001                                                  lc_MFAGIDIACP_rec
433100211001            ELSE
433200211001               MOVE li_ProcessSWOTRO TO PROCESS-DATE OF
433300211001                                                  lc_MFAGIDIACP_rec
433400211001            END-IF
433500211001      * RFS1002626-Ends
433600211001      *      MOVE li_TradeSWOTROYYYY TO YEAR OF lc_MFAGIDIACP_rec.
433700211001             MOVE li_TradeSWOTROYYYY TO YEAR OF lc_MFAGIDIACP_rec
433800211001             MOVE li_NetamtSWOTRO TO DISPOSITION-AMT
433900211001      *                               OF lc_MFAGIDIACP_rec.
434000211001                                      OF lc_MFAGIDIACP_rec
434100211001      * QC36560 Start
434200211001      *      MOVE li_SWOTROaccnowknp TO li_Accountwknp.
434300211001      *      MOVE li_PlacementSWOTRO TO li_Placementdatewknp.
434400211001      *      MOVE li_transnoSWOTRO   TO li_Transnowknp.
434500211001             MOVE li_SWOTROaccnowknp TO li_Accountwknp
434600211001             MOVE li_PlacementSWOTRO TO li_Placementdatewknp
434700211001             MOVE li_transnoSWOTRO   TO li_Transnowknp
434800211001      * QC36560 End
434900211001
435000211001138009*      PERFORM Get-Latest-Account-ACB.
435100211001      * QC36859 start
435200211001      *      COMPUTE ACB-AMT OF lc_MFAGIDIACP_rec = li_LatestACBAmt
435300211001      *                        - DISPOSITION-AMT OF lc_MFAGIDIACP_rec.
435400211001      * QC36859 end
43550021100136467        MOVE lnc_P         TO li_MKTValueMode
435600211001      *      PERFORM Calculate-Gain-on-Disposition.
435700211001             PERFORM Calculate-Gain-on-Disposition
435800211001             COMPUTE ACB-AMT OF lc_MFAGIDIACP_rec = li_LatestACBAmt
435900211001                               + li_Gain
436000211001      *                        - DISPOSITION-AMT OF lc_MFAGIDIACP_rec.
436100211001                               - DISPOSITION-AMT OF lc_MFAGIDIACP_rec
436200211001      *      PERFORM Insert-MFAGIDIACP-rec.
436300211001             PERFORM Insert-MFAGIDIACP-rec
436400211001      *RFS1002626-Starts
436500211001             IF lc_Process-Mode IS NOT = 'RCALCACB'
436600211001      *RFS1002626-Ends
436700211001137246       MOVE li_ProcessDate TO li_ProcessDate1
436800211001      * QC 36708 start
436900211001              MOVE li_EffectdateSWOTRO TO li_effectfordat
437000211001              MOVE FUNCTION SUBTRACT-DURATION
437100211001                                         (li_effectfordat DAYS 1)
437200211001                            TO li_effectdate1
437300211001              MOVE li_effectdate3 TO li_effectdate4
437400211001              MOVE li_effectdate4 TO li_EffectdateSWOTROSplit
437500211001      * QC 36708 End
437600211001138307*      IF li_EffectSWOTROMMDD >= li_TradeSWOTROMMDD AND
437700211001138307*         li_EffectSWOTROMMDD < li_ProcessdateMMDD
437800211001   |          MOVE li_TradeSWOTROYYYY TO li_EffectSWOTROYYYY
437900211001138564        MOVE li_Processdate  TO li_Processdate2
438000211001   |          PERFORM UNTIL li_EffectSWOTROYYYY > li_ProcessDateYYYY
438100211001138564*       IF li_EffectdateSWOTROSplit >= li_TradedateTrans AND
438200211001138564*          li_EffectdateSWOTROSplit < li_processdate1
438300211001138564        MOVE li_EffectdateSWOTROSplit TO li_EffDateCmp
438400211001138564        IF li_EffDateCmp            >= li_TradedateTrans  AND
438500211001138564           li_EffDateCmp            < li_processdate2
438600211001   |             MOVE li_EffectdateSWOTROSplit TO li_EffProcessDate
438700211001   |                                              li_EffectivedateSplit
438800211001   |                                              li_effectdate4
438900211001   |            PERFORM Insert-Backtrades
439000211001   |            MOVE li_TradedateTrans   TO li_Tradedatervs
439100211001   |            IF lb_ACBAccrualFirstYes
439200211001   |               PERFORM Get-AccountACB-Accrual
439300211001138950* RFS 138950 - begin QC 38057
439400211001138950*            SET lb_ACBAccrualFirstNo TO TRUE
439500211001138950* RFS 138950 - end
439600211001   |            ELSE
439700211001   |               COMPUTE li_ACBAmount = li_PrevACB
439800211001   |            END-IF
439900211001   |            SET lc_CalcaccrualIntNo TO TRUE
440000211001   |            SET lc_Recalcul-AccIntYes TO TRUE
440100211001   |            PERFORM Calculate-Accrual-interest
440200211001   |          END-IF
440300211001   |          COMPUTE li_EffectSWOTROYYYY = li_EffectSWOTROYYYY + 1
440400211001   |          END-PERFORM
440500211001   |  *      END-IF.
440600211001      *RFS1002626-Starts
440700211001             END-IF
440800211001      *RFS1002626-Ends
440900211001138307*      END-IF
441000211001           END-IF.
441100211001      * RFS137239 - Ends
441200211001      * ---------------------------------
441300211001       CallFxacbtot.
441400211001      * ---------------------------------
441500211001           CALL "FXACBTOT" USING pi_AccountNo,
441600211001                                 pc_Mode,
441700211001                                 pi_Startdeposit,
441800211001                                 pi_Startdisp,
441900211001                                 pi_Startgain,
442000211001                                 pi_StartAccruedINT,
442100211001                                 pi_PR-YearDeposit,
442200211001                                 pi_PR-YearDisp,
442300211001                                 pi_PR-YearGain,
442400211001                                 pi_PR-YearAccuredINT,
442500211001                                 pi_Cur-Yeardeposit,
442600211001                                 pi_Cur-Yeardisp,
442700211001                                 pi_Cur-Yeargain,
442800211001                                 pi_Cur-YearAccruedINT,
442900211001                                 pi_TotDeposit,
443000211001                                 pi_TotDisp,
443100211001                                 pi_TotGain,
443200211001                                 pi_Tot-AccruedINT,
443300211001139650                           pi_Tot-LatestACB,
443400211001                                 pc_RejectionCode.
443500211001      * ---------------------------------
443600211001       Validate-Disposition-Trans.
443700211001      * ---------------------------------
443800211001           INITIALIZE lc_dispositionTrans
443900211001                      lc_NondispositionTrans
444000211001156118                lc_transAtAverage
444100211001156118                lc_taxableeventind.
444200211001
444300211001           EXEC SQL
444400211001             SELECT TRANSFER_AT_AVERAGE,
444500211001                    TAXABLE_EVENT_INDICATOR
444600211001                    INTO:lc_transAtAverage,
444700211001                        :lc_taxableeventind
444800211001              FROM MFAACTEVP
444900211001              WHERE ACCOUNT_TYPE_CODE = :lc_Accttypecodewknp AND
445000211001                    CONTR_REDEM_CODE  = :lc_Contredemwknp    AND
445100211001                    TRANS_TYPE_CODE   = :lc_Transtypecodewknp
445200211001           END-EXEC.
445300211001           MOVE SQLSTATE TO lc_sqlStates.
445400211001           IF NOT lncc_sqlSuccessful
445500211001           AND NOT lncc_sqlEnd
445600211001              SET lnc_Err_23 TO TRUE
445700211001              MOVE lnc_ErrSelectMFAACTEVP TO lc_sqlErrShortDESCR
445800211001              PERFORM  SQL_Fail_Process
445900211001           END-IF.
446000211001           IF lc_taxableeventind = lnc_D AND
446100211001              lc_transAtAverage = lnc_N AND
446200211001              (lc_Transtypecodewknp = lnc_SEL OR
446300211001               lc_Transtypecodewknp = lnc_SWI OR
446400211001               lc_Transtypecodewknp = lnc_SWO OR
446500211001               lc_Transtypecodewknp = lnc_TRI OR
446600211001               lc_Transtypecodewknp = lnc_TRO)
446700211001              SET lc_dispositionTransYes TO TRUE
446800211001           ELSE
446900211001              SET lc_dispositionTransNo TO TRUE
447000211001           END-IF.
447100211001           IF lc_taxableeventind = lnc_N AND
447200211001              lc_transAtAverage = lnc_Y AND
447300211001              (lc_Transtypecodewknp = lnc_SWI OR
447400211001               lc_Transtypecodewknp = lnc_SWO OR
447500211001               lc_Transtypecodewknp = lnc_TRI OR
447600211001      *RFS186964 - Starts
447700211001               lc_Transtypecodewknp = lnc_BUY OR
447800211001      *RFS186964 - Ends
447900211001               lc_Transtypecodewknp = lnc_TRO)
448000211001              SET lc_NondispositionTransYes TO TRUE
448100211001           ELSE
448200211001              SET lc_NondispositionTransNo TO TRUE
448300211001           END-IF.
448400211001      * ---------------------------------
448500211001       Check-investment-type.
448600211001      * ---------------------------------
448700211001           EXEC SQL
448800211001             SELECT PRODUCT_TYPE_RULE
448900211001                    INTO:lc_producttyperule
449000211001              FROM MFAPRTCDP RTCDP
449100211001              INNER JOIN MFAINVP INVP
449200211001                ON INVP.PRODUCT_TYPE_CODE = RTCDP.PRODUCT_TYPE_CODE
449300211001              WHERE INVP.INVESTMENT_CODE = :lc_Investmentcodewknp
449400211001           END-EXEC.
449500211001           MOVE SQLSTATE TO lc_sqlStates.
449600211001           IF NOT lncc_sqlSuccessful
449700211001              SET lnc_Err_24 TO TRUE
449800211001              MOVE lnc_ErrSelectProdtyprul TO lc_sqlErrShortDESCR
449900211001              PERFORM  SQL_Fail_Process
450000211001           END-IF.
450100211001      * ---------------------------------
450200211001       Calculate-Gain-on-Disposition.
450300211001      * ---------------------------------
45040021100136467      PERFORM GetMktvalueInv1.
450500211001           PERFORM Get-Latest-Account-ACB.
450600211001           EXEC SQL
450700211001             SELECT
450800211001                    COALESCE(SUM(CHARGE), 0)
450900211001                    INTO:li_charge
451000211001              FROM MFATRNCHP TRNCHP
451100211001              INNER JOIN MFATRNP TRNP
451200211001                ON TRNP.PLACEMENT_DATE = TRNCHP.PLACEMENT_DATE AND
451300211001                   TRNP.TRANS_NO = TRNCHP.TRANS_NO
451400211001              WHERE TRNCHP.DEDUCTION_CODE NOT IN
451500211001                    ("FEDT","PRVT","NONT","GST","PST","USWT")
451600211001              AND  TRNP.PLACEMENT_DATE     = :li_Placementdatewknp
451700211001              AND  TRNP.TRANS_NO           = :li_Transnowknp
451800211001           END-EXEC.
451900211001           MOVE SQLSTATE TO lc_sqlStates.
452000211001           IF NOT lncc_sqlSuccessful
452100211001              SET lnc_Err_25 TO TRUE
452200211001              MOVE lnc_ErrSelectCharge     TO lc_sqlErrShortDESCR
452300211001              PERFORM  SQL_Fail_Process
452400211001           END-IF.
452500211001
452600211001      *RFS1002626-Starts
452700211001           INITIALIZE li_INTcharge.
452800211001           EXEC SQL
452900211001            SELECT COALESCE(SUM(TRNP.GROSS_AMT - TRNP.NET_AMT), 0)
453000211001                    INTO:li_INTcharge
453100211001              FROM MFATRNRDP TRNRDP
453200211001              INNER JOIN MFATRNP TRNP
453300211001                ON TRNP.PLACEMENT_DATE = TRNRDP.PLACEMENT_DATE_2  AND
453400211001                   TRNP.TRANS_NO       = TRNRDP.TRANS_NO_2
453500211001              WHERE TRNRDP.PLACEMENT_DATE  = :li_Placementdatewknp
453600211001                AND TRNRDP.TRANS_NO        = :li_Transnowknp
453700211001                AND TRNP.TRADE_DATE    	= :li_Tradedatewknp
453800211001                AND TRNP.TRANS_TYPE_CODE 	= "INT"
453900211001           END-EXEC.
454000211001           MOVE SQLSTATE TO lc_sqlStates.
454100211001           IF NOT lncc_sqlSuccessful
454200211001              SET lnc_Err_77 TO TRUE
454300211001              MOVE lnc-ErrDesc77      TO lc_sqlErrShortDESCR
454400211001              PERFORM  SQL_Fail_Process
454500211001           END-IF.
454600211001      *RFS1002626-Ends
454700211001           PERFORM Calculate-Gain.
454800211001
454900211001      * ---------------------------------
455000211001       Calculate-Gain.
455100211001      * ---------------------------------
455200211001      * QC36708 - START
455300211001      *    COMPUTE li_AccVal-GIO-TIO-Inv = li_MarketValue
455400211001
455500211001      *    COMPUTE li_Accrint = li_AccVal-GIO-TIO-inv -
455600211001      *                         li_LatestACBAmt.
455700211001      *    COMPUTE li_TotalMV = li_acctmrktvalue1 +
455800211001      *                         li_Accrint.
455900211001           COMPUTE li_TotalMV = li_MarketValue.
456000211001      * QC36708 - END
456100211001      *RFS1002626-Starts
456200211001      *    COMPUTE li_Accumulatevalue = li_TotalMV - li_charge.
456300211001           COMPUTE li_Accumulatevalue = li_TotalMV - li_charge
456400211001                                                   - li_INTcharge.
456500211001      *RFS1002626-Ends
456600211001138009*    COMPUTE li_AmtNetdisp = li_Grossamtwknp   - li_charge.
456700211001138009     COMPUTE li_AmtNetdisp = li_Grossamt    - li_charge.
456800211001138950*    COMPUTE li_ACBratio = li_LatestACBAmt / li_Accumulatevalue
456900211001138950     COMPUTE li_ACBratio ROUNDED =
457000211001138950                           li_LatestACBAmt / li_Accumulatevalue
457100211001           COMPUTE li_Netdiff  = 1 - li_ACBratio
457200211001138950*    COMPUTE li_Gain = li_AmtNetdisp * li_Netdiff
457300211001138950     COMPUTE li_Gain ROUNDED = li_AmtNetdisp * li_Netdiff
457400211001           IF li_Gain < 0
457500211001              COMPUTE li_Gain = 0
457600211001           END-IF
457700211001           MOVE li_Gain TO CAPITAL-GAIN-AMOUNT OF
457800211001                                               lc_MFAGIDIACP_Rec.
457900211001
458000211001      * ---------------------------------
458100211001       Get-Latest-Account-ACB.
458200211001      * ---------------------------------
458300211001           INITIALIZE li_LatestACBAmt.
458400211001
458500211001           EXEC SQL
458600211001             SELECT
458700211001                    COALESCE(ACB_AMT, 0)
458800211001                    INTO:li_LatestACBAmt
458900211001              FROM MFAGIDIACP
459000211001              WHERE ACCOUNT_NO = :li_Accountwknp
459100211001                AND TRANS_STATUS_CODE <> "RVS"
459200211001138307          AND (TRADE_DATE < :li_Tradedatewknp
459300211001  |             OR (TRADE_DATE = :li_Tradedatewknp
459400211001  |             AND  PLACEMENT_DATE <> 0
459500211001138307          AND  TRANS_NO <> 0))
459600211001137246*       ORDER BY ACCOUNT_NO, PROCESS_DATE DESC,
459700211001137246*                TRADE_DATE DESC,PROC_SEQ_NO DESC
459800211001137246        ORDER BY ACCOUNT_NO, TRADE_DATE DESC,
459900211001137246                 PROCESS_DATE DESC,PROC_SEQ_NO DESC
460000211001              FETCH FIRST ROW ONLY
460100211001           END-EXEC.
460200211001           MOVE SQLSTATE TO lc_sqlStates.
460300211001           IF lncc_sqlSuccessful
460400211001               OR lncc_sqlEnd
460500211001              CONTINUE
460600211001           ELSE
460700211001              SET lnc_Err_26 TO TRUE
460800211001              MOVE lnc_ErrSelectACBAmt     TO lc_sqlErrShortDESCR
460900211001              PERFORM  SQL_Fail_Process
461000211001           END-IF.
461100211001
461200211001      * RFS137241 - Start
461300211001      * ---------------------------------
461400211001       Get-AccountACB-Accrual.
461500211001      * ---------------------------------
461600211001           INITIALIZE li_ACBAmount.
461700211001
461800211001           EXEC SQL
461900211001             SELECT
462000211001                    COALESCE(ACB_AMT, 0)
462100211001                    INTO :li_ACBAmount
462200211001              FROM MFAGIDIACP
462300211001              WHERE ACCOUNT_NO = :li_Accountwknp
462400211001                AND TRANS_STATUS_CODE <> "RVS"
462500211001138302*         AND TRADE_DATE <= :li_Tradedatervs
462600211001138302          AND (TRADE_DATE < :li_Tradedatervs
462700211001   |             OR (TRADE_DATE = :li_Tradedatervs
462800211001   |            AND  PLACEMENT_DATE <> 0
462900211001138302          AND  TRANS_NO <> 0))
463000211001              ORDER BY ACCOUNT_NO, TRADE_DATE DESC,
463100211001                       PROCESS_DATE DESC,PROC_SEQ_NO DESC
463200211001              FETCH FIRST ROW ONLY
463300211001           END-EXEC.
463400211001           MOVE SQLSTATE TO lc_sqlStates.
463500211001           IF lncc_sqlSuccessful
463600211001               OR lncc_sqlEnd
463700211001              CONTINUE
463800211001           ELSE
463900211001              SET lnc_Err_26 TO TRUE
464000211001              MOVE lnc_ErrSelectACBAmt     TO lc_sqlErrShortDESCR
464100211001              PERFORM  SQL_Fail_Process
464200211001           END-IF.
464300211001      * RFS137241 - End
464400211001
464500211001      * ---------------------------------
464600211001       Get-last-sequence-No.
464700211001      * ---------------------------------
464800211001           INITIALIZE li_latestseqno.
464900211001           EXEC SQL
465000211001             SELECT
465100211001                    COALESCE(PROC_SEQ_NO, 0)
465200211001                    INTO :li_latestseqno
465300211001              From MFAGIDIACP
465400211001              WHERE ACCOUNT_NO = :li_Accountwknp AND
465500211001      *RFS1002626-Starts
465600211001      *             PROCESS_DATE = :li_ProcessDate AND
465700211001                    PROCESS_DATE = :li_AccrualDate AND
465800211001      *RFS1002626-Ends
465900211001                    TRADE_DATE = : li_Tradedate
466000211001              ORDER BY ACCOUNT_NO, PROCESS_DATE DESC,
466100211001                       TRADE_DATE DESC,PROC_SEQ_NO DESC
466200211001              FETCH FIRST ROW ONLY
466300211001           END-EXEC.
466400211001           MOVE SQLSTATE TO lc_sqlStates.
466500211001           IF lncc_sqlSuccessful
466600211001              OR lncc_sqlEnd
466700211001              CONTINUE
466800211001           ELSE
466900211001              SET lnc_Err_27 TO TRUE
467000211001              MOVE lnc_ErrSelectlatestseqno  TO lc_sqlErrShortDESCR
467100211001              PERFORM  SQL_Fail_Process
467200211001           END-IF.
467300211001      * ---------------------------------
467400211001       Insert-MFAGIDIACP-rec.
467500211001      * ---------------------------------
467600211001      * RFS185233 - Begins
467700211001           PERFORM Get-CntryCode
467800211001           MOVE lc_TaxCountryCode TO TAX-COUNTRY-CODE OF
467900211001                                     lc_MFAGIDIACP_rec
468000211001           MOVE lc_TaxProvinceCode TO TAX-PROVINCE-CODE OF
468100211001                                     lc_MFAGIDIACP_rec
468200211001      * RFS185233 - Ends
468300211001      * QC lc_MFAGIDIACP_rec
468400211001           IF (PLACEMENT-DATE OF lc_MFAGIDIACP_rec NOT = 0
468500211001           AND TRANS-NO OF lc_MFAGIDIACP_rec NOT = 0)
468600211001           PERFORM GetMKtTradeDate
468700211001           PERFORM FindMKTValuexist
468800211001
468900211001           IF li_MKTValueMode = "P"
469000211001              IF li_CountMKT > 0
469100211001                 PERFORM Get-Market-Value
469200211001                 IF lc_Transtypecodewknp = lnc_BUY  OR
469300211001                                           lnc_SWI  OR
469400211001                                           lnc_TRI
469500211001                    COMPUTE li_Marketvalue = li_Marketvalue +
469600211001138009                                       li_Grossamt
469700211001138009*                                      li_Grossamtwknp
469800211001                 ELSE
469900211001                    IF lc_Transtypecodewknp = lnc_SEL  OR
47000021100136708                                         lnc_INT  OR
470100211001                                              lnc_SWO  OR
470200211001                                              lnc_TRO
470300211001                       COMPUTE li_Marketvalue = li_Marketvalue -
470400211001138009                                          li_Grossamt
470500211001138009*                                         li_Grossamtwknp
470600211001                    END-IF
470700211001                 END-IF
470800211001                 PERFORM Update-TMPACTMKT
470900211001              END-IF
471000211001           ELSE
471100211001138009*          COMPUTE li_Marketvalue = li_Grossamtwknp
471200211001138009           COMPUTE li_Marketvalue = li_Grossamt
471300211001                 PERFORM Insert-TMPACTMKT
471400211001           END-IF
471500211001           END-IF.
471600211001      * QC 36467-End
471700211001
471800211001      *RFS1002626-Starts
471900211001           MOVE PROCESS-DATE OF MFAGIDIACP TO li_AccrualDate
472000211001      *RFS1002626-Ends
472100211001           MOVE TRADE-DATE OF lc_MFAGIDIACP_rec  TO li_Tradedate.
472200211001           PERFORM Get-last-sequence-No.
472300211001           COMPUTE li_latestseqno = li_latestseqno + 1.
472400211001           MOVE li_latestseqno TO PROC-SEQ-NO OF
472500211001                                    lc_MFAGIDIACP_Rec.
47260021100136708      IF ACB-AMT OF MFAGIDIACP < 0
47270021100136708         COMPUTE ACB-AMT OF MFAGIDIACP = 0
47280021100136708      END-IF.
472900211001      *RFS1002626-Starts
473000211001138009*    MOVE ACCOUNT-NO OF MFAGIDIACP TO li_Placementdatewknp
473100211001           MOVE ACCOUNT-NO OF MFAGIDIACP TO li_Accountwknp
473200211001      *RFS1002626-Ends
473300211001   |       MOVE PLACEMENT-DATE OF MFAGIDIACP TO li_Placementdatewknp
473400211001   |       MOVE TRANS-NO   OF MFAGIDIACP TO li_Transnowknp
473500211001138302     MOVE PROCESS-DATE OF MFAGIDIACP TO li_AccrualDate
473600211001138302*    PERFORM Trans-Found-MFAGIDIACP.
473700211001138302     PERFORM Accrual-Found-MFAGIDIACP.
473800211001138009     IF lc_TransFoundACPNo
473900211001           EXEC SQL
474000211001              INSERT INTO MFAGIDIACP
474100211001              VALUES (:MFAGIDIACP)
474200211001138009*    END-EXEC.
474300211001138009     END-EXEC
474400211001138009*    MOVE SQLSTATE TO lc_sqlStates.
474500211001138009     MOVE SQLSTATE TO lc_sqlStates
474600211001           IF NOT lncc_sqlSuccessful
474700211001              SET lnc_Err_28 TO TRUE
474800211001              MOVE lnc_ErrInsertMFAGIDIACP  TO lc_sqlErrShortDESCR
474900211001              PERFORM  SQL_Fail_Process
475000211001138009     END-IF
475100211001           END-IF.
475200211001
475300211001      * QC 36467-Start
475400211001      * ---------------------------------
475500211001       Insert-TMPACTMKT.
475600211001      * ---------------------------------
475700211001      * RFS136431 - START
475800211001           IF li_AccountNo NOT= 0  AND
475900211001              li_MktTradeDate NOT= 0
476000211001      * RFS136431 - END
476100211001           EXEC SQL
476200211001             INSERT INTO TMPACTMKT
476300211001               VALUES (:li_AccountNo,
476400211001                       :li_MktTradeDate,
476500211001                       :li_MarketValue)
476600211001      * RFS136431 - START
476700211001      *    END-EXEC.
476800211001           END-EXEC
476900211001           END-IF.
477000211001      * RFS136431 - END
477100211001
477200211001           MOVE SQLSTATE              TO  lc_sqlStates
477300211001           IF NOT  lncc_sqlSuccessful
477400211001              SET  lnc_Err_56         TO  TRUE
477500211001              MOVE lc_ErrCodeDescr56  TO  lc_SqlErrShortDescr
477600211001              PERFORM Dsp-Error
477700211001           END-IF.
477800211001
477900211001      * ---------------------------------
478000211001       Update-TMPACTMKT.
478100211001      * ---------------------------------
478200211001      * RFS136431 - START
478300211001           IF li_AccountNo NOT= 0  AND
478400211001              li_MktTradeDate NOT= 0
478500211001      * RFS136431 - END
478600211001           EXEC SQL
478700211001             UPDATE TMPACTMKT
478800211001             SET    MARKET_VALUE    = :li_MarketValue
478900211001             WHERE  ACCOUNT_NO      = :li_AccountNo
479000211001             AND    TRADE_DATE      = :li_MktTradeDate
479100211001      * RFS136431 - START
479200211001      *    END-EXEC.
479300211001           END-EXEC
479400211001           END-IF.
479500211001      * RFS136431 - END
479600211001
479700211001           MOVE SQLSTATE              TO  lc_sqlStates
479800211001           IF NOT  lncc_sqlSuccessful
479900211001              SET  lnc_Err_57         TO  TRUE
480000211001              MOVE lc_ErrCodeDescr57  TO  lc_SqlErrShortDescr
480100211001              PERFORM Dsp-Error
480200211001           END-IF.
480300211001
480400211001      * QC 36467-Ends
480500211001
480600211001      * ---------------------------------
480700211001       Process-Reverse-Transaction.
480800211001      * ---------------------------------
480900211001      * RFS138564 - Start
481000211001           IF  lc_Transtypecodewknp = lnc_INT
481100211001141615*    AND lc_Dispoptioncode = lnc_R
481200211001141615     AND lb_ReinvestTrade
481300211001               CONTINUE
481400211001           ELSE
481500211001           EXEC SQL
481600211001              UPDATE MFAGIDIACP SET TRANS_STATUS_CODE = "RVS"
481700211001              WHERE PLACEMENT_DATE = :ld_Placement-Date AND
481800211001                    TRANS_NO =: li_TransNo
481900211001           END-EXEC
482000211001           MOVE SQLSTATE TO lc_sqlStates
482100211001           IF NOT lncc_sqlSuccessful
482200211001              SET lnc_Err_29 TO TRUE
482300211001              MOVE lnc_ErrUpdateMFAGIDIACP  TO lc_sqlErrShortDESCR
482400211001              PERFORM  SQL_Fail_Process
482500211001           END-IF
482600211001           END-IF
482700211001      * RFS138564 - End
482800211001
482900211001           EXEC SQL
483000211001134626*       SELECT EFFECTIVE_DATE
483100211001134626        SELECT EFFECTIV_DATE
483200211001                INTO :li_effectivedatervs
483300211001                FROM MFAACMDP
483400211001              WHERE ACCOUNT_NO = :li_Accountwknp
483500211001           END-EXEC.
483600211001           MOVE SQLSTATE TO lc_sqlStates.
483700211001           MOVE li_effectivedatervs  TO li_EffectivedatervsSplit.
483800211001           IF NOT lncc_sqlSuccessful
483900211001              SET lnc_Err_30 TO TRUE
484000211001              MOVE lnc_ErrSelectEffdatervs  TO lc_sqlErrShortDESCR
484100211001              PERFORM  SQL_Fail_Process
484200211001           END-IF.
484300211001           EXEC SQL
484400211001              SELECT TRADE_DATE
484500211001                INTO :li_Tradedatervs
484600211001138950          FROM MFATRNP
484700211001138950*         FROM MFAGIDIACP
484800211001              WHERE PLACEMENT_DATE = :ld_Placement-Date AND
484900211001                    TRANS_NO =: li_TransNo
485000211001           END-EXEC.
485100211001           MOVE SQLSTATE TO lc_sqlStates.
485200211001           IF NOT lncc_sqlSuccessful
485300211001              SET lnc_Err_31 TO TRUE
485400211001              MOVE lnc_ErrSelectTradatervs  TO lc_sqlErrShortDESCR
485500211001              PERFORM  SQL_Fail_Process
485600211001           END-IF.
485700211001           MOVE li_ProcessDate TO li_ProcessDate1.
485800211001           MOVE li_Tradedatervs TO li_TradedatervsSplit.
485900211001      * QC 36708 start
486000211001              MOVE li_effectivedatervs TO li_effectfordat
486100211001              MOVE FUNCTION SUBTRACT-DURATION
486200211001                                         (li_effectfordat DAYS 1)
486300211001                            TO li_effectdate1
486400211001              MOVE li_effectdate3 TO li_effectdate4
486500211001              MOVE li_effectdate4 TO li_EffectivedatervsSplit
486600211001      * QC 36708 End
486700211001137241*    IF li_EffectiveRVSMMDD >= li_TradeRVSMMDD AND
486800211001137241*       li_EffectiveRVSMMDD < li_ProcessDateMMDD
486900211001137241*       PERFORM Insert-Backtrades
487000211001137241     MOVE li_TradeRVSYYYY TO li_EffectiveRVSYYYY
487100211001138564     MOVE li_Processdate  TO li_Processdate2
487200211001138564     MOVE li_TradedatervsSplit TO li_TradeDateCmp
487300211001137241     PERFORM UNTIL li_EffectiveRVSYYYY > li_ProcessDateYYYY
487400211001      * RFS138564 - Start
487500211001137241*    IF li_EffectivedatervsSplit >= li_TradedatervsSplit AND
487600211001           MOVE li_EffectivedatervsSplit TO li_EffDateCmp
487700211001138564     IF li_EffDateCmp            >= li_TradeDateCmp      AND
487800211001138564        li_EffDateCmp            < li_processdate2
487900211001137241*       li_EffectivedatervsSplit < li_processdate1
488000211001  |           MOVE li_EffectivedatervsSplit TO li_Tradedatewknp
488100211001  |                                            li_MktTradeDate
488200211001138302                                         li_EffProcessDate
488300211001138009        MOVE li_Accountwknp  TO li_AccountNo
488400211001138302*       PERFORM CalcAcctLevelMKTValue
488500211001  |           SET lc_CalcaccrualIntNo TO TRUE
488600211001  |           SET lc_Recalcul-AccIntYes TO TRUE
488700211001138302*       MOVE li_Accountwknp TO li_AccrualAccount
488800211001138302*       MOVE li_RetrnAccrualInterest TO li_AccrualAmt
488900211001138302        PERFORM Insert-Backtrades
489000211001  |           IF lb_ACBAccrualFirstYes
489100211001  |              PERFORM Get-AccountACB-Accrual
489200211001  |              SET lb_ACBAccrualFirstNo TO TRUE
489300211001  |           ELSE
489400211001  |              COMPUTE li_ACBAmount = li_PrevACB
489500211001  |           END-IF
489600211001138302*       PERFORM Calc-Acc-Amt
489700211001138302        PERFORM Calculate-Accrual-interest
489800211001138302*       PERFORM Calc-Acc-Amt
489900211001137241*       PERFORM Calculate-Accrual-interest
490000211001137241*    END-IF.
490100211001137241     END-IF
490200211001137241        COMPUTE li_EffectiveRVSYYYY = li_EffectiveRVSYYYY + 1
490300211001           END-PERFORM.
490400211001      *RFS138564 - End
490500211001      *RFS1002626-Starts
490600211001      * ---------------------------------
490700211001       Process-Recalc-records.
490800211001      * ---------------------------------
490900211001
491000211001           EXEC SQL
491100211001             INSERT INTO WKTRNP
491200211001      *RFS186075 - Starts
491300211001      *      SELECT TRNP.*,ACMDP.EFFECTIV_DATE,
491400211001      *RFS1106437 - Starts
491500211001             SELECT TRNP.*,ACMDP.EFFECTIV_DATE,
491600211001      *      SELECT TRNP.*,
491700211001      *             CASE WHEN :li_AccAttEffecDate > 0
491800211001      *                  AND :lc_FullYear = "Y"
491900211001      *             THEN :li_AccAttEffecDate
492000211001      *             ELSE ACMDP.EFFECTIV_DATE END,
492100211001      *RFS1106437 - Ends
492200211001      *RFS186075 - Ends
492300211001                    RTCDP.PRODUCT_TYPE_RULE,
492400211001                    ACCTYP.ACCOUNT_TYPE_CODE,
492500211001                    ACCTYP.ACCOUNT_TYPE_RULE
492600211001              FROM MFATRNP TRNP
492700211001
492800211001              INNER JOIN MFATRDPSP TRDPSP ON
492900211001                TRDPSP.PLACEMENT_DATE = TRNP.PLACEMENT_DATE      AND
493000211001                TRDPSP.TRANS_NO       = TRNP.TRANS_NO
493100211001
493200211001              LEFT OUTER JOIN MFATRNTGP TGP ON
493300211001                TGP.PLACEMENT_DATE_2  = TRNP.PLACEMENT_DATE      AND
493400211001                TGP.TRANS_NO_2        = TRNP.TRANS_NO            AND
493500211001                TGP.RELATIONSHIP_TYPE = "DSB"
493600211001
493700211001              LEFT OUTER JOIN MFATRNP TRN2 ON
493800211001                TRN2.PLACEMENT_DATE   = TGP.PLACEMENT_DATE       AND
493900211001                TRN2.TRANS_NO         = TGP.TRANS_NO             AND
494000211001                TRN2.TRANS_TYPE_CODE IN ("TRO", "SWO")
494100211001
494200211001              LEFT OUTER JOIN MFAACCNTP NTP2 ON
494300211001                TRN2.ACCOUNT_NO       = NTP2.ACCOUNT_NO
494400211001
494500211001              INNER JOIN MFAACCNTP ACCNTP ON
494600211001                ACCNTP.ACCOUNT_NO     = TRNP.ACCOUNT_NO
494700211001
494800211001              INNER JOIN MFAACMDP ACMDP ON
494900211001                ACCNTP.ACCOUNT_NO     = ACMDP.ACCOUNT_NO
495000211001
495100211001              INNER JOIN MFAACCTYP ACCTYP ON
495200211001                ACCTYP.ACCOUNT_TYPE_CODE = ACCNTP.ACCOUNT_TYPE_CODE
495300211001
495400211001              INNER JOIN MFAACCIVP ACCIVP ON
495500211001                TRNP.ACCOUNT_NO       = ACCIVP.ACCOUNT_NO        AND
495600211001                TRNP.INVESTMENT_CODE  = ACCIVP.INVESTMENT_CODE
495700211001
495800211001              INNER JOIN MFAINVP INVP ON
495900211001                ACCIVP.INVESTMENT_CODE = INVP.INVESTMENT_CODE
496000211001
496100211001              INNER JOIN MFAPRTCDP RTCDP ON
496200211001                INVP.PRODUCT_TYPE_CODE = RTCDP.PRODUCT_TYPE_CODE AND
496300211001                RTCDP.PRODUCT_TYPE_RULE IN ("2","7","6")
496400211001
496500211001              WHERE
496600211001               ((ACCTYP.ACCOUNT_TYPE_RULE = "1"
496700211001                 AND ACCNTP.NOMINEE <> "Y"
496800211001                 AND TRNP.TRANS_TYPE_CODE IN
496900211001                     ("BUY","SEL","INT"))
497000211001                OR
497100211001                (ACCNTP.NOMINEE <> "Y"
497200211001                 AND NTP2.NOMINEE <> "Y"
497300211001                 AND TRNP.TRANS_TYPE_CODE IN ("SWI", "TRI"))
497400211001                )
497500211001                AND TRNP.TRANS_STATUS_CODE IN
497600211001                         ("HST","HSC")
497700211001                AND ACCNTP.ACCOUNT_NO = :li_AccountNum
497800211001                AND  TRNP.REVERSE <> "Y"
497900211001                AND :lc_RecalcMode = "Y"
498000211001
498100211001      *RFS186075 - Starts
498200211001                AND
498300211001      * RFS1116416 - begin
498400211001      *          ((TRNP.PROCESS_DATE >= :li_AccAttEffecDate
498500211001      *            AND :li_AccAttEffecDate > 0
498600211001                (((TRNP.PROCESS_DATE >= :li_AccAttEffecDate
498700211001                   OR ACMDP.EFFECTIV_DATE <= :li_AccAttEffecDate)
498800211001                   AND :li_AccAttEffecDate > 0
498900211001      * RFS1116416 - end
499000211001                   AND :lc_FullYear = "Y") OR
499100211001                  (:li_AccAttEffecDate = 0
499200211001                   AND :lc_FullYear = "Y") OR
499300211001                   :lc_FullYear = "N"
499400211001                 )
499500211001      *RFS186075 - Ends
499600211001                ORDER BY TRNP.TRADE_DATE, TRDPSP.PROCESS_DATE,
499700211001                         TRDPSP.PROC_SEQ_NO
499800211001
499900211001           END-EXEC.
500000211001           MOVE SQLSTATE TO lc_sqlStates.
500100211001           IF NOT lncc_sqlSuccessful AND
500200211001              NOT lncc_sqlEnd
500300211001              SET lnc_Err_73     TO TRUE
500400211001              MOVE lnc-ErrDesc73 TO lc_sqlErrShortDESCR
500500211001              PERFORM  SQL_Fail_Process
500600211001           END-IF.
500700211001
500800211001           MOVE lnc_WKACCRINT TO lc_filename.
500900211001           PERFORM Clear-Work-Files.
501000211001           PERFORM Load-Account-InvestmentsRecalc.
501100211001           PERFORM Open-WKTRNP-Cursor-Rcalc.
501200211001           PERFORM Fetch-Wktrnp-Records UNTIL lb_Eof-Wktrnpyes.
501300211001
501400211001           IF lb_EOF-WktrnpYes
501500211001              EXEC SQL
501600211001                CLOSE lcu_mfatrnp1
501700211001              END-EXEC
501800211001           END-IF.
501900211001
502000211001           MOVE SQLSTATE TO lc_sqlStates.
502100211001           IF NOT lncc_sqlSuccessful AND
502200211001              NOT lncc_sqlEnd
502300211001              SET lnc_Err_74     TO TRUE
502400211001              MOVE lnc-ErrDesc74 TO lc_sqlErrShortDESCR
502500211001              PERFORM  SQL_Fail_Process
502600211001           END-IF.
502700211001
502800211001      * -----------------
502900211001       Get-Prior-Bus-Day.
503000211001      * ------------------
503100211001           INITIALIZE li_CurrEffectdate.
503200211001           EXEC SQL
503300211001             SELECT BUSINESS_DAY
503400211001                    INTO :li_CurrEffectdate
503500211001             FROM   MFABUSDAP
503600211001             WHERE BUSINESS_DAY <= :li_Buscaldate
503700211001             AND   ALLOW_TRADING = :lnc_Y
503800211001             ORDER BY BUSINESS_DAY DESC
503900211001              FETCH FIRST ROW ONLY
504000211001           END-EXEC.
504100211001
504200211001           MOVE SQLSTATE TO lc_sqlStates.
504300211001           IF NOT lncc_sqlSuccessful
504400211001              SET lnc_Err_75 TO TRUE
504500211001              MOVE lnc-ErrDesc75 TO lc_sqlErrShortDESCR
504600211001              PERFORM  SQL_Fail_Process
504700211001           END-IF.
504800211001      * ---------------------------------
504900211001       Load-Account-InvestmentsRecalc.
505000211001      * ---------------------------------
505100211001           MOVE li_processdate    TO li_Accprocessdate.
505200211001           MOVE FUNCTION ADD-DURATION(li_Accprocessdate DAYS 1)
505300211001                                  TO li_checkaccrualdate.
505400211001           MOVE li_processdate    TO pn_IsLeapDate.
505500211001           CALL "FXISLEAP" USING pn_IsLeapDate
505600211001                                 pc_IsLeapDateFlag.
505700211001           MOVE pc_IsLeapDateFlag TO lc_IsLeapDateFlag.
505800211001
505900211001           EXEC SQL
506000211001             INSERT INTO WKACCRINT
506100211001              SELECT COALESCE(ACCNTP.ACCOUNT_NO, 0),
506200211001                     COALESCE(INVP.INVESTMENT_CODE, " "),
506300211001                "0","0"
506400211001              FROM MFAACCNTP ACCNTP
506500211001              INNER JOIN MFAACCTYP ACCTYP
506600211001               ON ACCNTP.ACCOUNT_TYPE_CODE = ACCTYP.ACCOUNT_TYPE_CODE
506700211001              INNER JOIN MFAACCIVP ACCIVP
506800211001               ON ACCNTP.ACCOUNT_NO = ACCIVP.ACCOUNT_NO
506900211001              INNER JOIN MFAACMDP ACMDP
507000211001               ON ACCNTP.ACCOUNT_NO = ACMDP.ACCOUNT_NO
507100211001              INNER JOIN MFAINVP INVP
507200211001               ON ACCIVP.INVESTMENT_CODE = INVP.INVESTMENT_CODE
507300211001              INNER JOIN MFAPRTCDP RTCDP
507400211001               ON INVP.PRODUCT_TYPE_CODE = RTCDP.PRODUCT_TYPE_CODE
507500211001              AND RTCDP.PRODUCT_TYPE_RULE IN ("2","7")
507600211001              WHERE ACCTYP.ACCOUNT_TYPE_RULE = "1"
507700211001                AND ACCNTP.NOMINEE <> "Y"
507800211001                AND ACCNTP.ACCOUNT_STATUS = "A"
507900211001                AND SUBSTR(CHAR(ACMDP.EFFECTIV_DATE),1,4) <
508000211001                       :lc_CheckAccrualYYYY
508100211001                AND ACCNTP.ACCOUNT_NO = :li_AccountNum
508200211001           END-EXEC.
508300211001
508400211001           MOVE SQLSTATE TO lc_sqlStates
508500211001           IF NOT lncc_sqlSuccessful AND
508600211001              NOT lncc_sqlEnd
508700211001              SET lnc_Err_76 TO TRUE
508800211001              MOVE lnc-ErrDesc76 TO lc_sqlErrShortDESCR
508900211001              PERFORM SQL_Fail_Process
509000211001           END-IF.
509100211001      * ---------------------------------
509200211001       AnnvAcc-INT-Process.
509300211001      * ---------------------------------
509400211001           INITIALIZE li_MarketValue.
509500211001      *RFS186075 - Starts
509600211001           IF lc_FullYear = "Y"
509700211001           MOVE li_Tradedatewknp  TO ld_DateYYYYMMDD
509800211001      *RFS1106437 - Starts
509900211001                                     li_MktTradeDate
510000211001           MOVE FUNCTION ADD-DURATION (ld_DateYYYYMMDD DAYS 1)
510100211001                                  TO ld_DateCCYYMMDD
510200211001      *    MOVE ld_DateCCYYMMDD   TO li_MktTradeDate
510300211001      *RFS1106437 - Ends
510400211001           MOVE ld_DateCCYYMMDD   TO li_Tradedatewknp
510500211001           ELSE
510600211001      *RFS186075 - Ends
510700211001           MOVE li_Tradedatewknp  TO ld_DateYYYYMMDD
510800211001           MOVE FUNCTION SUBTRACT-DURATION (ld_DateYYYYMMDD DAYS 1)
510900211001                                  TO ld_DateCCYYMMDD
511000211001           MOVE ld_DateCCYYMMDD   TO li_MktTradeDate
511100211001      *RFS186075 - Starts
511200211001           END-IF
511300211001      *RFS186075 - Ends
511400211001
511500211001           PERFORM FindMKTValuexist.
511600211001
511700211001           IF li_CountMKT > 0
511800211001              PERFORM Get-Market-Value
511900211001           ELSE
512000211001           IF li_CountMKT = 0
512100211001               PERFORM CalcAcctLevelMKTValue
512200211001               COMPUTE li_MarketValue = li_RetrnAccrualInterest +
512300211001                                        li_acctmrktvalue1
512400211001               PERFORM Insert-TMPACTMKT
512500211001           END-IF
512600211001           END-IF.
512700211001           PERFORM Get-Latest-Account-ACB
512800211001           INITIALIZE MFAGIDIACP OF lc_MFAGIDIACP_rec
512900211001           COMPUTE ACB-AMT OF LC_MFAGIDIACP_REC = li_MarketValue
513000211001           COMPUTE ACCRUED-INTREST OF  LC_MFAGIDIACP_REC
513100211001      * RFS 186962 - begin
513200211001      * RFS1112629 - Starts
513300211001                 = li_MarketValue - li_LatestACBAmt
513400211001      *          = li_RetrnAccrualInterest
513500211001      * RFS1112629 - Ends
513600211001      * RFS 186962 - end
513700211001           IF  ACCRUED-INTREST OF  LC_MFAGIDIACP_REC < 0
513800211001               MOVE ZERO TO ACCRUED-INTREST OF  LC_MFAGIDIACP_REC
513900211001           END-IF
514000211001           MOVE li_Tradedatewknp  TO PROCESS-DATE OF LC_MFAGIDIACP_REC,
514100211001                                     TRADE-DATE   OF LC_MFAGIDIACP_REC.
514200211001      *RFS186960 - Starts
514300211001           IF lc_FullYear = "Y"  AND lc_Process-Mode = "RCALCACB"
514400211001              MOVE li_Tradedatewknp  TO ld_DateYYYYMMDD
514500211001              MOVE FUNCTION SUBTRACT-DURATION (ld_DateYYYYMMDD DAYS 1)
514600211001                            TO ld_DateCCYYMMDD
514700211001               MOVE ld_DateCCYYMMDD   TO li_Tradedatewknp
514800211001            MOVE li_Tradedatewknp TO PROCESS-DATE OF LC_MFAGIDIACP_REC
514900211001            MOVE li_Tradedatewknp TO TRADE-DATE OF LC_MFAGIDIACP_REC
515000211001           END-IF
515100211001      *RFS186960 - Ends
515200211001           MOVE li_EffectDateYYYY TO YEAR         OF LC_MFAGIDIACP_REC.
515300211001           MOVE li_Accountwknp    TO ACCOUNT-NO   OF LC_MFAGIDIACP_REC.
515400211001           PERFORM Insert-MFAGIDIACP-rec.
515500211001      * ---------------------------------
515600211001       Calculate-Accrual-interest1.
515700211001      * ---------------------------------
515800211001
515900211001             SET lb_eofAcc-AmtNo TO TRUE.
516000211001             EXEC SQL
516100211001               OPEN lcu_AccrualAmt
516200211001             END-EXEC.
516300211001
516400211001             MOVE SQLSTATE TO lc_sqlStates.
516500211001             IF NOT lncc_sqlSuccessful
516600211001                SET lnc_Err_79 TO TRUE
516700211001                MOVE lnc-ErrDesc79 TO lc_sqlErrShortDESCR
516800211001                PERFORM  SQL_Fail_Process
516900211001             END-IF.
517000211001             PERFORM Process-Accrual-amt UNTIL lb_eofAcc-Amtyes.
517100211001
517200211001             IF lb_eofAcc-Amtyes
517300211001               EXEC SQL
517400211001                 CLOSE lcu_AccrualAmt
517500211001               END-EXEC
517600211001               MOVE SQLSTATE TO lc_sqlStates
517700211001               IF NOT lncc_sqlSuccessful
517800211001                  SET lnc_Err_80 TO TRUE
517900211001                  MOVE lnc-ErrDesc80 TO lc_sqlErrShortDESCR
518000211001                  PERFORM  SQL_Fail_Process
518100211001               END-IF
518200211001             END-IF.
518300211001
518400211001      * ---------------------------------
518500211001       Insert-WKACCRINT-Rec.
518600211001      * ---------------------------------
518700211001
518800211001            EXEC SQL
518900211001             INSERT INTO WKACCRINT
519000211001             (ACCOUNT_NO,INVESTMENT_CODE,CERTIFICATE_ID_NO,
519100211001              AMOUNT)
519200211001             VALUES
519300211001             (:li_Accountwknp,:lc_Investmentcodewknp,
519400211001              :lnc_zero,:li_RetrnAccrualInt)
519500211001            END-EXEC
519600211001            MOVE SQLSTATE TO lc_sqlStates
519700211001            IF NOT lncc_sqlSuccessful AND
519800211001              NOT lncc_sqlEnd
519900211001              SET lnc_Err_78 TO TRUE
520000211001              MOVE lnc-ErrDesc78 TO lc_sqlErrShortDESCR
520100211001              PERFORM SQL_Fail_Process
520200211001            END-IF.
520300211001      * RFS1002626-Ends
520400211001      * ---------------------------------
520500211001       LoadWknp-Records.
520600211001      * ---------------------------------
520700211001           EXEC SQL
520800211001              SELECT
520900211001                     ACCOUNT_NO,
521000211001                     TRADE_DATE,
521100211001                     PROCESS_DATE,
521200211001                     TRANS_TYPE_CODE,
521300211001                     CONTR_REDEM_CODE,
521400211001                     GROSS_AMT,
521500211001                     NET_AMT,
521600211001                     INVESTMENT_CODE
521700211001                INTO
521800211001                     :li_Accountwknp,
521900211001                     :li_Tradedatewknp,
522000211001                     :li_Processdatewknp,
522100211001                     :lc_Transtypecodewknp,
522200211001                     :lc_Contredemwknp,
522300211001                     :li_Grossamtwknp,
522400211001                     :li_Netamtwknp,
522500211001                     :lc_Investmentcodewknp
522600211001                FROM MFATRNP
522700211001              WHERE PLACEMENT_DATE = :ld_Placement-Date
522800211001                AND TRANS_NO       = :li_TransNo
522900211001           END-EXEC.
523000211001           MOVE SQLSTATE TO lc_sqlStates.
523100211001           MOVE ld_Placement-Date TO li_Placementdatewknp.
523200211001           MOVE li_TransNo TO li_Transnowknp.
523300211001           IF NOT lncc_sqlSuccessful
523400211001              SET lnc_Err_37 TO TRUE
523500211001              MOVE lnc_ErrSelectloadtrnp   TO lc_sqlErrShortDESCR
523600211001              PERFORM  SQL_Fail_Process
523700211001           END-IF.
523800211001           EXEC SQL
523900211001              SELECT
524000211001134626*              ACMDP.EFFECTIVE_DATE,
524100211001134626               ACMDP.EFFECTIV_DATE,
524200211001                     ACCTYP.ACCOUNT_TYPE_CODE,
524300211001                     RTCDP.PRODUCT_TYPE_RULE
524400211001                INTO
524500211001                     :li_Effectivedatewknp,
524600211001                     :lc_Accttypecodewknp,
524700211001                     :lc_productTypeRulewknp
524800211001                FROM MFAACMDP ACMDP
524900211001                INNER JOIN MFAACCNTP ACCNTP
525000211001                 ON ACMDP.ACCOUNT_NO = ACCNTP.ACCOUNT_NO
525100211001                INNER JOIN MFAACCTYP ACCTYP
525200211001                 ON ACCTYP.ACCOUNT_TYPE_CODE = ACCNTP.ACCOUNT_TYPE_CODE
525300211001      * QC36643 START
525400211001      *         INNER JOIN MFATRNP TRNP
525500211001      *          ON TRNP.ACCOUNT_NO = ACCNTP.ACCOUNT_NO
525600211001      * QC36643 END
525700211001                INNER JOIN MFAACCIVP ACCIVP
525800211001      * QC36643 START
525900211001      *          ON TRNP.ACCOUNT_NO = ACCIVP.ACCOUNT_NO
526000211001      *          AND TRNP.INVESTMENT_CODE = ACCIVP.INVESTMENT_CODE
526100211001                 ON ACMDP.ACCOUNT_NO = ACCIVP.ACCOUNT_NO
526200211001      * QC36643 END
526300211001                INNER JOIN MFAINVP INVP
526400211001                 ON ACCIVP.INVESTMENT_CODE = INVP.INVESTMENT_CODE
526500211001                INNER JOIN MFAPRTCDP RTCDP
526600211001                 ON INVP.PRODUCT_TYPE_CODE = RTCDP.PRODUCT_TYPE_CODE
526700211001Q36643*       WHERE TRNP.ACCOUNT_NO = :li_Accountwknp
526800211001              WHERE ACMDP.ACCOUNT_NO = :li_Accountwknp
526900211001                AND INVP.INVESTMENT_CODE = :lc_Investmentcodewknp
527000211001Q36643*         FETCH FIRST ROW ONLY
527100211001           END-EXEC.
527200211001           MOVE SQLSTATE TO lc_sqlStates.
527300211001           IF NOT lncc_sqlSuccessful
527400211001              SET lnc_Err_58 TO TRUE
527500211001              MOVE lnc_ErrSelectloadWKNP   TO lc_sqlErrShortDESCR
527600211001              PERFORM  SQL_Fail_Process
527700211001           END-IF.
527800211001147036* ----------------------
527900211001  |    V2-Rec-Accrued-Interest.
528000211001  |   * ----------------------
528100211001  |               INITIALIZE lc_BK-Investment.
528200211001  |
528300211001  |               IF  lc_Producttyperule = " "
528400211001  |                    MOVE lc_productTypeRule-SWOTRO TO
528500211001  |                         lc_Producttyperule
528600211001  |               END-IF.
528700211001  |
528800211001  |               IF  lc_InvestmentNo  = " "
528900211001  |               INITIALIZE lc_BK-Invt-Code
529000211001  |               EXEC SQL
529100211001  |                 SELECT INVESTMENT_CODE
529200211001  |                  INTO  :lc_BK-Invt-Code
529300211001  |                  FROM  MFATRNP
529400211001  |                   WHERE PLACEMENT_DATE = :li_PlacementSWOTRO
529500211001  |                     AND TRANS_NO       = :li_transnoSWOTRO
529600211001  |                 FETCH FIRST ROW ONLY
529700211001  |               END-EXEC
529800211001  |                 MOVE lc_BK-Invt-Code TO lc_BK-Investment
529900211001  |               ELSE
530000211001  |                 MOVE lc_InvestmentNo TO lc_BK-Investment
530100211001  |               END-IF.
530200211001  |
530300211001  |               IF  li_Gidicount > 0
530400211001  |               AND lc_Producttyperule = "2"
530500211001  |
530600211001  |              INITIALIZE li_BackAccrualInterest
530700211001  |
530800211001  |              MOVE lnc_V2           TO PASS-MODE
530900211001  |              MOVE li_reeffectdate4 TO li_BKTradedatewknp
531000211001  |              MOVE ZEROES           TO PASS-CERTIFICATE-ID-NO
531100211001  |              MOVE li_AccountNo          TO PASS-ACCOUNT-NO
531200211001  |              MOVE lc_BK-Investment      TO PASS-INVESTMENT-CODE
531300211001  |              MOVE li_BKTradedatewknp    TO PASS-END-DATE-OPTION
531400211001  |              MOVE ZEROS                 TO PASS-GROSS-AMT
531500211001  |              CALL "INTCLC" USING    INTCLC-PARMS
531600211001  |              COMPUTE li_BackAccrualInterest  =
531700211001  |                      li_BackAccrualInterest + RETN-ACCRUAL-AMT
531800211001  |
531900211001  |                  COMPUTE li_reacbAmt =
532000211001  |                  li_LatestACBAmt + li_BackAccrualInterest
532100211001  |                  COMPUTE li_PrevACB = li_reacbAmt
532200211001  |                  MOVE li_BackAccrualInterest TO
532300211001  |                  li_Accrint
532400211001147036            END-IF.
532500211001      *RFS1106437 - Starts
532600211001      * ---------------------------------
532700211001       Get-Last-Accrual-year.
532800211001      * ---------------------------------
532900211001              INITIALIZE ld_LastAccrualYear.
533000211001              EXEC SQL
533100211001      * RFS 1116416 - begin
533200211001      *         SELECT COALESCE(GIDIACP.YEAR,
533300211001      *                SUBSTR(ACMDP.EFFECTIV_DATE,1,4), 0)
533400211001                SELECT
533500211001                 CASE WHEN :li_AccAttEffecDate > 0
533600211001                     THEN SUBSTR(:li_AccAttEffecDate,1,4)
533700211001                 ELSE COALESCE(GIDIACP.YEAR,
533800211001                       SUBSTR(ACMDP.EFFECTIV_DATE,1,4), 0) END
533900211001      * RFS 1116416 - end
534000211001                       INTO   :ld_LastAccrualYear
534100211001                 FROM   MFAACMDP ACMDP
534200211001                 LEFT OUTER JOIN MFAGIDIACP GIDIACP ON
534300211001                      GIDIACP.ACCOUNT_NO = ACMDP.ACCOUNT_NO
534400211001                 AND  GIDIACP.PLACEMENT_DATE      = 0
534500211001                 AND  GIDIACP.TRANS_NO            = 0
534600211001                 AND  GIDIACP.CAPITAL_GAIN_AMOUNT = 0
534700211001                 AND  GIDIACP.DEPOSIT_AMT         = 0
534800211001
534900211001                 WHERE ACMDP.ACCOUNT_NO           = :li_AccountNum
535000211001                 AND   ACMDP.EFFECTIV_DATE <> 0
535100211001                 ORDER BY GIDIACP.PROCESS_DATE DESC
535200211001                 FETCH FIRST ROW ONLY
535300211001              END-EXEC.
535400211001              MOVE SQLSTATE TO lc_sqlStates.
535500211001              EVALUATE TRUE
535600211001                WHEN lncc_sqlSuccessful
535700211001                MOVE ld_LastAccrualYear  TO  li_PrevEffectDateYYYY
535800211001                WHEN OTHER
535900211001                     CONTINUE
536000211001              END-EVALUATE.
536100211001      *RFS1106437 - Ends
536200211001      * ---------------------------------
536300211001       End-Job.
536400211001      * ---------------------------------
536500211001
536600211001           EXEC SQL
536700211001              CLOSE lcu_mfatrnp
536800211001           END-EXEC.
536900211001
537000211001           GOBACK.
537100211001
537200211001      * _________________________________
537300211001       SQL_Fail_Process.
537400211001      * _________________________________
537500211001           PERFORM Dsp-Error.
53760021100136643 *    PERFORM Force-Msgw.
537700211001
537800211001           COPY CPYSQLRTN.
