000100210224      * %ATTR DBGVIEW(*SOURCE) CLOSQLCSR(*ENDACTGRP)
000200200605       IDENTIFICATION DIVISION.
000300210603       PROGRAM-ID.    SACDSCCLC1.
000400200918       AUTHOR.        REKHA S.
000500210126       DATE-WRITTEN.  November 2012.
000600210807       DATE-COMPILED.
000700200624      *****************************************************************
000800210706      *PROGRAMMER  *DATE    *RFS  *COMMENTS                           *
000900200624      *****************************************************************
001000210316      * Rekha S    ¦20121120¦ RFS108683- New program                  *
001100130111      * Emmmanuel Y¦20120111¦ Add SOA DSC Inquiry Enhancement RFS112770
001200180614      * Callista N |20130510| RFS108944 - Recompile.
001300130514      * Sherene N  |20130514| RFS121657 - Recompile for MFAFINSCP.
001400130522      * Rohan P    |20130522| RFS121127 - Recompile for MFAATPFP.
001500170814      * Emmmanuel Y¦20130531¦ Added AsOfDate in the result set  QC32010
001600130726      * Anitha T.  |20130725| RFS 125210- Recompile.
001700131002      * Waldi R.   |20131002| RFS 127383- Recompile.
001800131009      * Waldi R.   |20131008| RFS 129169- Recompile.
001900131023      * Michael Fan|20131022| RFS 129525- Recompile.
002000131129      * Sairam     |20130913| RFS 127038- Recompile.
002100131129      * Bhanu D    |20131122| RFS128341 - Recompile for MFAACCASP
002200131129      * Thilaga K  |20130828| RFS127129- Recompile.
002300141117      * Vinsfy J   |20131106| RFS 125258- Added new parameter for
002400141117      *            |        | the module SETDSCINS.
002500140115      * Michael Fan|20130115| RFS132956 - Recompile due to changes on
002600140115      *            |        | copy book CPTRNPST1.
002700140515      * Thilaga    |20140515| RFS132733-Recompile.
002800140516      * Thilaga    * 2014/05/15   * RFS133150 - Recompile
002900140704      * Sairam DC  |20140317| RFS134768 - Recompile for MFADMATLGP
003000140518      * Emmanuel Y |20140319| RFS135101 - Fix issue due to V7R1
003100140518      * Arthy K    |20140312| RFS127707 - To check standard System
003200140518      *            |        |             access from MFATRXACP
003300141117      * Thilaga K  |20140507| RFS134936 - Recompile for MFAACCNNP
003400141117      * Sushmita J |20140401|  * RFS134626 - Recompile for MFAACMDP.
003500140709      * Tamilselvi * 2014/05/09   * RFS136015- Recompile for MFAACMDP.
003600141117      * Arthy K    |20140512| RFS134771 - Recompile
003700140911      * Kamal T    |20140617| RFS118472 - Recompile
003800141117      * Vinsfy J   |20140617| RFS136634 - Recompile
003900141117      * Sairam     |20140623| RFS136634 - Recompile
004000140916      * Sairam     |20140623| RFS137217 - Recompile
004100140915      * Nagamnai S * 2014/08/13   * RFS139007 - Recompile for CPGLWBRULE
004200141128      * Banupriya V* 2014/10/14   * RFS141507 - Recompile for MFATRNCPP
004300150512      * Thilaga K  |20150512| RFS145136 - Recompile for MFAACCCSP
004400150814      *MUTHULAKSHMI* 2015/04/08   * RFS145157  - RECOMPILE
004500150728      * Michael Fan|20150723| RFS149620 - Recompile due to CPTRNPST1 change
004600150923      * Pooja K    |20150619| RFS 148347 - Redemption calculator
004700150923      *            |        | requires prov tax be for non-PQ investors
004800160302      * Aarthi M   * 2016/02/02   * RFS 155635 - Recompile MFAINVMDP
004900170302      * Divya  V   * 2017/03/01 * RFS166545 - Recompile for MFATRTXRP
005000170609      * Muthukumar * 2017/06/01   * RFS171012 - Recompile
005100170723      * Suresh G.  * 2017/07/21   * RFS171752 - Recompile of MFAACCCSP
005200170906      * Muthukumar * 2017/09/06   * RFS168133 - Recompile
005300180111      * Suresh G.  * 2017/10/07   * RFS169270 - Recompile
005400180726      * Suresh G.  * 2018/01/25   * RFS177527 - Recompile
005500181205      * Suresh G.  * 2018/07/26   * RFS177665 - Recompile
005600190221      * Kavya K    * 2019/02/21   * RFS181057 - Recompile for MFAINVMDP
005700190226      * Sachin S   * 2019/02/26   * RFS181857 - Recompile
005800190329      * Mayilsamy D* 2019/03/19   * RFS182913 - Recompile
005900190618      * Mayilsamy D* 2019/06/04   * RFS1014578- To Fix RFS181857
006000190924      *            *              * DSC charges on the cash distribution
006100190618      *            *              * pay out - Recompile only
006200190923      * Mayilsamy D* 2019/08/20   * RFS183140- Recompile
006300191016      * Mayilsamy D* 2019/09/26   * RFS184858- Recompile
006400191106      * Mayilsamy D* 2019/10/14   * RFS1016152-Recompile
006500191121      * Priya N    * 2019/11/15   * RFS185037 - Recompile of MFABNKACP
006600200211      * Chaya SP   * 2020/02/11   * RFS185066 - Recompile for MFAGICDP
006700200304      * Arthy K    * 2020/03/03   * RFS185965- Recompile
006800200330      * Poojasri M * 2020/02/19   * RFS1021595-Recompile
006900200609      * Suresh P   * 2020/03/03   * RFS1020345 - Recompile
007000200619      * Kirthigaa S*  2020/04/17  * RFS186069 - Recompile for MFAACMDP *
007100200704      * Mayilsamy D* 2020/07/04   * RFS186092 - Recompile
007200200706      * Surendran C* 2020/07/04   * RFS184676 - Recompile
007300200824      * Vignesh    * 2020/06/24   * RFS183812 - Recompile of MFAFINSCP
007400201210      * Mayilsamy D* 2020/08/26   * RFS185892 - Recompile for TRNPST
007500201223      * Ewa K.     * 2020/10/15   * RFS185174 Recompile for CPWSYSPARM.
007600201210      * Kavya K    * 2020/10/19   * RFS186497 - Recompile for MFAACMDP
007700210130      * Mayilsamy D* 2020/11/03   * RFS180707 - Recompile for TRNPST
007800210331      * Surendran C* 2020/07/04   * RFS1027333- Recompile
007900210211      * Mayilsamy D* 2021/02/18   * RFS1111244 - Recompile for TRNPST
008000210217      * Kavya K    * 2021/02/11   * RFS186088 - Recompile for MFAINVMDP
008100200511      * Kavin      * 2021/02/17   * RFS186290 - Recompile only
008200210408      * Bagathsingh* 2021/04/08   * RFS1110228 - Recompile
008300210704      * Mayilsamy D* 2021/05/18   * RFS186888 - Recompile for TRNPST
008400210806      * Mayilsamy D* 2021/07/15   * RFS1117913 -Recompile for TRNPST
008500210806      * JasonJoshua* 2021/06/16   * RFS1113955 - Recompile TRNPST
008600210713      * Ewa K.     * 2021/06/11   * RFS186019 - Recompile for TRNPST
008700210804      * Mayilsamy D* 2021/08/04   * RFS1118005 -Recompile for TRNPST
008701210914      * Lev O      * 2021/08/23   * RFS1118263 -Recompile for TRNPST
008702210914      * Kavin K    * 2021/08/09   * RFS187471 - Recompile for MFAGDTHVP
008703210921      * Ewa K.     * 2021/09/11   * RFS186588 - Recompile for TRNPST
008704211004      * MuthukumarS* 2021/10/04   * RFS1115611 - Recompile for TRNPST
008900191016      *********************** *Last* ***********************************
009000061227       ENVIRONMENT DIVISION.
009100191016       CONFIGURATION SECTION.
009200070205       SPECIAL-NAMES.
009300070126             LINKAGE TYPE IS PROCEDURE FOR "TRNPST"
009400061215             LINKAGE TYPE IS PROCEDURE FOR "FXDSCCRTT"
009500070125             LINKAGE TYPE IS PROCEDURE FOR "FXSPCMAUT"
009600070125             LINKAGE TYPE IS PROCEDURE FOR "FXBASCUR"
009700070126             LINKAGE TYPE IS PROCEDURE FOR "FXMESSAGE"
009800070129             LINKAGE TYPE IS PROCEDURE FOR "FXGETLUP"
009900070201             LINKAGE TYPE IS PROCEDURE FOR "FXINVRULE"
010000070201             LINKAGE TYPE IS PROCEDURE FOR "FXSCEDTAL1"
010100070226             LINKAGE TYPE IS PROCEDURE FOR "FXDSCIVRP"
010200070306             LINKAGE TYPE IS PROCEDURE FOR "FXACRRULE"
010300080609             LINKAGE TYPE IS PROCEDURE FOR "VALDATEFMT"
010400080603             LINKAGE TYPE IS PROCEDURE FOR "FXCTRRULE"
010500080603             LINKAGE TYPE IS PROCEDURE FOR "SETCALENV3"
010600121120             LINKAGE TYPE IS PROCEDURE FOR "SETDSCDEL"
010700070108             DATA-AREA IS lc_dtaaraMfaobjects
010800080611             LOCAL-DATA IS lc_local.
010900080611       INPUT-OUTPUT SECTION.
011000070123       FILE-CONTROL.
011100080611       DATA DIVISION.
011200061227       FILE SECTION.
011300061228       WORKING-STORAGE SECTION.
011400061228           EXEC SQL
011500061228             INCLUDE SQLCA
011600130108           END-EXEC.
011700130102       01  lc_MfadsccivpRec               PIC X(91).
011800130108       01  lc_DSC-Calc-Investment-Rec.
011900130108         03  li_DSC-Account-No            PIC S9(9).
012000130108         03  lc_DSC-Investment-Code       PIC X(5).
012100130108         03  li_DSC-Trade-Date            PIC S9(8) COMP-3.
012200130108         03  lc_DSC-Contr-Redem-Cde       PIC X(6).
012300130108         03  lc_DSC-Split-Option-Code     PIC X(1).
012400130108         03  lc_DSC-Assignment-Certificate
012500130108                                          PIC X(1).
012600130108         03  li_DSC-Certificate-Id-No     PIC 9(10).
012700130108         03  ln_DSC-Gross-Amt             PIC S9(11)V9(02) COMP-3.
012800130108         03  ln_DSC-Net-Amt               PIC S9(11)V9(02) COMP-3.
012900130108         03  ln_DSC-Unit-Amt              PIC S9(10)V9(03) COMP-3.
013000130108         03  ln_DSC-Federal-Tax-Amt       PIC S9(11)V9(02) COMP-3.
013100130108         03  ln_DSC-Provincial-Tax-Amt    PIC S9(11)V9(02) COMP-3.
013200130108         03  ln_DSC-Amt                   PIC S9(11)V9(02) COMP-3.
013300130108         03  ln_DSC-Other-Deduction-Amt   PIC S9(11)V9(02) COMP-3.
013400130108         03  lc_DSC-Rejection-Code        PIC X(3).
013500130110         03  li_DSC-SeqNo                 PIC 9(3) COMP-3.
013600130110
013700130110       01  lc_FilesOverridenFlag          PIC X(01).
013800130110         88  lb_FilesNotOverriden    VALUE SPACES.
013900061229         88  lb_FilesOverriden       VALUE "Y".
014000130108      * Flag fo initial logic validation
014100130108       01  lb_initialFlag                 PIC 1.
014200130108         88  lb_initialOK            VALUE B"0".
014300190126         88  lb_initialFail          VALUE B"1".
014400070320
014500130108      * Flag fo initial logic validation
014600130108       01  lb_moreFundsFlag               PIC 1.
014700130108         88  lb_noMoreFunds          VALUE B"0".
014800070320         88  lb_isMoreFunds          VALUE B"1".
014900130108
015000130108       01  lb_loopFlag                    PIC 1.
015100130108         88  lb_loopStart            VALUE B"0".
015200070206         88  lb_loopEnd              VALUE B"1".
015300130108
015400130108       01  lc_awdQcWhTax                  PIC X(1)
015500130108                                     VALUE SPACES.
015600130108         88  lb_awdQcWhTaxYes        VALUE "Y".
015700070207         88  lb_awdQcWhTaxNo         VALUE "N".
015800130108
015900130108       01  lb_allInvestmentsLoadedFlag    PIC 1
016000130108                                     VALUE B"0".
016100130108         88  lb_allInvestmentsInit   VALUE B"0".
016200070130         88  lb_allInvestmentsLoaded VALUE B"1".
016300130108
016400130108       01  lc_DataInitializedFlag         PIC X(01).
016500130108         88  lnc_DataNotInitialized  VALUE SPACES.
016600061215         88  lnc_DataInitialized     VALUE "Y".
016700130110
016800130110       01  lc_CompanyCode                 PIC X(03).
016900130110       01  lc_String80                    PIC X(80).
017000130110       01  lc_ErrCode2                    PIC X(02).
017100091013         88  lnc_ErrCode2Ok          VALUE SPACES.
017200130108
017300130108       01  lc_FromAcct                    PIC X(9)
017400130108                                     VALUE "000000000".
017500130108       01  lc_ToAcct                      PIC X(9)
017600070102                                     VALUE "999999999".
017700070213
017800130108      * Some numeric data from linkage - to be used in the program
017900130108       01  lc_numFromLinkage.
018000130108         03  li_Pointer                   PIC S9(09)
018100130108                                     VALUE 0.
018200130108         03  li_IvrAcctNo                 PIC S9(09)
018300130108                                     VALUE 0.
018400130108         03  ln_FedTax                    PIC S9(11)V9(02)
018500130108                                     VALUE 0.
018600130108         03  ln_ProvTax                   PIC S9(11)V9(02)
018700130108                                     VALUE 0.
018800130108         03  ln_AcctGrossAmt              PIC S9(11)V9(02)
018900130108                                     VALUE 0.
019000130108         03  ln_AcctNetAmt                PIC S9(11)V9(02)
019100070213                                     VALUE 0.
019200130110
019300140518       01  li_LastProcessDate             PIC S9(09) COMP-3.
019400130108127707 01  lc_LanguageCode                PIC  X(01) VALUE SPACE.
019500130108       01  lnc_cdscModeSACDSC             PIC X(10)
019600130108                                     VALUE "SACDSC".
019700130108       01  lnc_I                          PIC X(01)
019800130108                                     VALUE "I".
019900130108       01  lnc_C                          PIC X(01)
020000130108                                     VALUE "C".
020100130108       01  lnc_D                          PIC X(01)
020200070201                                     VALUE "D".
020300130108
020400130110       01  lc_ivrData.
020500130108         03  lc_LockedIn                  PIC X(01).
020600130110           88  lnc_lockedInYes       VALUE "Y".
020700130108         03  lc_StopActivity              PIC X(01).
020800130110           88  lnc_stopActivityYes   VALUE "Y".
020900130108         03  lc_StopRedem                 PIC X(01).
021000070201           88  lnc_stopRedemYes      VALUE "Y".
021100130108
021200130108         03  li_InvestorNo                PIC S9(09).
021300130108         03  lc_ProvinceCode              PIC X(03).
021400070201           88  lnc_ProvinceCodeQC    VALUE "QC".
021500130108
021600130110         03  lc_CountryCode               PIC X(03).
021700130110         03  lc_AccountTypeCode           PIC X(05).
021800080609         03  lc_AccountTypeRule           PIC X(01).
021900130110      * Registred accounts
022000130110           88  lnc_AccountTypeRuleReg
022100130110                                     VALUES "2" "3"
022200130110                                            "4" "5".
022300130110           88  lnc_AccountTypeRIF    VALUES "3".
022400080609           88  lnc_AccountTypeLIF    VALUES "5".
022500130108      * Contribution rules for account level withholding tax
022600130108         03  lc_ContrRedemCodeRule        PIC X(02).
022700130108           88  lnc_ContrRedemCodeRuleAlw
022800130110                                     VALUES "4" "26".
022900070201         03  lc_ContrRedemCode            PIC X(06).
023000130108
023100130110       01  lnc_ErrorCodes.
023200130108         03  lnc_ErrAccLvlDsc             PIC X(05)
023300130110                                     VALUE "-1".
023400130108         03  lnc_Successful               PIC X(05)
023500130108                                     VALUE "00000".
023600130108         03  lnc_NoAccountNumber          PIC X(05)
023700130108                                     VALUE "92450".
023800130108         03  lnc_ErrAmounts               PIC X(05)
023900130108                                     VALUE "92451".
024000130108         03  lnc_NotEnabled               PIC X(05)
024100070129                                     VALUE "92452".
024200130110      * One or more investments rejected.
024300130108         03  lc_ErrAccLevel               PIC X(05)
024400130108                                     VALUE "92454".
024500130108         03  lc_oneAcctGrossOrNet         PIC X(05)
024600130108                                     VALUE "92453".
024700130108         03  lnc_NoInvWithCurrency        PIC X(05)
024800070201                                     VALUE "92455".
024900130108
025000130108         03  lnc_dupInvestments           PIC X(05)
025100130108                                     VALUE "92456".
025200130108         03  lnc_errReplaceAdd            PIC X(05)
025300130108                                     VALUE "92457".
025400130108         03  lnc_accContrRedemCode        PIC X(05)
025500130108                                     VALUE "92458".
025600130108         03  lnc_fundNotExists            PIC X(05)
025700130108                                     VALUE "92459".
025800130108         03  lnc_errTaxSplitFedTaxReq     PIC X(05)
025900130108                                     VALUE "92460".
026000130108         03  lnc_errAddReplFedTaxReq      PIC X(05)
026100130108                                     VALUE "92461".
026200130108         03  lnc_errTaxSplit              PIC X(05)
026300130108                                     VALUE "92462".
026400130108         03  lnc_errTradeDate             PIC X(05)
026500070201                                     VALUE "92463".
026600130108
026700130108         03  lnc_errTaxSplitProvTaxReq    PIC X(05)
026800130108                                     VALUE "92464".
026900130108         03  lnc_errAddReplProvTaxReq     PIC X(05)
027000070202                                     VALUE "92465".
027100130108
027200130108         03  lnc_errStopRedem             PIC X(05)
027300130108                                     VALUE "92466".
027400130108         03  lnc_errStopActive            PIC X(05)
027500130108                                     VALUE "92467".
027600130108         03  lnc_shouldHaveAssigned       PIC X(05)
027700130108                                     VALUE "92468".
027800130108         03  lnc_oneResidual              PIC X(05)
027900130108                                     VALUE "92469".
028000130108         03  lnc_lastResidual             PIC X(05)
028100130108                                     VALUE "92470".
028200130108         03  lnc_grossOrNetResidual       PIC X(05)
028300130108                                     VALUE "92471".
028400130108         03  lnc_notValidAccount          PIC X(05)
028500130108                                     VALUE "92472".
028600130108         03  lnc_grossExceedsResidual     PIC X(05)
028700130108                                     VALUE "92473".
028800130108         03  lnc_netExceedsResidual       PIC X(05)
028900070202                                     VALUE "92474".
029000130108
029100130108         03  lnc_notAllowWithoutWTax      PIC X(05)
029200130108                                     VALUE "92475".
029300130108         03  lnc_enterProvOrFedTax        PIC X(05)
029400130108                                     VALUE "92476".
029500130108         03  lnc_totalTaxPercent          PIC X(05)
029600130108                                     VALUE "92477".
029700130108         03  lnc_NoInvestments            PIC X(05)
029800130108                                     VALUE "92478".
029900130108         03  lnc_withholdingTax           PIC X(05)
030000070129                                     VALUE "92479".
030100130108
030200130108       01  lc_retnAccData.
030300130108         03  lc_retnAccLevelErr           PIC X(08)
030400130108                                     VALUE SPACES.
030500130108         03  lc_retnAccMessageDesc        PIC X(80)
030600070202                                     VALUE SPACES.
030700130108
030800130108       01  lc_MessageDesc                 PIC X(80)
030900130110                                     VALUE SPACES.
031000130108
031100130110       01  lc_toReportData.
031200130110         03  lc_FundToReport              PIC X(05).
031300070202         03  lc_DateToReport              PIC X(08).
031400070202
031500130110      * Set default to successful
031600130108       01  lc_BusinessError               PIC X(05).
031700130108       01  lnc_SuccessBusinessError       PIC X(05)
031800070125                                     VALUE "00000".
031900130108
032000130108       01  li_numInvWithCurrency          PIC S9(03) COMP-3
032100130110                                     VALUE 0.
032200130110
032300130110       01  lc_WithholdTaxExistsFlag       PIC X(01).
032400130110         88  lnc_WithholdTaxNotExists
032500130110                                     VALUE SPACES.
032600130110         88  lnc_WithholdTaxExists   VALUE "Y".
032700130110       01  ln_ConvertDolPerFed            PIC S9(09)V9(2) COMP-3.
032800130108       01  ln_ConvertDolPerPro            PIC S9(09)V9(2) COMP-3.
032900130108       01  lcu_AwdRecord.
033000130108         03  lc_AwdFreq                   PIC X(2).
033100080611         03  lc_AwdStatus                 PIC X(2).
033200130108
033300130108       01  ln_AwdAmount                   PIC S9(11)V9(4) COMP-3
033400080611                                     VALUE 0.
033500130110
033600130110       01  lc_FileStatus                  PIC X(02).
033700130108       01  li_NumTaxLoops                 PIC S9(03) COMP-3
033800130110                                     VALUE 0.
033900130108       01  li_CurrTaxLoop                 PIC S9(03) COMP-3
034000130110                                     VALUE 0.
034100130108       01  ln_CalcProvTax                 PIC S9(11)V9(2) COMP-3
034200130110                                     VALUE 0.
034300130108       01  ln_CalcFedTax                  PIC S9(11)V9(2) COMP-3
034400130110                                     VALUE 0.
034500130108       01  ln_TaxableAmt                  PIC S9(11)V9(2) COMP-3
034600080611                                     VALUE 0.
034700130108
034800130108       01  ln_FxtaxprpProvTaxRate         PIC S9(11)V9(2) COMP-3
034900080610                                     VALUE 0.
035000130108      * Flag for the registred accounts
035100130108       01  lc_RegAccFlag                  PIC X(01).
035200130108         88  lnc_RegAccYes           VALUE "Y".
035300080603         88  lnc_RegAccNo            VALUE "N".
035400130110      * Error code returned from SETCALENV3 program
035500130110       01  lc_TmpErrCode                  PIC X(02).
035600080603       01  lc_ErrCodeSetCalEnv            PIC X(02).
035700130110      * Flag to indicate if new files have to be created
035800130110       01  lc_CrtAccLvlFilesFlag          PIC X(01).
035900130110         88  lnc_CrtAccLvlFiles      VALUE "Y".
036000080602         88  lnc_CrtAccLvlFilesNo    VALUE SPACES.
036100130110
036200130110       01  li_GenPlacementDatePacked      PIC S9(09) COMP-3.
036300130108       01  li_GenPlacementDate            PIC 9(09)
036400080529                                     VALUE 0.
036500130110      * Trade date to be used to calculate Age in years
036600130108       01  li_CdscTradeDate               PIC S9(08)
036700130110                                     VALUE 0.
036800130110       01  lc_CdscTradeDateRed1 REDEFINES li_cdscTradeDate.
036900130110         03  lc_CdscTradeDateCCYY         PIC X(04).
037000130110         03  lc_CdscTradeDateMM           PIC X(02).
037100130110         03  lc_CdscTradeDateDD           PIC X(02).
037200130110       01  lc_CdscTradeDateRed2 REDEFINES li_cdscTradeDate.
037300130110         03  lc_CdscTradeDateCCYY2        PIC X(04).
037400130110         03  lc_CdscTradeDateMM2          PIC X(02).
037500130110         03  lc_CdscTradeDateDD2          PIC X(02).
037600130108       01  lnc_MaxDeductions              PIC S9(03) COMP-3
037700130110                                     VALUE 10.
037800130108       01  li_CurrNumInvs                 PIC S9(03) COMP-3
037900130110                                     VALUE 0.
038000130108       01  li_Cnt                         PIC S9(03) COMP-3
038100130110                                     VALUE 0.
038200130108       01  ln_StartNum                    PIC S9(03) COMP-3
038300130110                                     VALUE 0.
038400130108       01  ln_TmpSqlCounter               PIC S9(09) COMP-3
038500130110                                     VALUE 0.
038600130108       01  ln_TmpCnt                      PIC S9(03) COMP-3
038700130110                                     VALUE 0.
038800130108       01  ln_C1                          PIC S9(03) COMP-3
038900130110                                     VALUE 0.
039000130108       01  ln_DedCnt                      PIC S9(03) COMP-3
039100130110                                     VALUE 0.
039200130110       01  lc_Residual.
039300130108         03  ln_NumResidual               PIC S9(03) COMP-3
039400130110                                     VALUE 0.
039500130108         03  ln_LastResidual              PIC S9(03) COMP-3
039600070125                                     VALUE 0.
039700130110
039800070102       01  lc_BaseCurrency                PIC X(03).
039900130108
040000130108       01  lnc_SplitOptionCodeAll         PIC X(01)
040100130108                                     VALUE "A".
040200130108       01  lnc_IncludeAssignedUnits       PIC X(01)
040300070103                                     VALUE "Y".
040400130108
040500130108       01  lc_constants.
040600130108         03  lnc_CAL                      PIC X(3)
040700130110                                     VALUE "CAL".
040800130108         03  lnc_GenYearsToAdd            PIC 9(03)
040900130110                                     VALUE 100.
041000130108         03  lnc_Crtfil                   PIC X(06)
041100130108                                     VALUE "CRTFIL".
041200130108         03  lnc_ovrfil                   PIC X(06)
041300130108                                     VALUE "OVRFIL".
041400130108         03  lnc_dltovr                   PIC X(06)
041500130108                                     VALUE "DLTOVR".
041600130108         03  lnc_deldta                   PIC X(06)
041700130108                                     VALUE "DELDTA".
041800130108         03  lnc_insdta                   PIC X(06)
041900080610                                     VALUE "INSDTA".
042000130108      * It is used for trans additional tax:
042100130108         03  lnc_crtfi1                   PIC X(06)
042200130108                                     VALUE "CRTFI1".
042300130108         03  lnc_ovrfi1                   PIC X(06)
042400130108                                     VALUE "OVRFI1".
042500130108         03  lnc_dltov1                   PIC X(06)
042600130108                                     VALUE "DLTOV1".
042700130108         03  lnc_deldt1                   PIC X(06)
042800130108                                     VALUE "DELDT1".
042900130108         03  lnc_colon                    PIC X(01)
043000130108                                     VALUE ":".
043100130108         03  lnc_1Space                   PIC X(01)
043200130108                                     VALUE SPACE.
043300130108         03  lnc_2Spaces                  PIC X(02)
043400130108                                     VALUE SPACES.
043500130108         03  lnc_3Spaces                  PIC X(03)
043600130108                                     VALUE SPACES.
043700130108         03  lnc_tradeDateZero            PIC S9(09)
043800130108                                     VALUE 0.
043900130108         03  lnc_defaultRowCountN         PIC S9(09)
044000130108                                     VALUE 999999999.
044100130108         03  lnc_defaultRowCountX       REDEFINES lnc_defaultRowCountN
044200130108                                          PIC X(09).
044300130108
044400130108         03  lnc_UnitZero                 PIC S9(10)V9(03)
044500130108                                     VALUE 0.
044600130108         03  lnc_AmtZero                  PIC S9(11)V9(02)
044700130108                                     VALUE 0.
044800130108         03  lnc_CertNoSpaces             PIC X(11)
044900130108                                     VALUE SPACES.
045000130108         03  lnc_CertZero                 PIC S9(10)
045100130108                                     VALUE 0.
045200130108         03  lnc_seqNoZero                PIC S9(03) COMP-3
045300070202                                     VALUE 0.
045400130108
045500130108         03  lnc_maxPercent               PIC S9(03) COMP-3
045600130108                                     VALUE 100.
045700130108         03  lnc_maxNumInvs               PIC S9(03) COMP-3
045800130108                                     VALUE 100.
045900130108         03  lnc_maxDedudtions            PIC S9(03) COMP-3
046000130108                                     VALUE 10.
046100130108         03  lc_spcModules.
046200130108           05  lnc_ACLVDSC                PIC X(10)
046300130108                                     VALUE "ACLVDSC".
046400130108           05  lnc_ACLVFRD                PIC X(10)
046500130108                                     VALUE "ACLVFRD".
046600130108           05  lnc_ERFEE                  PIC X(10)
046700130108                                     VALUE "ERFEE".
046800130108         03  lc_accWithholdingTax.
046900130108           05  lnc_scrCodeTRNCDSC         PIC X(08)
047000130108                                     VALUE "TRNCDSC".
047100130108           05  lnc_editCodeACWTAX         PIC X(06)
047200130108                                     VALUE "ACWTAX".
047300130108           05  lnc_editLevelCodeT         PIC X(01)
047400070201                                     VALUE "T".
047500141117
047600141117125258   03  ln_TradeDate             PIC S9(08) COMP-3 VALUE 0.
047700130108125258   03  ln_CalDate               PIC S9(08) COMP-3 VALUE 0.
047800130108         03  lnc_Y                    PIC X(01)
047900130108                                     VALUE "Y".
048000130108         03  lnc_A                    PIC X(01)
048100130108                                     VALUE "A".
048200130108         03  lnc_splitOptDollar       PIC X(01)
048300130108                                     VALUE "$".
048400130108         03  lnc_splitOptUnit         PIC X(01)
048500130108                                     VALUE "U".
048600130108         03  lnc_percent              PIC X(01)
048700130108                                     VALUE "%".
048800130108         03  lnc_CDSCCalcSOA          PIC X(01)
048900130108                                     VALUE "2".
049000130108         03  lnc_CDSCCalcSOAUpd       PIC X(01)
049100130108                                     VALUE "3".
049200130108         03  lnc_R                    PIC X(01)
049300130108                                     VALUE "R".
049400130108         03  lnc_Gross                PIC X(01)
049500130108                                     VALUE "G".
049600130108         03  lnc_Net                  PIC X(01)
049700130108                                     VALUE "N".
049800130108         03  lnc_CAD                  PIC X(03)
049900130108                                     VALUE "CAD".
050000130108         03  lnc_SEL                  PIC X(03)
050100130108                                     VALUE "SEL".
050200130108         03  lnc_Residual             PIC X(01)
050300130108                                     VALUE "R".
050400130108         03  lnc_elemDelim            PIC X(01)
050500130108                                     VALUE ",".
050600130108         03  lnc_rowDelim             PIC X(01)
050700130108                                     VALUE ";".
050800130108         03  lnc_maxResidual          PIC S9(03) COMP-3
050900130108                                     VALUE 1.
051000130108         03  lnc_space10              PIC X(10)
051100130108                                     VALUE SPACES.
051200130108         03  lnc_space25              PIC X(25)
051300130108                                     VALUE SPACES.
051400130108         03  lnc_space35              PIC X(35)
051500130108                                     VALUE SPACES.
051600070112         03  lc_fileNames.
051700130108      * Deduction list DB Table name
051800130108           05  lnc_dedList            PIC X(10)
051900130108                                     VALUE "DEDLIST".
052000130108           05  lnc_MFADSCCALP         PIC X(10)
052100130108                                     VALUE "MFADSCCALP".
052200130108           05  lnc_MFADSCCA2P         PIC X(10)
052300130108                                     VALUE "MFADSCCA2P".
052400130108           05  lnc_MFADSCCIVP         PIC X(10)
052500130108                                     VALUE "MFADSCCIVP".
052600130108           05  lnc_invSum             PIC X(10)
052700130108                                     VALUE "INVSUM".
052800130108         03  lnc_hundredPerc          PIC S9(03)V9(2) COMP-3
052900070108                                     VALUE 100.00.
053000130108
053100130108       01  lc_accLevelDSCFlag         PIC X(01)
053200130108                                     VALUE SPACES.
053300070123         88  lnc_accLevelDSC         VALUE "Y".
053400130108
053500130108       01  lc_accLevelFreeDollarFlag  PIC X(01)
053600130108                                     VALUE SPACES.
053700070108         88  lnc_accLevelFreeDollar  VALUE "Y".
053800130108
053900130108       01  lc_erFeeFlag               PIC X(01)
054000130108                                     VALUE SPACES.
054100070201         88  lnc_erFeeYes            VALUE "Y".
054200130108
054300130108       01  lc_accWithholdingTaxFlag   PIC X(01)
054400130108                                     VALUE SPACES.
054500130108         88  lnc_accWithholdingTaxYes
054600070201                                     VALUE "Y".
054700130108
054800130108       01  ltb_invData.
054900130108         03  ltb_invDataArr OCCURS 100.
055000130108           05  ltbc_investmentCode    PIC X(05).
055100130108           05  ltbc_FundCode          PIC X(05).
055200130108           05  ltbc_currency          PIC X(03).
055300130108           05  ltbc_productTypeRule   PIC X(01).
055400130108           05  ltbn_TradeDate         PIC S9(09).
055500130108           05  ltbc_SplitOptionCode   PIC X(01).
055600130108           05  ltbc_IncludeAssignedUnits
055700130108                                      PIC X(01).
055800130108           05  ltbn_UnitAmt           PIC S9(10)V9(03).
055900130108           05  ltbn_GrossAmt          PIC S9(11)V9(02).
056000130108           05  ltbn_NetAmt            PIC S9(11)V9(02).
056100130108           05  ltbc_CertificateNo     PIC X(11).
056200130108           05  ltbn_CertificateIdNo   PIC S9(10).
056300130108           05  ltbc_InvestmentType    PIC X(03).
056400130108           05  ltbc_FormCode          PIC X(10).
056500070220       01  lc_totals.
056600130108      * This variables are initialized in initial logic
056700130108         03  ln_totDeducitonAmt       PIC S9(11)V9(2)  COMP-3
056800070202                                     VALUE 0.
056900130110      * These totals calculated before TRNPST
057000130110         03  ln_totGrossAmt           PIC S9(11)V99
057100130110                                     VALUE 0.
057200130110         03  ln_totNetAmt             PIC S9(11)V99 COMP-3
057300130110                                     VALUE 0.
057400130110         03  ln_totFederalTaxAmt      PIC S9(11)V9(2) COMP-3
057500130110                                     VALUE 0.
057600130110         03  ln_totProvincialTaxAmt   PIC S9(11)V9(2) COMP-3
057700130110                                     VALUE 0.
057800130110         03  ln_totDscAmt             PIC S9(11)V9(2) COMP-3
057900130110                                     VALUE 0.
058000130110         03  ln_totOtherDeductionAmt  PIC S9(11)V9(2) COMP-3
058100070202                                     VALUE 0.
058200130108      * These amounts calcuated after TRNPST
058300080611       01  lc_accTotals.
058400130108      * This variables are initialized in initial logic
058500130108         03  ln_accTotDeducitonAmt    PIC S9(11)V9(2) COMP-3.
058600070131         03  ln_accTotProvFedTaxAmt   PIC S9(11)V9(2) COMP-3.
058700130108
058800130108         03  ln_accTotGrossAmt        PIC S9(11)V99   COMP-3.
058900130108         03  ln_accTotNetAmt          PIC S9(11)V99   COMP-3.
059000130108         03  ln_accTotUnitAmt         PIC S9(10)V9(3) COMP-3.
059100130108         03  ln_accTotDscAmt          PIC S9(11)V9(2) COMP-3.
059200130108         03  ln_accTotOtherDeductionAmt
059300130108                                      PIC S9(11)V9(2) COMP-3.
059400130108         03  ln_accTotFederalTaxAmt   PIC S9(11)V9(2) COMP-3.
059500130108         03  ln_accTotProvincialTaxAmt
059600130108                                      PIC S9(11)V9(2) COMP-3.
059700130108         03  ln_accTotTaxForGrossOrNet
059800070130                                      PIC S9(11)V9(2) COMP-3.
059900130108      * Record to insert deduction data
060000130108       01  lc_dedlistRec.
060100130108         03  lc_dedInvestmentCode     PIC X(05).
060200130110         03  lc_dedDeductonCode       PIC X(04).
060300130110           88  lnc_taxForGrossOrNet  VALUES "FEDT" "PRVT"
060400130110                                            "NONT" "USWT".
060500130110           88  lnc_FEDT              VALUE "FEDT".
060600130110           88  lnc_PRVT              VALUE "PRVT".
060700130108           88  lnc_CDSC              VALUE "CDSC".
060800070207         03  ln_dedDeductionAmt       PIC S9(11)V9(2) COMP-3.
060900130108
061000130108       01  lc_accAssignEntire         PIC X(01) VALUE SPACES.
061100130108         88  lnc_accAssignEntireNo              VALUE "N".
061200070207         88  lnc_accAssignEntireYes             VALUE "Y".
061300130108
061400130109       01  lc_tmpData.
061500130111         03 li_tmpCertificateIdNo     PIC S9(10).
061600130111112770 01  li_Year                         PIC S9(04).
061700070207112770 01  lc_Currency                     PIC  X(03).
061800130108      * This record will be written to invsum Table
061900130108       01  lc_invsumRec.
062000130108        03  lc_currInvestmentCode     PIC X(05).
062100070130        03  lc_currFundCode           PIC X(05).
062200130108
062300130108        03  ln_currTradeDate          PIC S9(09) COMP-3.
062400130108        03  lc_currContrRedemCode     PIC X(06).
062500070130        03  lc_currSplitOptionCode    PIC X(01).
062600130108
062700130108        03  lc_currIncludeAssignedUnits
062800130108                                      PIC X(01).
062900130108        03  lc_currCertificateNo      PIC X(11).
063000070130        03  ln_currCertificateIdNo    PIC S9(10).
063100130108
063200130108        03  ln_currGrossAmt           PIC S9(11)V9(02) COMP-3.
063300130108        03  ln_currNetAmt             PIC S9(11)V9(02) COMP-3.
063400070208        03  ln_currUnitAmt            PIC S9(10)V9(03) COMP-3.
063500130108
063600130108        03  ln_invFederalTaxAmt       PIC S9(11)V9(2) COMP-3.
063700130108        03  ln_invProvincialTaxAmt    PIC S9(11)V9(2) COMP-3.
063800130108        03  ln_invDscAmt              PIC S9(11)V9(2) COMP-3.
063900130108        03  ln_invOtherDeductionAmt   PIC S9(11)V9(2) COMP-3.
064000070208        03  ln_dscFeeAsPerOfNetAmt    PIC S9(02)V9(03) COMP-3.
064100130108
064200130110        03  lc_currAssignedUnits      PIC X(01).
064300130110          88  lnc_currAssignedUnitsNo
064400070130                                     VALUE "N".
064500130108
064600130108        03  lc_currRejectionCode      PIC X(03).
064700070130        03  ln_currSeqNo              PIC S9(03) COMP-3.
064800130108
064900130108       01  lc_currData.
065000070123        03  lc_currLanguageCode       PIC X(01) VALUE SPACES.
065100130108
065200130108       01  lc_tmpVars.
065300130108         03  ln_tmpAmt                PIC S9(11)V9(2) COMP-3.
065400130108         03  ln_tmpTotalPercent       PIC S9(11)V9(2) COMP-3.
065500130108         03  ln_tmpTradeDate          PIC S9(09)      COMP-3.
065600130108         03  lc_tmpTradeDate          PIC X(08).
065700130108         03  ln_tmpUnitPrice          PIC S9(05)V9(4) COMP-3.
065800130108         03  ln_tmpInterestRate       PIC S9(02)V9(9) COMP-3.
065900130108         03  lc_tmpProvinceCode       PIC X(03).
066000130108         03  lc_tmpInvestmentType     PIC X(03).
066100130108         03  lc_tmpFormCode           PIC X(10).
066200130108         03  lc_tmpInvGroupCode       PIC X(05).
066300130108         03  lc_tmpCertNo             PIC X(11).
066400130108         03  ln_tmpcertidno           PIC S9(10).
066500130110         03  lc_tmpAssign             PIC X(01).
066600070126           88  lnc_tmpAssignNo       VALUE "N".
066700130108
066800130108         03  lc_tmpInvCode            PIC X(05).
066900130108         03  lc_tmpFundCode           PIC X(05).
067000130108         03  lc_tmpCurrency           PIC X(03).
067100130110         03  lc_tmpProductTypeRule    PIC X(01).
067200130110           88  lnc_tmpProdTypeRuleGic
067300130110                                     VALUE "2".
067400130110           88  lnc_tmpProdTypeRuleDii
067500130110                                     VALUE "7".
067600130110           88  lnc_tmpProdTypeRuleGicDii
067700070213                                     VALUE "2" "7".
067800130108
067900130110         03  lc_tmpSplitOptionCode    PIC X(01).
068000130110         03  lc_tmpIncludeAssignedUnits
068100130108                                      PIC X(01).
068200130108         03  lc_tmpUnitAmt            PIC X(16).
068300130108         03  lc_tmpGrossAmt           PIC X(16).
068400130108         03  lc_tmpNetAmt             PIC X(16).
068500130602         03  lc_tmpCertificateNo      PIC X(11).
068600070130         03  li_AsOfDate              PIC S9(08) VALUE 0.
068700130108
068800130108       01  lc_tmpIndicators.
068900130108         03  li_tmpInd1               PIC S9(04) BINARY.
069000070110         03  li_tmpInd2               PIC S9(04) BINARY.
069100130108
069200130108       01  lc_origParameterValues.
069300070306         03  lc_origContrRedemCode    PIC X(06).
069400130108      * Parameters to validate the date
069500130108       01  lc_validateDate.
069600130108         03  ln_dateNum8              PIC 9(08).
069700130108         03  lc_dateX8    REDEFINES ln_dateNum8 PIC X(08).
069800130110         03  lc_dateValidFlag         PIC X(01).
069900130110           88  lc_dateValidYes       VALUE "Y".
070000100106           88  lc_dateValidNo        VALUE "N".
070100130108
070200130110       01  lc_Mfaobjects.
070300130110          05  lc_OJLibrary            PIC X(10)
070400130110                                     VALUE " ".
070500130110       01  lc_prvOJLibrary            PIC X(10)
070600100315                                     VALUE " ".
070700100315      * Variables for call of API Retrieve job atributes (QUSRJOBI)
070800130110
070900130110       01  len-rcv-data               PIC X(04)
071000130110                                     VALUE X'00000512'.
071100130110       01  name-format                PIC X(08)
071200130110                                     VALUE "JOBI0600".
071300130110       01  job-curr-name              PIC X(26)
071400130110                                     VALUE "*".
071500130110       01  internal-job-Id            PIC X(16)
071600100315                                     VALUE SPACES.
071700100315      * Layout for API Retrieve job attributes  (QUSRJOBI)
071800100315
071900130108       01  QWC-JOBI0600.
072000130108           03  bytes-returned         PIC S9(00009) BINARY.
072100130108           03  bytes-avail            PIC S9(00009) BINARY.
072200130108           03  ws-job                 PIC  X(00010).
072300130108           03  ws-user                PIC  X(00010).
072400130108           03  ws-number              PIC  X(00006).
072500130108           03  INT-JOB-ID             PIC  X(00016).
072600130108           03  JOB-STATUS             PIC  X(00010).
072700130110           03  JOB-TYPE               PIC  X(00001).
072800130110               88 JOB-TYPE-INTERACTIVE
072900130110                                     VALUE "I".
073000130108               88 JOB-TYPE-BATCH     VALUE "B".
073100130108           03  JOB-SUBTYPE            PIC  X(00001).
073200130108           03  JOB-SWITCHES           PIC  X(00008).
073300130108           03  END-STATUS             PIC X.
073400130108           03  SUBSYSTEM-NAME         PIC X(10).
073500130108           03  SUBSYSTEM-DESC         PIC X(10).
073600130108           03  CURRENT-USER           PIC X(10).
073700100508           03  FILLER                 PIC X(411).
073800100508
073900121229      *Swap User and Swap Back parameters
074000100508           COPY CPYSWAPFLD.
074100061229
074200080611      * Copybook - Start
074300080611          COPY CPWSYSPARM.
074400080611          COPY CPYTAXPRP.
074500080610       01 trans-additional-tax.
074600061229          COPY DD-ALL-FORMATS OF MFATRNATP.
074700070108       COPY CPYSOAMSG.
074800061215       COPY CPTRNPST1.
074900070108       COPY CPSPCMAUT.
075000070108      * Copybook to get data from Process-Date Data Area
075100061215       COPY CPPRCDTP.
075200061229       COPY Cpbascur.
075300061229      * -----------------------------------------
075400061229      * Copybook - End
075500061227      * -----------------------------------------
075600121227       LINKAGE SECTION.
075700121228
075800061227       COPY CPCDSCCLC1.
075900121120       PROCEDURE DIVISION USING
076000070102                 pc_RequestUserId
076100061215                 pc_LanguageCode
076200070102                 pc_RowThreshold
076300070102
076400070102                 pc_IvrAcctNo
076500070102                 pc_ContRdmptnCode
076600070102
076700070102                 pc_DispDscSched
076800070102                 pc_Currency
076900070102                 pc_WaiveDsc
077000070102                 pc_WaiveErf
077100070102                 pc_SplitTaxOption
077200070102                 pc_ReplaceAddTax
077300070102                 pc_FedTax
077400070102                 pc_ProvTax
077500070102                 pc_AcctGrossAmt
077600070102                 pc_AcctNetAmt
077700070102
077800061215                 pc_AWDRedemptionFlag
077900121227                 pc_acctlevelReq
078000070102                 pc_gross_Or_Net
078100070102                 pc_invData
078200070215
078300070102                 pc_rowCount
078400070102                 pc_MessageCode
078500061227                 pc_MessageDesc.
078600061229       MAINLINE.
078700061227      * Make sure the SP is finished and return some result
078800061228           EXEC SQL
078900061228             WHENEVER SQLERROR
079000061228               CONTINUE
079100061227           END-EXEC
079200061228
079300140518           PERFORM initial-validation
079400081114127707     IF lb_SystemUp
079500081114           IF lb_initialOK
079600081114               PERFORM set-acc-level-withh-tax-flags
079700081114               PERFORM detail-processing
079800070202           END-IF
079900070202      * Set business error (may be successful)
080000080611           PERFORM set-business-error
080100121120
080200100813           IF lb_initialOK
080300140518              PERFORM close-files
080400121120127707     END-IF
080500121120           END-IF.
080600130108
080700130108           IF pc_RequestUserid NOT = SPACES THEN
080800130108              PERFORM Swap-Back
080900100508           END-IF.
081000061229
081100061229           GOBACK.
081200061229      * ------------------------------------------
081300061229       initial-validation.
081400091001      * ------------------------------------------
081500130607
081600130607EY         IF pc_SplitTaxOption = lnc_D
081700130607              MOVE lnc_splitOptDollar TO pc_SplitTaxOption
081800130607           END-IF.
081900070129
082000070129           SET lb_initialOK             TO TRUE
082100061229      * Init local error code to successful
082200061229           INITIALIZE pc_MessageCode
082300070220                      pc_MessageDesc
082400070220                      lc_accTotals
082500070220                      lc_totals
082600070221                      lc_invsumRec
082700070221      * Initialize Account Level error information
082800070226                      lc_retnAccData
082900070306                      lc_accAssignEntire
083000081114                      lc_toReportData
083100070301                      lc_filesOverridenFlag
083200130110
083300070220           MOVE lnc_SuccessBusinessError TO lc_BusinessError
083400070221
083500070221           SET lb_allInvestmentsInit    TO TRUE
083600070130
083700070215           MOVE Inc_DSCCalculator                      TO lc_ProcName
083800081114           MOVE lnc_defaultRowCountN                   TO pc_rowCount
083900130108
084000130108           IF pc_RequestUserid NOT = SPACES THEN
084100130108              MOVE pc_RequestUserid TO swap_RequestUserid
084200130108              PERFORM Swap-User
084300130110              IF swap_error
084400130108                 MOVE lc_errorCode  TO lc_BusinessError
084500130108                 PERFORM set-initial-fail
084600130108              END-IF
084700100323           END-IF.
084800121120
084900100511           IF lb_initialOK
085000100511              ACCEPT lc_Mfaobjects FROM lc_dtaaraMfaobjects
085100121120                                 FOR "MFAOBJECTS"
085200080611           END-IF.
085300070130
085400070130           IF pc_LanguageCode = SPACES
085500070130             MOVE lnc_english                          TO
085600070130                        lc_currLanguageCode
085700070130           ELSE
085800070130             MOVE FUNCTION UPPER-CASE(pc_LanguageCode) TO
085900070130                        lc_currLanguageCode
086000070102           END-IF
086100070207
086200130102           IF pc_AWDRedemptionFlagYes
086300070207             SET lb_awdQcWhTaxYes TO TRUE
086400130102           ELSE
086500070207             SET lb_awdQcWhTaxNo  TO TRUE
086600070223           END-IF
086700070226      * Convert account level parms to upper case
086800070226           IF pc_ContRdmptnCode NOT = SPACES
086900070226             MOVE FUNCTION UPPER-CASE(pc_ContRdmptnCode) TO
087000070226                        pc_ContRdmptnCode
087100070223           END-IF
087200070223           IF pc_WaiveDsc NOT = SPACES
087300070223             MOVE FUNCTION UPPER-CASE(pc_WaiveDsc) TO
087400070223                        pc_WaiveDsc
087500070223           END-IF
087600070223
087700070223           IF pc_WaiveErf NOT = SPACES
087800070223             MOVE FUNCTION UPPER-CASE(pc_WaiveErf) TO
087900070223                        pc_WaiveErf
088000070223           END-IF
088100070223
088200070223           IF pc_ReplaceAddTax NOT = SPACES
088300070223             MOVE FUNCTION UPPER-CASE(pc_ReplaceAddTax) TO
088400070223                        pc_ReplaceAddTax
088500070207           END-IF
088600070223
088700070223           IF pc_AWDRedemptionFlag NOT = SPACES
088800070223             MOVE FUNCTION UPPER-CASE(pc_AWDRedemptionFlag) TO
088900070223                        pc_AWDRedemptionFlag
089000070223           END-IF
089100070223
089200070223           IF pc_acctlevelReq NOT = SPACES
089300070223             MOVE FUNCTION UPPER-CASE(pc_acctlevelReq) TO
089400070223                        pc_acctlevelReq
089500100315           END-IF
089600100315
089700100315           CALL "QUSRJOBI" USING QWC-JOBI0600
089800100315                                 LEN-RCV-DATA
089900100315                                 NAME-FORMAT
090000100315                                 JOB-CURR-NAME
090100100315                                 INTERNAL-JOB-ID.
090200100315
090300100315           IF JOB-TYPE-BATCH
090400100315              CONTINUE
090500100510           ELSE
090600140518              IF lb_initialOK
090700140518      * RFS 127707 - Start
090800140518      *       PERFORM check-system-availability
090900140518              MOVE lc_currLanguageCode TO lc_LanguageCode
091000140518              PERFORM Check-Env-Avail
091100140518              IF lb_SystemUp
091200140518                CONTINUE
091300140518              ELSE
091400100510                SET lb_initialFail TO TRUE
091500140518              END-IF
091600140518      * RFS 127707 - End
091700070201           END-IF.
091800070208
091900070208           IF lb_initialOK
092000070208             PERFORM valid-acct
092100070213             IF lb_initialOK
092200070306               PERFORM move-acc-level-parms-to-locals
092300070306               PERFORM validate-acct-gross-net
092400070306               IF lb_initialOK
092500070306                 PERFORM get-acc-ivr-data
092600070306                 IF lb_initialOK
092700070306                   PERFORM validate-contr-redem-code
092800080609                   IF lb_initialOK
092900070306                     PERFORM get-contr-redem-code-rule
093000091001                     PERFORM validate-stop-act-redem
093100091001                     If lc_prvOJLibrary = spaces
093200091001                        MOVE lc_OJLibrary TO lc_prvOJLibrary
093300091001                     ELSE
093400091001                        If lc_prvOJLibrary NOT = lc_OJLibrary
093500091001                           MOVE lc_OJLibrary TO lc_prvOJLibrary
093600091001                           SET lnc_DataNotInitialized   TO TRUE
093700091001                        END-IF
093800070306                     END-IF
093900070306                     IF lnc_DataNotInitialized
094000070306                       PERFORM get-company-code
094100070306                       PERFORM get-spec-modules
094200070306                       PERFORM get-edit-codes
094300070306                       PERFORM get-process-date
094400080611                       PERFORM get-base-currency
094500070306                       PERFORM get-sysparms
094600070306                       SET lnc_DataInitialized      TO TRUE
094700070306                     END-IF
094800070306                     PERFORM validate-account-withhold-Tax
094900070306                     IF lb_initialOK
095000070306                       PERFORM validate-erf-for-the-firm
095100070306                       IF lb_initialOK
095200070306                         PERFORM load-input-inv-array
095300070306                         PERFORM validate-residual
095400070306                         IF lb_initialOK
095500070306                           PERFORM check-set-parm-currency
095600070306                           PERFORM valid-gross-net
095700130108                           IF lb_initialOK
095800070306                             IF li_currNumInvs = 0
095900070306                               PERFORM load-all-investments
096000070306                               SET lb_allInvestmentsLoaded  TO TRUE
096100070306                             END-IF
096200070306                             IF lb_initialOK
096300070306                               IF NOT lb_allInvestmentsLoaded
096400070306                                 PERFORM set-residual
096500070306                               END-IF
096600070306                               IF lb_initialOK
096700070102                                 PERFORM set-investment-data.
096800070108      * ------------------------------------------
096900070102       valid-acct.
097000070102      * ------------------------------------------
097100070208      * Account validation
097200070213
097300070103           IF pc_IvrAcctNo = SPACES
097400130110             PERFORM set-initial-fail
097500070103             MOVE lnc_NoAccountNumber  TO lc_BusinessError
097600130102           ELSE
097700070103             COMPUTE li_IvrAcctNo = FUNCTION NUMVAL(pc_ivrAcctNo)
097800070306           END-IF.
097900070306      * ------------------------------------------
098000070306       validate-acct-gross-net.
098100070306      * ------------------------------------------
098200070306      * Validate account Gross and net amounts
098300070306           IF ln_AcctGrossAmt > 0.0     AND
098400070306              ln_AcctNetAmt   > 0.0
098500130110             PERFORM set-initial-fail
098600070306             MOVE lc_oneAcctGrossOrNet  TO lc_BusinessError
098700070202           END-IF
098800070202      * ------------------------------------------
098900070202       validate-account-withhold-Tax.
099000070202      * ------------------------------------------
099100070202      * This option is not allowed without account level withholding
099200070202      * tax.
099300070202           IF NOT lnc_accWithholdingTaxYes      AND
099400070202               (pc_SplitTaxOption NOT = SPACES OR
099500130102                pc_ReplaceAddTax  NOT = SPACES OR
099600130102                ln_FedTax  > 0                 OR
099700070202                ln_ProvTax > 0 )
099800130110             PERFORM set-initial-fail
099900070202             MOVE lnc_notAllowWithoutWTax   TO lc_BusinessError
100000070227           END-IF
100100070227
100200070227           IF lb_initialOK
100300070227             PERFORM check-add-replace
100400070227             IF lb_initialOK
100500070227               PERFORM check-tax-split
100600070227               IF lb_initialOK
100700070227                 PERFORM check-fed-tax
100800070227                 IF lb_initialOK
100900070202                   PERFORM check-prov-tax.
101000070202
101100070202      * Check if provincial or federal tax entered
101200070202           IF lb_initialOK
101300070202             IF (pc_SplitTaxOption NOT = SPACES OR
101400130102                 pc_ReplaceAddTax  NOT = SPACES)   AND
101500130102                  ln_FedTax  = 0                   AND
101600070202                  ln_ProvTax = 0
101700130110               PERFORM set-initial-fail
101800070202               MOVE lnc_enterProvOrFedTax    TO lc_BusinessError
101900070202             END-IF
102000070202           END-IF
102100070202
102200070202      * Validate total tax percent
102300130102           IF lb_initialOK
102400070202             COMPUTE ln_tmpTotalPercent = ln_FedTax + ln_ProvTax
102500070202             IF pc_SplitTaxOption = lnc_percent AND
102600070202                ln_tmpTotalPercent > lnc_maxPercent
102700130110               PERFORM set-initial-fail
102800070202               MOVE lnc_totalTaxPercent      TO lc_BusinessError
102900070202             END-IF
103000070227           END-IF
103100070201
103200070201      * ------------------------------------------
103300070201       validate-erf-for-the-firm.
103400070201      * ------------------------------------------
103500070201           IF NOT lnc_erFeeYes     AND
103600070201              pc_WaiveErfYes
103700130110             PERFORM set-initial-fail
103800070201             MOVE  lnc_NotEnabled        TO lc_BusinessError
103900070213           END-IF.
104000070213      * ------------------------------------------
104100070213       move-acc-level-parms-to-locals.
104200070213      * ------------------------------------------
104300070213      * Move passing parms to local variables, converting
104400070214      *   amounts to numeric
104500130102           IF pc_fedTax = SPACES
104600070214             COMPUTE ln_FedTax        = 0.0
104700130102           ELSE
104800070214             COMPUTE ln_FedTax  = FUNCTION NUMVAL ( pc_fedTax )
104900070214           END-IF
105000070214
105100130102           IF pc_provTax = SPACES
105200070214             COMPUTE ln_ProvTax       = 0.0
105300130102           ELSE
105400070214             COMPUTE ln_ProvTax = FUNCTION NUMVAL ( pc_provTax )
105500070213           END-IF
105600070214
105700070214           IF pc_AcctGrossAmt = SPACES
105800070214             COMPUTE ln_AcctGrossAmt  = 0.0
105900070214           ELSE
106000070213             COMPUTE ln_AcctGrossAmt  =
106100070214                                FUNCTION NUMVAL ( pc_AcctGrossAmt )
106200070214           END-IF
106300070214           IF pc_AcctNetAmt = SPACES
106400070214              COMPUTE ln_AcctNetAmt   = 0.0
106500070214           ELSE
106600070214              COMPUTE ln_AcctNetAmt   =
106700070214                                FUNCTION NUMVAL ( pc_AcctNetAmt )
106800070201           END-IF
106900070202      * ------------------------------------------
107000070201       get-acc-ivr-data.
107100070202      * ------------------------------------------
107200070201      * Get province, country and other account/investor data
107300130102           CALL "FXDSCIVRP" USING
107400070202                              li_IvrAcctNo
107500070201                              lc_lockedIn
107600070201                              lc_stopActivity
107700130104                              lc_stopRedem
107800070201                              li_InvestorNo
107900070201                              lc_ProvinceCode
108000130110                              lc_CountryCode
108100130110                              lc_AccountTypeCode
108200130110                              lc_AccountTypeRule
108300130110                              lc_ContrRedemCode
108400070226                              lc_ErrCode2
108500070205           MOVE pc_ContRdmptnCode TO lc_origContrRedemCode
108600130110           IF pc_ContRdmptnCode = SPACES
108700070301             MOVE lc_ContrRedemCode   TO pc_ContRdmptnCode
108800130110           END-IF
108900070301           MOVE pc_ContRdmptnCode     TO lc_ContrRedemCode
109000070301      * Validate if account exists in the system
109100070301           IF NOT lnc_errCode2OK
109200130110             PERFORM set-initial-fail
109300121120             MOVE  lnc_notValidAccount    TO lc_BusinessError
109400070226           END-IF.
109500070226      * ------------------------------------------
109600070226       validate-contr-redem-code.
109700070226      * ------------------------------------------
109800070226      * Validate contribution redemption code:
109900070226      *   do not validate if default value was used
110000070226           IF lc_origContrRedemCode NOT = SPACES
110100070226             CALL "FXACRRULE" USING
110200070226                                lc_accountTypeCode
110300070226                                pc_ContRdmptnCode
110400070226                                lnc_SEL
110500070226                                lc_errCode2
110600070226             IF NOT lnc_errCode2Ok
110700130110               PERFORM set-initial-fail
110800070226               MOVE lnc_accContrRedemCode    TO lc_BusinessError
110900070226             END-IF
111000080609           END-IF.
111100080609      * ------------------------------------------
111200080609       get-contr-redem-code-rule.
111300080609      * ------------------------------------------
111400080609      * Get contribution redemption code rule
111500080609           CALL "FXCTRRULE" USING
111600080609                                lc_accountTypeCode
111700080609                                pc_ContRdmptnCode
111800080609                                lc_ContrRedemCodeRule
111900070202                                lc_errCode2
112000070202      * ------------------------------------------
112100070202       validate-stop-act-redem.
112200070202      * ------------------------------------------
112300070202      * Validate stop activity and redemptions and set up
112400070202      *   warning flag.
112500070202           EVALUATE TRUE
112600070202             WHEN lnc_stopActivityYes
112700070202               MOVE lnc_errStopActive TO lc_errorCode
112800070202                                         lc_retnAccLevelErr
112900070202               PERFORM get-message-description
113000070202               MOVE lc_MessageDesc    TO lc_retnAccMessageDesc
113100070202             WHEN lnc_stopRedemYes
113200070202               MOVE lnc_errStopRedem  TO lc_errorCode
113300070202                                         lc_retnAccLevelErr
113400070202               PERFORM get-message-description
113500070202               MOVE lc_MessageDesc    TO lc_retnAccMessageDesc
113600070201           END-EVALUATE.
113700070201      * ------------------------------------------
113800070201       check-add-replace.
113900070201      * ------------------------------------------
114000070201      * Validate add-replace for prov/fed taxes
114100130102           IF pc_ReplaceAddTax = SPACES
114200070201             IF ((ln_FedTax > 0 OR ln_ProvTax > 0) AND
114300130102                  pc_SplitTaxOption NOT = SPACES)      OR
114400130102                (ln_FedTax > 0)                        OR
114500070201                (ln_ProvTax > 0 AND lnc_ProvinceCodeQC)
114600130110               PERFORM set-initial-fail
114700070201               MOVE  lnc_errReplaceAdd    TO lc_BusinessError
114800070201             END-IF
114900070201           END-IF.
115000070201      * ------------------------------------------
115100070201       check-tax-split.
115200070201      * ------------------------------------------
115300130102           IF pc_SplitTaxOption = SPACES
115400130102             IF ln_FedTax  > 0  OR
115500070201               (ln_ProvTax > 0 AND lnc_ProvinceCodeQC)
115600130110               PERFORM set-initial-fail
115700070201               MOVE  lnc_errTaxSplit    TO lc_BusinessError
115800070201             END-IF
115900070201           END-IF.
116000070201      * ------------------------------------------
116100070201       check-fed-tax.
116200130102      * ------------------------------------------
116300070201           IF ln_FedTax = 0              AND
116400070201             NOT pnc_SplitTaxOptionPerc
116500070201             IF pc_ReplaceAddTax NOT = SPACES
116600130110               PERFORM set-initial-fail
116700070201               MOVE  lnc_errAddReplFedTaxReq     TO lc_BusinessError
116800070201             ELSE
116900070201               IF pc_SplitTaxOption NOT = SPACES
117000130110                 PERFORM set-initial-fail
117100070201                 MOVE  lnc_errTaxSplitFedTaxReq  TO lc_BusinessError
117200070201               END-IF
117300070201             END-IF
117400070201           END-IF.
117500070201      * ------------------------------------------
117600070201       check-prov-tax.
117700150923      * ------------------------------------------
117800130102148347     IF lnc_ProvinceCodeQC
117900070201           IF ln_ProvTax = 0              AND
118000070201             NOT pnc_SplitTaxOptionPerc
118100070201             IF pc_ReplaceAddTax NOT = SPACES
118200130110               PERFORM set-initial-fail
118300070201               MOVE  lnc_errAddReplProvTaxReq     TO lc_BusinessError
118400070201             ELSE
118500070201               IF pc_SplitTaxOption NOT = SPACES
118600130110                 PERFORM set-initial-fail
118700070201                 MOVE  lnc_errTaxSplitProvTaxReq  TO lc_BusinessError
118800070201               END-IF
118900150923             END-IF
119000150923      * RFS 148347 STARTS
119100150923      *    END-IF.
119200150923           END-IF
119300150923           END-IF.
119400070213      * RFS 148347 ENDS
119500070213      * ------------------------------------------
119600070213       load-input-inv-array.
119700070213      * ------------------------------------------
119800130108      * Unstring input "array" into internal array to be used in the pgm
119900070214           INITIALIZE       li_currNumInvs
120000070214                            ln_numResidual
120100070214                            ln_lastResidual
120200070214                            ln_totGrossAmt
120300130102                            ln_totNetAmt
120400070320           MOVE 1        TO li_Pointer
120500130108           SET lb_isMoreFunds     TO TRUE
120600130108           PERFORM VARYING li_cnt FROM 1 BY 1
120700070320                   UNTIL li_cnt > lnc_maxNumInvs OR
120800070320                   NOT lb_initialOK              OR
120900070214                   lb_noMoreFunds
121000070214             INITIALIZE lc_tmpFundCode
121100070214             UNSTRING ptbc_invDataArr
121200070214                DELIMITED BY lnc_elemDelim OR
121300070214                             lnc_rowDelim
121400070214                INTO lc_tmpFundCode
121500070214                     lc_tmpTradeDate
121600070214                     lc_tmpSplitOptionCode
121700070214                     lc_tmpIncludeAssignedUnits
121800070214                     lc_tmpUnitAmt
121900070214                     lc_tmpGrossAmt
122000070214                     lc_tmpNetAmt
122100130102                     lc_tmpCertificateNo
122200070214                WITH POINTER li_Pointer
122300070214                ON OVERFLOW
122400070214                   CONTINUE
122500070214                NOT ON OVERFLOW
122600070214                   CONTINUE
122700070320             END-UNSTRING
122800070214      * If fund code is spaces then stop to Unstring the input data
122900070320             IF lc_tmpFundCode = SPACES
123000070214               SET lb_noMoreFunds     TO TRUE
123100070214             ELSE
123200130108      * Increase counter and move data to internal array
123300130108               COMPUTE li_currNumInvs = li_currNumInvs + 1
123400070214               MOVE li_currNumInvs   TO ln_c1
123500070214
123600070214               MOVE lc_tmpFundCode   TO ltbc_FundCode (ln_c1)
123700070214               IF lc_tmpTradeDate = SPACES
123800070214                 COMPUTE ltbn_TradeDate (ln_c1) = 0
123900070214               ELSE
124000070214                 COMPUTE ltbn_TradeDate (ln_c1) =
124100070214                           FUNCTION NUMVAL(lc_tmpTradeDate)
124200070215               END-IF
124300070214
124400070214               IF lc_tmpIncludeAssignedUnits = SPACE
124500070214                 MOVE lnc_Y                       TO
124600070214                                     ltbc_IncludeAssignedUnits (ln_c1)
124700070223               ELSE
124800070223                 MOVE
124900070223                   FUNCTION UPPER-CASE(lc_tmpIncludeAssignedUnits) TO
125000070214                                     ltbc_IncludeAssignedUnits (ln_c1)
125100070214               END-IF
125200070214               IF lc_tmpUnitAmt = SPACES
125300070214                 COMPUTE ltbn_unitAmt   (ln_c1) = 0.0
125400070214               ELSE
125500070214                 COMPUTE ltbn_unitAmt   (ln_c1) =
125600070214                              FUNCTION NUMVAL(lc_tmpUnitAmt)
125700070214               END-IF
125800070214               IF lc_tmpGrossAmt = SPACES
125900070214                 COMPUTE ltbn_GrossAmt  (ln_c1) = 0.0
126000070214               ELSE
126100070214                 COMPUTE ltbn_GrossAmt  (ln_c1) =
126200070214                              FUNCTION NUMVAL(lc_tmpGrossAmt)
126300070214               END-IF
126400070214               IF lc_tmpNetAmt = SPACES
126500070214                 COMPUTE ltbn_netAmt    (ln_c1) = 0.0
126600070214               ELSE
126700070214                 COMPUTE ltbn_netAmt    (ln_c1) =
126800070214                              FUNCTION NUMVAL(lc_tmpNetAmt)
126900070214               END-IF
127000070214
127100070214               MOVE lc_tmpCertificateNo           TO
127200070214                                      ltbc_CertificateNo      (ln_c1)
127300070214               PERFORM get-certificate-id-no
127400070214
127500070214               MOVE lc_tmpFundCode                TO
127600070214                                      lc_tmpFundCode
127700070214                                      ltbc_FundCode           (ln_c1)
127800070301               PERFORM get-investment
127900130110               IF NOT lnc_errCode2Ok
128000070301                 MOVE lc_tmpFundCode      TO lc_FundToReport
128100130110                 PERFORM set-initial-fail
128200070301                 MOVE  lnc_fundNotExists  TO lc_BusinessError
128300080611               ELSE
128400080611                 PERFORM get-inv-group
128500080611                 MOVE lc_tmpInvestmentType TO
128600080611                                       ltbc_InvestmentType (ln_c1)
128700080611                 MOVE lc_tmpFormCode       TO
128800070301                                       ltbc_FormCode        (ln_c1)
128900070301                 MOVE lc_tmpInvCode     TO ltbc_investmentCode (ln_c1)
129000070301                 MOVE lc_tmpCurrency    TO ltbc_currency       (ln_c1)
129100070214                 MOVE lc_tmpProductTypeRule TO
129200070214                                       ltbc_ProductTypeRule      (ln_c1)
129300070301
129400070301                 IF lc_tmpSplitOptionCode = SPACES
129500070301                   IF ltbn_GrossAmt  (ln_c1) > 0.0 OR
129600070301                      ltbn_netAmt    (ln_c1) > 0.0
129700070301                     MOVE lnc_splitOptDollar   TO lc_tmpSplitOptionCode
129800070301                   ELSE
129900070301                     IF ltbn_unitAmt   (ln_c1) > 0.0
130000070301                      MOVE lnc_splitOptUnit     TO lc_tmpSplitOptionCode
130100070301                     END-IF
130200070301                   END-IF
130300070215                 END-IF
130400070301
130500070301                 MOVE FUNCTION UPPER-CASE(lc_tmpSplitOptionCode) TO
130600070301                                 lc_tmpSplitOptionCode
130700070301                 MOVE lc_tmpSplitOptionCode                      TO
130800070301                                       ltbc_SplitOptionCode (ln_c1)
130900070301                 IF lc_tmpSplitOptionCode = lnc_Residual
131000070301                   COMPUTE ln_numResidual = ln_numResidual + 1
131100070301                   MOVE ln_c1               TO ln_lastResidual
131200070214                 END-IF
131300070301
131400070214                 COMPUTE ln_totGrossAmt = ln_totGrossAmt +
131500070301                                         ltbn_GrossAmt  (ln_c1)
131600070214                 COMPUTE ln_totNetAmt   = ln_totNetAmt   +
131700070301                                         ltbn_NetAmt    (ln_c1)
131800070214               END-IF
131900070213             END-IF
132000080611           END-PERFORM.
132100080611      * ------------------------------------------
132200080611       get-inv-group.
132300080611      * ------------------------------------------
132400080611           EXEC SQL
132500080611             SELECT INVESTMENT_TYPE,
132600080611                    FORM_CODE
132700080611               INTO
132800080611                 :lc_tmpInvestmentType,
132900080611                 :lc_tmpFormCode
133000080611               FROM
133100080611                 mfainvgrp
133200080611             WHERE
133300080611               investment_group_code = :lc_tmpInvGroupCode
133400070206           END-EXEC.
133500070206      * ------------------------------------------
133600070206       get-certificate-id-no.
133700070206      * ------------------------------------------
133800070206      * Get certificate id number using passing parameters.
133900070214
134000070214           INITIALIZE      ltbn_CertificateIdNo   (ln_c1)
134100070206                           ln_tmpCertIdNo
134200070214
134300070214           IF ltbc_CertificateNo (ln_c1) NOT = SPACES
134400070206             MOVE ltbc_CertificateNo (ln_c1) TO  lc_tmpCertNo
134500070206
134600070206             EXEC SQL
134700070206               SELECT
134800070206                 certificate_id_no
134900070206               INTO
135000070206                 :ln_tmpCertIdNo :li_tmpInd1
135100070206               FROM
135200070206                 mfagicdp
135300070206               WHERE
135400070206                 certificate_no              = :lc_tmpCertNo  AND
135500070206                 cert_status_code            = :lnc_A         AND
135600070207                 current_certificate_balance > 0              AND
135700070206                 movable_mortgage           <> :lnc_Y
135800070206             END-EXEC
135900140518
136000140518135101       MOVE SQLSTATE TO Ic_SqlStates
136100140518135101*      IF SQLSTATE NOT = lnc_SuccessMsgId
136200070207135101       IF NOT Incc_sqlSuccessful
136300070206               INITIALIZE ln_tmpCertIdNo
136400070214             END-IF
136500070206             MOVE ln_tmpCertIdNo   TO ltbn_CertificateIdNo (ln_c1)
136600070108           END-IF.
136700070108      * ------------------------------------------
136800070108       get-investment.
136900070108      * ------------------------------------------
137000070129      * Get investment record for the fund code
137100130102           CALL "FXINVRULE" USING
137200070129                              li_IvrAcctNo
137300070129                              lc_tmpFundCode
137400070129                              lc_tmpInvCode
137500070129                              lc_tmpCurrency
137600080611                              lc_tmpProductTypeRule
137700070129                              lc_tmpInvGroupCode
137800070125                              lc_errCode2.
137900070125      * ------------------------------------------
138000070125       check-set-parm-currency.
138100070223      * ------------------------------------------
138200070125      * Move base currency or convert to upper case
138300070223           IF pc_Currency = SPACES
138400070223             MOVE lc_baseCurrency                  TO
138500070223                        pc_Currency
138600070223           ELSE
138700070223             MOVE FUNCTION UPPER-CASE(pc_Currency) TO
138800070125                        pc_Currency
138900070102           END-IF.
139000070102      * ------------------------------------------
139100070102       valid-gross-net.
139200070103      * ------------------------------------------
139300070306      * Looping through investments and
139400070306      * validate if Gross/Net entered  ;
139500070102      * Validate trade date
139600070102           MOVE 0              TO ln_tmpCnt
139700130108           SET lb_loopStart    TO TRUE
139800130108           PERFORM VARYING li_cnt
139900070102             FROM 1 BY 1 UNTIL li_cnt > li_currNumInvs  OR
140000070102                               lb_initialFail           OR
140100130108                               lb_loopEnd
140200070102             IF ltbc_FundCode (li_cnt) = SPACES
140300070102               SET lb_loopEnd     TO TRUE
140400070103             ELSE
140500070306      * Count which amounts exists/Validate: only 1 should entered
140600070306               PERFORM validate-trade-date
140700070306               IF lb_initialOk
140800130108                 COMPUTE ln_tmpCnt = 0
140900070306                 IF ltbn_unitAmt (li_cnt) NOT = ZEROES
141000070306                   COMPUTE ln_tmpCnt = ln_tmpCnt + 1
141100130108                 END-IF
141200070306                 IF ltbn_grossAmt (li_cnt) NOT = ZEROES
141300070306                   COMPUTE ln_tmpCnt = ln_tmpCnt + 1
141400130108                 END-IF
141500070306                 IF ltbn_netAmt (li_cnt) NOT = ZEROES
141600070306                   COMPUTE ln_tmpCnt = ln_tmpCnt + 1
141700070306                 END-IF
141800070306                 IF ln_tmpCnt > 1
141900130110                   PERFORM set-initial-fail
142000070306                   MOVE lnc_ErrAmounts       TO lc_BusinessError
142100070306                 END-IF
142200070102               END-IF
142300070102             END-IF
142400070306           END-PERFORM.
142500070306      * ------------------------------------------
142600070306       validate-trade-date.
142700070306      * ------------------------------------------
142800130108      * Validate if trade date is valid date
142900130108           IF ltbn_TradeDate (li_cnt) > 0
143000070306             MOVE ltbn_TradeDate (li_cnt) TO ln_dateNum8
143100070306             CALL "VALDATEFMT" USING lc_dateX8
143200070306                                     lc_dateValidFlag
143300130110             IF  lc_dateValidNo
143400070306               MOVE lc_dateX8              TO lc_DateToReport
143500130110               PERFORM set-initial-fail
143600070306               MOVE lnc_errTradeDate       TO lc_BusinessError
143700070306             END-IF
143800070125           END-IF
143900070125      * ------------------------------------------
144000070125       validate-residual.
144100070129      * ------------------------------------------
144200070129      * Validate residual - check if more than 1 Residual entered,
144300070125      * Check if gross/net for residual at account level is entered
144400070125           IF ln_numResidual > 0
144500070125             IF ln_numResidual > lnc_maxResidual
144600130110               PERFORM set-initial-fail
144700070125               MOVE lnc_oneResidual       TO lc_BusinessError
144800130108             ELSE
144900070125               IF ln_lastResidual < li_currNumInvs
145000130110                 PERFORM set-initial-fail
145100070129                 MOVE lnc_lastResidual    TO lc_BusinessError
145200070129               ELSE
145300070213      * Gross or net have to be entered for residual
145400070213                 IF ln_AcctGrossAmt = 0 AND
145500070129                    ln_AcctNetAmt   = 0
145600130110                   PERFORM set-initial-fail
145700070129                   MOVE lnc_grossOrNetResidual    TO lc_BusinessError
145800070125                 END-IF
145900070125               END-IF
146000070125             END-IF
146100070102           END-IF.
146200070102      * ------------------------------------------
146300070102       load-all-investments.
146400070103      * ------------------------------------------
146500130108      * Load all investments for the provided account
146600070102           MOVE 0           TO li_currNumInvs
146700070122           EXEC SQL
146800070108             DECLARE cu_accivp CURSOR FOR
146900070122               SELECT
147000070122                      accivp.investment_code,
147100070126                      invp.industry_fund_code,
147200070126                      invp.currency,
147300070103                      prtcdp.product_type_rule,
147400070103                      :lnc_tradeDateZero,
147500070207                      :lnc_SplitOptionCodeAll,
147600070123                      :lnc_IncludeAssignedUnits,
147700070103                      :lnc_UnitZero,
147800070103                      :lnc_AmtZero,
147900070206                      :lnc_AmtZero,
148000080612                      :lnc_CertNoSpaces,
148100080612                      :lnc_CertZero,
148200080612                      invgrp.investment_type,
148300070102                      invgrp.form_code
148400061215               FROM
148500061215                mfaaccivp accivp JOIN mfainvp invp
148600070126                 ON accivp.investment_code = invp.investment_code
148700070126                                 JOIN mfaprtcdp prtcdp
148800080612                 ON invp.product_type_code = prtcdp.product_type_code
148900080612                                 JOIN mfainvgrp invgrp
149000080612                 ON invp.investment_group_code =
149100070102                      invgrp.investment_group_code
149200130102               WHERE
149300070228                 account_no = :li_IvrAcctNo
149400070228               ORDER BY
149500070228                 accivp.account_no,
149600070102                 accivp.investment_code
149700070102               FOR FETCH ONLY
149800070102           END-EXEC
149900070102
150000070102           EXEC SQL
150100070102             OPEN cu_accivp
150200070102           END-EXEC
150300070102
150400070102           EXEC SQL
150500070102             FETCH NEXT
150600070102             FROM cu_accivp
150700070102             FOR :lnc_maxNumInvs ROWS
150800070103             INTO
150900070102               :ltb_invDataArr
151000070102           END-EXEC
151100130108
151200070102           MOVE SQLERRD(3)          TO li_currNumInvs
151300070102
151400070102           EXEC SQL
151500070102             CLOSE cu_accivp
151600070102           END-EXEC
151700130108
151800070103           IF li_currNumInvs = 0
151900130110             PERFORM set-initial-fail
152000070103             MOVE lnc_NoInvestments TO lc_BusinessError
152100070108           END-IF.
152200070108      * ------------------------------------------
152300070108       get-company-code.
152400070108      * ------------------------------------------
152500070108           CALL "RTVCMPCD" USING
152600070108                           lc_companyCode.
152700070108      * ------------------------------------------
152800070108       get-spec-modules.
152900070108      * ------------------------------------------
153000061215      * Get Special module for account level DSC
153100061215           MOVE lc_companyCode       TO pc_spcmautCompanyCode
153200061215           MOVE lnc_ACLVDSC          TO pc_spcmautModuleId
153300061215           PERFORM process-user-index
153400070123           MOVE pc_spcmautSuccessful TO lc_accLevelDSCFlag
153500061215
153600061215           MOVE lc_companyCode       TO pc_spcmautCompanyCode
153700061215           MOVE lnc_ACLVFRD          TO pc_spcmautModuleId
153800061215           PERFORM process-user-index
153900070201           MOVE pc_spcmautSuccessful TO lc_accLevelFreeDollarFlag.
154000070201
154100070201           MOVE lc_companyCode       TO pc_spcmautCompanyCode
154200070201           MOVE lnc_ERFEE            TO pc_spcmautModuleId
154300070201           PERFORM process-user-index
154400070201           MOVE pc_spcmautSuccessful TO lc_erFeeFlag.
154500070201      * ------------------------------------------
154600070201       get-edit-codes.
154700070201      * ------------------------------------------
154800070201      * Acc level withholding Tax
154900070201           CALL "FXSCEDTAL1" USING
155000070201                          lnc_scrCodeTRNCDSC
155100070201                          lnc_editCodeACWTAX
155200070201                          lnc_editLevelCodeT
155300070108                          lc_accWithholdingTaxFlag.
155400070108      * ------------------------------------------
155500070108       get-process-date.
155600070108      * ------------------------------------------
155700070108           SET PASS-ACTION-GETDTA OF COMM-CPPRCDTP-PARAMETERS  TO TRUE
155800070108           CALL "FXPRCDTP" USING
155900070207                             CPWPRCDTP-LINKAGE
156000130104                             COMM-CPPRCDTP-PARAMETERS
156100130602           MOVE PRCDTP-LST-PROCESS-DATE    TO li_lastProcessDate
156200130104                                              li_AsOfDate
156300080602           COMPUTE li_genPlacementDate =
156400130108             PRCDTP-AS-AT-DATE + lnc_genYearsToAdd * 10000.
156500061215           MOVE li_genPlacementDate TO li_genPlacementDatePacked
156600061215      * ------------------------------------------
156700061215       get-base-currency.
156800061215      * ------------------------------------------
156900061215           SET Comm-Act-Get-Bas-Currency    TO TRUE
157000061215           CALL "FXBASCUR" USING Comm-Cpbascur-Parameters
157100061215           IF NOT Retn-OK OF Comm-Cpbascur-Parameters
157200061215             MOVE lnc_CAD       TO lc_BaseCurrency
157300061215           ELSE
157400061215             MOVE Retn-Currency OF Comm-Cpbascur-Parameters
157500061215                                TO lc_BaseCurrency
157600080611           END-IF.
157700080611      * ------------------------------------------
157800080611       get-sysparms.
157900080611      * ------------------------------------------
158000070129           CALL "RTVSYSPARM"  USING CPWSYSPARM-LINKAGE.
158100070129      * ------------------------------------------
158200070129       set-residual.
158300070129      * ------------------------------------------
158400070129      * If residual is entered then calculate residual units/gross/net
158500070202           IF ln_numResidual > 1
158600070202      * Set split option dollars for residual
158700130108             MOVE lnc_splitOptDollar    TO
158800070129                         ltbc_SplitOptionCode (li_currNumInvs)
158900070213             EVALUATE TRUE
159000070202               WHEN ln_AcctGrossAmt > 0
159100070213                 COMPUTE ln_tmpAmt =
159200070202                    ln_AcctGrossAmt - ln_totGrossAmt
159300070202                 IF ln_tmpAmt < 0
159400130110                   PERFORM set-initial-fail
159500070129                   MOVE lnc_grossExceedsResidual TO lc_BusinessError
159600070213                 END-IF
159700070202               WHEN ln_AcctNetAmt > 0
159800070213                 COMPUTE ln_tmpAmt =
159900070202                    ln_AcctNetAmt - ln_totNetAmt
160000070202                 IF ln_tmpAmt < 0
160100130110                   PERFORM set-initial-fail
160200070202                   MOVE lnc_netExceedsResidual   TO lc_BusinessError
160300070129                 END-IF
160400070129             END-EVALUATE
160500070108           END-IF.
160600070103      * ------------------------------------------
160700070108       set-investment-data.
160800070108      * ------------------------------------------
160900070108      * Loop through the array and set some missing data for
161000070131      *   the investment.
161100130108      * Initialize some variables
161200130108           PERFORM VARYING li_cnt FROM 1 BY 1
161300070207                   UNTIL li_cnt > li_currNumInvs   OR
161400130108                      NOT lb_initialOK
161500130108             IF ltbn_TradeDate (li_cnt) = 0
161600070115               MOVE ltbc_investmentCode (li_cnt)
161700070103                                        TO lc_tmpInvCode
161800130108               PERFORM get-trade-date
161900070103               MOVE ln_tmpTradeDate     TO ltbn_TradeDate (li_cnt)
162000070131             END-IF
162100130108
162200130108             IF ltbc_currency (li_cnt) = pc_Currency
162300130108               COMPUTE li_numInvWithCurrency =
162400070131                  li_numInvWithCurrency + 1
162500070207             END-IF
162600070207             IF NOT lb_allInvestmentsLoaded
162700070207               PERFORM validate-dup-investments
162800081121             END-IF
162900081121             IF lb_initialOK  AND
163000081103                pc_ReplaceAddTax NOT = SPACES
163100081103               PERFORM validate-withholding-tax
163200090831             END-IF
163300090831
163400090831
163500090831      * Check locked in/Assigned units
163600090831             IF lb_initialOK
163700130108               IF lnc_lockedInYes    AND
163800090831                  ltbc_IncludeAssignedUnits (li_cnt) NOT = lnc_Y
163900130110                 PERFORM set-initial-fail
164000090831                 MOVE lnc_shouldHaveAssigned   TO lc_BusinessError
164100090831               END-IF
164200070131             END-IF
164300070131           END-PERFORM
164400070207
164500070131           IF lb_initialOK
164600130108      * Check, if number invetments with this currency = 0
164700070207             IF li_numInvWithCurrency = 0
164800130110               PERFORM set-initial-fail
164900070207               MOVE lnc_NoInvWithCurrency TO lc_BusinessError
165000121120             END-IF
165100070207           END-IF.
165200070207      * ------------------------------------------
165300070207       validate-dup-investments.
165400070207      * ------------------------------------------
165500130108      * Check, if the reqest has duplicate investments
165600070207           COMPUTE ln_startNum = li_cnt + 1
165700070207           PERFORM VARYING ln_tmpCnt
165800130108             FROM ln_startNum BY 1
165900070207                   UNTIL ln_tmpCnt > li_currNumInvs   OR
166000130108                     NOT lb_initialOK
166100070207             IF ltbc_investmentCode (li_cnt) =
166200070207                  ltbc_investmentCode (ln_tmpCnt)
166300130110               PERFORM set-initial-fail
166400070207               MOVE lnc_dupInvestments TO lc_BusinessError
166500070207             END-IF
166600070108           END-PERFORM
166700070108      * ------------------------------------------
166800070108       get-trade-date.
166900070108      * ------------------------------------------
167000070108      * Get trade date for the investment using last unit price for
167100070126      * the investment.
167200070126           CALL "FXGETLUP" USING
167300070126                       lc_tmpInvCode
167400070126                       ln_tmpTradeDate
167500070126                       ln_tmpUnitPrice
167600070129                       ln_tmpInterestRate
167700081103                       lc_errCode2.
167800081103      * ------------------------------------------
167900081103       validate-withholding-tax.
168000081103      * ------------------------------------------
168100130108           INITIALIZE ln_tmpCnt
168200081103           MOVE ltbc_InvestmentType (li_cnt)   TO
168300130108                               lc_tmpInvestmentType
168400081103           MOVE ltbc_FormCode       (li_cnt)   TO
168500081103                               lc_tmpFormCode
168600081103           EXEC SQL
168700081103             SELECT COUNT(*)
168800081103             INTO :ln_tmpCnt
168900081103             FROM
169000081103               mfacouwtp
169100081103             WHERE
169200081103               country_code       = :lc_CountryCode               AND
169300081103               province_code      IN
169400081103                                 (:lnc_3Spaces, :lc_ProvinceCode) AND
169500081103               account_type_code  = :lc_accountTypeCode           AND
169600081103               contr_redem_code   = :lc_contrRedemCode            AND
169700081103               trans_type_code    = :lnc_SEL                      AND
169800081103               investment_type    = :lc_tmpInvestmentType         AND
169900081103               form_code          = :lc_tmpFormCode
170000081103           END-EXEC
170100130110           IF ln_tmpCnt = 0
170200081103             MOVE lnc_withholdingTax TO lc_BusinessError
170300081103             PERFORM set-initial-fail
170400070103           END-IF.
170500070103      * ------------------------------------------
170600070103       set-initial-fail.
170700070129      * ------------------------------------------
170800070129      * Set flag to indicate business error: no result data will be returned
170900070129      *  to the calling program(s).
171000070103      *
171100061229           SET lb_initialFail     TO TRUE.
171200061229      * ------------------------------------------
171300061229       check-system-availability.
171400061229      * ------------------------------------------
171500061229           INITIALIZE lb_SystemAvailable
171600061229           CALL   "FXCHKSYS" USING lb_SystemAvailable
171700061229
171800070129           IF lb_SystemDown
171900130110             PERFORM set-initial-fail
172000061229             MOVE  lnc_SystemNotAvailableId TO lc_BusinessError
172100080609           END-IF.
172200080610      * ------------------------------------------
172300080609       set-acc-level-withh-tax-flags.
172400080609      * ------------------------------------------
172500080609      * Check if it is account level withholding tax and if
172600080610      *  it is required 2 loops
172700080610
172800130110      * Set up flag to know if it is registred account
172900130104           IF lnc_AccountTypeRuleReg     AND
173000130104              lnc_ContrRedemCodeRuleAlw
173100080610             SET lnc_RegAccYes    TO TRUE
173200130104           ELSE
173300080610             SET lnc_RegAccNo     TO TRUE
173400080915           END-IF
173500130104           IF lnc_accWithholdingTaxYes
173600080925             MOVE 2       TO li_numTaxLoops
173700130104           ELSE
173800081118             MOVE 1       TO li_numTaxLoops
173900070108           END-IF.
174000070108      * ------------------------------------------
174100070108       detail-processing.
174200080530      * ------------------------------------------
174300081118           IF (lnc_accLevelFreeDollar  OR
174400130104               lnc_accLevelDsc )
174500070108             SET lnc_crtAccLvlFiles   TO TRUE
174600130104           ELSE
174700080602             SET lnc_crtAccLvlFilesNo TO TRUE
174800080602           END-IF
174900130104
175000130104           PERFORM VARYING li_currTaxLoop FROM 1 BY 1
175100080610                   UNTIL li_currTaxLoop > li_numTaxLoops
175200080610             PERFORM detail-fund-level-main
175300080610           END-PERFORM
175400080610      * Create result sets after
175500070108           PERFORM create-res-set-main.
175600080602      * -----------------------------------------
175700070108       detail-fund-level-main.
175800070108      * -----------------------------------------
175900070205      * Call TRNPST and build result sets
176000070205
176100070205      * For account level withholding tax do calculation for account
176200080530      *   level
176300080611           PERFORM create-clear-fund-acc-tables
176400080611           INITIALIZE
176500130104                      lc_accTotals
176600130104           IF lnc_regAccYes   AND
176700080908              li_currTaxLoop = li_numTaxLoops
176800080908             PERFORM  create-trans-add-tax
176900080610             PERFORM  override-trans-add-tax
177000130104           END-IF
177100080603           IF lnc_crtAccLvlFiles
177200080603             PERFORM  create-Acc-Lvl-files
177300080602             PERFORM  delete-from-Acc-Lvl-files
177400080602             PERFORM  populate-Acc-Lvl-files
177500080602             PERFORM  override-Acc-Lvl-files
177600130108           END-IF
177700130108           PERFORM VARYING li_cnt FROM 1 BY 1
177800070223                   UNTIL li_cnt > li_currNumInvs
177900130108      * Do the calculations only for one currency...
178000070223             IF ltbc_currency (li_cnt) = pc_currency
178100070223               PERFORM set-curr-data
178200070223               PERFORM update-LDA
178300070115               PERFORM call-trnpst
178400070223
178500070223               PERFORM get-LDA
178600070223               PERFORM save-returned-trnpst-data
178700070108             END-IF
178800130104           END-PERFORM
178900080604           IF lnc_crtAccLvlFiles
179000080610             PERFORM  delete-override-Acc-Lvl-files
179100130104           END-IF.
179200130104           IF lnc_regAccYes   AND
179300080610              li_currTaxLoop = li_numTaxLoops
179400080610             PERFORM  delete-override-trans-add-tax
179500080611           END-IF.
179600080611      * At the end of the first loop calculate additional tax
179700130104      *   for the add replace = "A" or spaces.
179800130104           IF lnc_regAccYes   AND
179900080908              li_currTaxLoop < li_numTaxLoops
180000080611             PERFORM  calc-trans-add-tax-regaccrcon
180100080908           END-IF.
180200080908      * -----------------------------------------
180300080908       calc-trans-add-tax-regaccrcon.
180400080908      * -----------------------------------------
180500080908      * Calculate trans-additional tax values
180600080908           INITIALIZE ln_calcFedTax
180700141117                      ln_calcProvTax
180800141117      *RFS125258 - Begin.
180900141117      *      CALL "SETCALENV2" USING  lnc_I lc_errCode2
181000141117      *      CALL "SETCALENV2" USING  lnc_C lc_errCode2
181100141117             MOVE  ZEROS TO    ln_CalDate
181200141117             CALL "SETCALENV2" USING  lnc_I ln_CalDate lc_errCode2
181300141117             CALL "SETCALENV2" USING  lnc_C ln_CalDate lc_errCode2
181400130102      *RFS125258 - End.
181500080909             SET lb_filesOverriden  TO TRUE
181600130102             PERFORM populate-mfadsccivp
181700080908             CALL "REGACCRCON" USING  lnc_cdscModeSACDSC
181800080908                                      pc_ReplaceAddTax
181900130102                                      pc_SplitTaxOption
182000130102                                      ln_FedTax
182100091013                                      ln_ProvTax
182200091013                                      lc_awdQcWhTax
182300091013                                      lc_FromAcct
182400141117                                      lc_ToAcct.
182500141117      *RFS125258 - Begin.
182600141117      *      CALL "SETCALENV2" USING  lnc_D lc_errCode2.
182700141117             MOVE  ZEROS TO  ln_CalDate.
182800141117             CALL "SETCALENV2" USING  lnc_D ln_CalDate lc_errCode2.
182900080908      *RFS125258 - End.
183000080908      * -----------------------------------------
183100080908       populate-mfadsccivp.
183200080909      * -----------------------------------------
183300080909           EXEC SQL
183400080909             DELETE FROM QTEMP/CDSCTRN
183500080909           END-EXEC
183600130108
183700130108           PERFORM VARYING li_cnt FROM 1 BY 1
183800130102                   UNTIL li_cnt > li_currNumInvs
183900130102             INITIALIZE lc_DSC-Calc-Investment-Rec
184000130102             MOVE li_ivrAcctno                    TO
184100130108                                          li_DSC-Account-No
184200130102             MOVE ltbc_investmentCode (li_cnt)    TO
184300130108                                          lc_DSC-Investment-Code
184400130102             MOVE ltbn_TradeDate      (li_cnt)    TO
184500080908                                          li_DSC-Trade-Date
184600130102             MOVE pc_ContRdmptnCode               TO
184700130108                                          lc_DSC-Contr-Redem-Cde
184800130102             MOVE ltbc_SplitOptionCode (li_cnt)   TO
184900130108                                          lc_DSC-Split-Option-Code
185000130102             MOVE ltbc_IncludeAssignedUnits (li_cnt) TO
185100130108                                          lc_DSC-Assignment-Certificate
185200130102             MOVE ltbn_CertificateIdNo (li_cnt)   TO
185300130109                                          li_DSC-Certificate-Id-No
185400130108                                          li_tmpCertificateIdNo
185500130102             MOVE ltbn_GrossAmt (li_cnt)          TO
185600130108                                          ln_DSC-Gross-Amt
185700130102             MOVE ltbn_NetAmt (li_cnt)            TO
185800130108                                          ln_DSC-Net-Amt
185900130102             MOVE ltbn_UnitAmt (li_cnt)           TO
186000130108                                          ln_DSC-Unit-Amt
186100130102             MOVE li_cnt                          TO
186200130108                                          li_DSC-SeqNo
186300080908             MOVE lc_DSC-Calc-Investment-Rec  TO lc_MfadsccivpRec
186400080908             EXEC SQL
186500130108               INSERT INTO QTEMP/MFADSCCIVP
186600080908                 VALUES ( :lc_MfadsccivpRec )
186700080909             END-EXEC
186800080909      * Create keys Data
186900080909             EXEC SQL
187000130102               INSERT INTO QTEMP/CDSCTRN
187100130102                 VALUES ( :li_DSC-Account-No,
187200130109                          :lc_DSC-Investment-Code,
187300130108                          :li_tmpCertificateIdNo,
187400130108                          :li_genPlacementDatePacked,
187500080909                          :li_cnt)
187600080908             END-EXEC
187700121120           END-PERFORM.
187800080603       Create-Acc-Lvl-files.
187900080603      * Create tables in QTEMP to be populated before
188000080603      * TRNPST and updated in TRNPST program.
188100130104           CALL "SETCALENV3" USING
188200080603                   lnc_crtfil
188300121120                   lc_errCodeSetCalEnv.
188400121120
188500080603       Delete-from-Acc-Lvl-files.
188600080603      * Delete data from QTEMP files.
188700130104           CALL "SETDSCDEL"  USING
188800080603                   lnc_deldta
188900121120                   lc_tmpErrCode.
189000080603
189100080604       populate-Acc-Lvl-files.
189200141117      * Insert data to QTEMP files.
189300080604125258     MOVE ZEROS TO ln_TradeDate.
189400130102           CALL "SETDSCINS"  USING
189500130104                   li_IvrAcctNo
189600141117                   lnc_insdta
189700080604125258             ln_TradeDate
189800080603                   lc_tmpErrCode.
189900080603      * -----------------------------------------
190000080603       override-Acc-Lvl-files.
190100080603      * -----------------------------------------
190200080603      * Override files in QTEMP library
190300130104           CALL "SETCALENV3" USING
190400080603                   lnc_ovrfil
190500080603                   lc_errCodeSetCalEnv.
190600080603      * -----------------------------------------
190700080603       delete-override-Acc-Lvl-files.
190800080604      * -----------------------------------------
190900080603      * Delete overrides to QTEMP library
191000130104           CALL "SETCALENV3" USING
191100080603                   lnc_dltovr
191200080610                   lc_errCodeSetCalEnv.
191300080610      * -----------------------------------------
191400080610       create-trans-add-tax.
191500080610      * -----------------------------------------
191600080610      * Create tables in QTEMP to be populated before
191700080610      * TRNPST and updated in TRNPST program.
191800130104           CALL "SETCALENV3" USING
191900080610                   lnc_crtfi1
192000080610                   lc_errCodeSetCalEnv.
192100080610      * -----------------------------------------
192200080610       delete-from-trans-add-tax.
192300080610      * -----------------------------------------
192400080610      * Delete data from QTEMP files.
192500130104           CALL "SETDSCDEL"  USING
192600080610                   lnc_deldt1
192700080610                   lc_tmpErrCode.
192800080610      * -----------------------------------------
192900080610       override-trans-add-tax.
193000080610      * -----------------------------------------
193100080610      * Override files in QTEMP library
193200130104           CALL "SETCALENV3" USING
193300080610                   lnc_ovrfi1
193400080610                   lc_errCodeSetCalEnv.
193500080610      * -----------------------------------------
193600080610       delete-override-trans-add-tax.
193700080610      * -----------------------------------------
193800080610      * Delete overrides to QTEMP library
193900130104           CALL "SETCALENV3" USING
194000080610                   lnc_dltov1
194100080610                   lc_errCodeSetCalEnv.
194200080530      *-----------------------------------------
194300080530       create-res-set-main.
194400080530      * -----------------------------------------
194500080530      * Manage result sets: perform special paragraph for
194600080530      *   account level DSC environment.
194700080530           IF lnc_accLevelFreeDollar  OR
194800080530              lnc_accLevelDsc
194900080530             PERFORM create-acc-res-set
195000080530           ELSE
195100080530             PERFORM create-fund-res-set
195200070108           END-IF.
195300080530      * -----------------------------------------
195400070108       create-clear-fund-acc-tables.
195500080530      * -----------------------------------------
195600070112      * Create tables used in result sets
195700070112           PERFORM create-dedList-table
195800070112
195900080529           PERFORM create-dsc-calc-table
196000080908           PERFORM create-dsc-calc-table2
196100080908           PERFORM create-mfadsccivp
196200070112           PERFORM create-dsc-calc-InvSum.
196300070112      * -----------------------------------------
196400070112       create-dedList-table.
196500070115      * -----------------------------------------
196600070115      * Check & create for DSCCalcInvDedList DB table:
196700070122      * Deductions will be saved in this table.
196800070122      * Note: this file will be populated by SP, using data from LDA/
196900070126      *   TRNPST.
197000070126           CALL "FXDSCCRTT" USING
197100070129                           lnc_dedList
197200070112                           lc_errCode2.
197300070112      * -----------------------------------------
197400070112       create-dsc-calc-table.
197500070122      * -----------------------------------------
197600070122      * Check & create DSC Calc Table
197700070112      * This table is populated by TRNPST program.
197800070126
197900070126           CALL "FXDSCCRTT" USING
198000070129                           lnc_MFADSCCALP
198100080529                           lc_errCode2.
198200080529      * -----------------------------------------
198300080529       create-dsc-calc-table2.
198400080529      * -----------------------------------------
198500080529      * Check & create DSC Calc Table for acc level dsc
198600080529      * This table is populated by TRNPST program.
198700080529
198800080529           CALL "FXDSCCRTT" USING
198900080529                           lnc_MFADSCCA2P
199000080908                           lc_errCode2.
199100080908      * -----------------------------------------
199200080908       create-mfadsccivp.
199300080908      * -----------------------------------------
199400080908      * Check & create DSC acc-inv table for regacccon
199500080908
199600080908           CALL "FXDSCCRTT" USING
199700080908                           lnc_MFADSCCIVP
199800070115                           lc_errCode2.
199900070115      * -----------------------------------------
200000070115       create-dsc-calc-InvSum.
200100070115      * -----------------------------------------
200200070122      * Check & create DSC Calc Investment Summary Table
200300070122      * This table will be populated by SP program using LDA
200400070122      * /TRNPST returned data.
200500070115      * (Based (but diff) on the Table:DSC-CALC-INVESTMENT,MFADSCCIVP)
200600070126
200700070126           CALL "FXDSCCRTT" USING
200800070129                               lnc_invSum
200900070115                               lc_errCode2.
201000070115      * -----------------------------------------
201100070115       set-curr-data.
201200070122      * -----------------------------------------
201300070221      * Set current data used for the current loop
201400070221           INITIALIZE lc_invsumRec
201500130108
201600070122           MOVE ltbc_InvestmentCode       (li_cnt) TO
201700130108                                    lc_currInvestmentCode
201800061215           MOVE ltbc_FundCode             (li_cnt) TO
201900130108                                    lc_currFundCode
202000070122           MOVE ltbn_TradeDate            (li_cnt) TO
202100130108                                    ln_currTradeDate
202200070122           MOVE ltbc_SplitOptionCode      (li_cnt) TO
202300130108                                    lc_currSplitOptionCode
202400070207           MOVE ltbc_IncludeAssignedUnits (li_cnt) TO
202500130108                                    lc_currIncludeAssignedUnits
202600070206           MOVE ltbc_CertificateNo        (li_cnt) TO
202700130108                                    lc_currCertificateNo
202800070202           MOVE ltbn_CertificateIdNo       (li_cnt) TO
202900070202                                    ln_currCertificateIdNo
203000070207
203100070207      * Set assignment certificate
203200070207           PERFORM set-AssignEmnt-certificate
203300070202
203400070202      * Check if it is residual record and calculate amount
203500130108
203600070202           IF ltbc_SplitOptionCode (li_cnt) =  lnc_residual
203700070213             EVALUATE TRUE
203800130108               WHEN ln_AcctGrossAmt > 0
203900070213                 COMPUTE ltbn_grossAmt (li_cnt) =
204000130108                           ln_AcctGrossAmt - ln_accTotGrossAmt
204100130108                 IF ltbn_grossAmt (li_cnt) < 0
204200070202                   MOVE 0 TO ltbn_grossAmt (li_cnt)
204300070213                 END-IF
204400130108               WHEN ln_AcctNetAmt > 0
204500070213                 COMPUTE ltbn_netAmt (li_cnt) =
204600130108                           ln_AcctNetAmt - ln_accTotNetAmt
204700130108                 IF ltbn_netAmt (li_cnt) < 0
204800070202                   MOVE 0 TO ltbn_netAmt (li_cnt)
204900070202                 END-IF
205000070202             END-EVALUATE
205100070202           END-IF
205200070207           .
205300070207      * -----------------------------------------
205400070207       set-AssignEmnt-certificate.
205500070221      * -----------------------------------------
205600070207      * Get what is assignment certificate value for the investment
205700070301
205800070207           SET lnc_currAssignedUnitsNo    TO TRUE
205900070207           EVALUATE TRUE
206000070207             WHEN lnc_accAssignEntireYes
206100070227               MOVE lc_accAssignEntire      TO
206200070207                                    lc_currAssignedUnits
206300070207             WHEN lnc_accAssignEntireNo
206400070207               PERFORM get-inv-level-acc-assignment
206500070227                 MOVE lc_tmpAssign          TO
206600070207                                    lc_currAssignedUnits
206700070207             WHEN OTHER
206800070207               PERFORM get-acc-level-acc-assignment
206900070207               IF lnc_accAssignEntireYes
207000070227                 MOVE lc_accAssignEntire    TO
207100070207                                    lc_currAssignedUnits
207200070207               ELSE
207300070207                 PERFORM get-inv-level-acc-assignment
207400070227                 MOVE lc_tmpAssign          TO
207500070207                                    lc_currAssignedUnits
207600070207               END-IF
207700070207           END-EVALUATE
207800070207
207900070207      * -----------------------------------------
208000070207       get-inv-level-acc-assignment.
208100070207      * -----------------------------------------
208200070301      * set assignment flag for the current account investment
208300070207           SET lnc_tmpAssignNo     TO TRUE
208400070207
208500070207           EXEC SQL
208600070207             SELECT COUNT(*)
208700070207             INTO
208800070207               :ln_tmpSqlCounter :li_tmpInd1
208900070207             FROM
209000070207               mfaaccasp
209100130102             WHERE
209200070207               account_no        = :li_IvrAcctNo          AND
209300070207               investment_code   = :lc_currInvestmentCode AND
209400070207               (entire_account   = :lnc_Y OR
209500070207                units            > 0)                     AND
209600130104               assignment_status = :lnc_A                 AND
209700070207               (start_date <= :li_lastProcessDate AND
209800130104                  (end_date = 0   OR
209900070207                   end_date >= :li_lastProcessDate))
210000070207           END-EXEC
210100140518
210200140518135101     MOVE SQLSTATE TO Ic_SqlStates
210300140518135101*    IF SQLSTATE = lnc_SuccessMsgId
210400070207135101     IF Incc_sqlSuccessful
210500070207             IF ln_tmpSqlCounter > 0
210600070207               MOVE lnc_Y    TO lc_tmpAssign
210700140518             END-IF
210800070207           END-IF.
210900070207      * -----------------------------------------
211000070207       get-acc-level-acc-assignment.
211100070207      * -----------------------------------------
211200070207      * Get account level assignemnt
211300070207           SET lnc_accAssignEntireNo       TO TRUE
211400070207
211500070207           EXEC SQL
211600070207             SELECT COUNT(*)
211700070207             INTO
211800070207               :ln_tmpSqlCounter :li_tmpInd1
211900070207             FROM
212000070207               mfaaccasp
212100130102             WHERE
212200070207               account_no        = :li_IvrAcctNo    AND
212300070207               entire_account    = :lnc_Y           AND
212400070207               assignment_status = :lnc_A
212500070207           END-EXEC
212600140518
212700140518135101     MOVE SQLSTATE TO Ic_SqlStates
212800140518135101*    IF SQLSTATE = lnc_SuccessMsgId
212900070207135101     IF Incc_sqlSuccessful
213000070207             IF ln_tmpSqlCounter > 0
213100070207                SET lnc_accAssignEntireYes TO TRUE
213200140518             END-IF
213300070108           END-IF.
213400070108      * -----------------------------------------
213500070108       update-LDA.
213600061215      * -----------------------------------------
213700130104           INITIALIZE WS-LOCAL-DATA-AREA
213800080604           IF lnc_crtAccLvlFiles
213900080604             MOVE lnc_CDSCCalcSOAUpd         TO PASS-CDSC-CALCULATOR
214000080604           ELSE
214100080604             MOVE lnc_CDSCCalcSOA            TO PASS-CDSC-CALCULATOR
214200070122           END-IF
214300130102
214400130108           MOVE li_IvrAcctNo                    TO PASS-CDSC-ACCOUNT
214500070122           MOVE ltbc_investmentCode    (li_cnt) TO
214600130108                                           PASS-CDSC-INVESTMENT
214700070122           MOVE ltbn_tradeDate         (li_cnt) TO PASS-CDSC-TRADE-DATE
214800070122           MOVE pc_ContRdmptnCode               TO PASS-REDEM-CODE
214900130108
215000130108           MOVE ltbn_grossAmt          (li_cnt) TO PASS-CDSC-GROSS
215100130108           MOVE ltbn_netAmt            (li_cnt) TO PASS-CDSC-NET
215200070122           MOVE ltbn_unitAmt           (li_cnt) TO PASS-CDSC-UNITS
215300130108
215400070301           IF ltbc_SplitOptionCode (li_cnt) =  lnc_residual
215500070301             MOVE lnc_splitOptDollar              TO PASS-SPLIT-OPTION
215600130108           ELSE
215700070301             MOVE ltbc_splitOptionCode   (li_cnt) TO PASS-SPLIT-OPTION
215800070122           END-IF
215900130108           MOVE pc_AWDRedemptionFlag            TO PASS-TREAT-AWD
216000130108           MOVE ltbn_CertificateIdNo   (li_cnt) TO PASS-CERT-ID
216100070122           MOVE ltbc_IncludeAssignedUnits (li_cnt)  TO
216200070122                                          PASS-ASSIGNMENT-CERTIFICATE
216300130108
216400070123           MOVE li_cnt                          TO pass-seqno
216500070122                                                   ln_currSeqNo
216600070122           MOVE pc_WaiveDsc                     TO PASS-WAIVE-DSC
216700070122           MOVE pc_WaiveErf                     TO PASS-WAIVE-ERF
216800130104
216900080602           MOVE li_genPlacementDate             TO
217000130108                                         PASS-GEN-PLACEMENT-DATE
217100080602           MOVE li_cnt                          TO
217200061215                                         PASS-GEN-TRANS-NO
217300070108           DISPLAY WS-LOCAL-DATA-AREA
217400070108             UPON lc_local.
217500070108      * -----------------------------------------
217600070108       call-trnpst.
217700070108      * -----------------------------------------
217800070108           CALL "TRNPST" USING
217900070115                         PRCDTP-AS-AT-DATE OF CPWPRCDTP-LINKAGE.
218000070115      * -----------------------------------------
218100070115       get-LDA.
218200070115      * -----------------------------------------
218300061215      * Get data from LDA: deductions
218400070122           ACCEPT WS-LOCAL-DATA-AREA FROM lc_local.
218500070122      * -----------------------------------------
218600070122       save-returned-trnpst-data.
218700070208      * -----------------------------------------
218800070208           PERFORM initialize-totals
218900070206
219000070208           PERFORM set-curr-data-retn-from-trnpst
219100070208           PERFORM save-calc-deductions
219200070208           PERFORM calc-dsc-fee-as-per-of-net
219300070221
219400070221           PERFORM calc-acc-inv-totals
219500070221           PERFORM save-calc-dscCalcInvSum
219600070206
219700070206           IF PASS-REJECTION-CODE = SPACES OR
219800070208              PASS-REJECTION-CODE-OK
219900070206             CONTINUE
220000070206           ELSE
220100070206             PERFORM set-acc-err-code
220200070125           END-IF
220300070131           .
220400070131      * ----------------------------------------
220500070131       initialize-totals.
220600070131      * ----------------------------------------
220700070131      * Initialize totals per investment
220800070227           INITIALIZE ln_totFederalTaxAmt
220900070131                      ln_totProvincialTaxAmt
221000070131                      ln_totDscAmt
221100070131                      ln_totOtherDeductionAmt
221200070206                      ln_totDeducitonAmt
221300070206                      ln_currGrossAmt
221400070206                      ln_currNetAmt
221500080611                      ln_currUnitAmt
221600070131                      ln_accTotTaxForGrossOrNet
221700070122           .
221800070122      * -----------------------------------------
221900070122       set-curr-data-retn-from-trnpst.
222000070123      * -----------------------------------------
222100070122      * Set some data returned from TRNPST
222200070122           MOVE PASS-CDSC-GROSS      TO ln_currGrossAmt
222300070123           MOVE PASS-CDSC-NET        TO ln_currNetAmt
222400070123           MOVE PASS-CDSC-UNITS      TO ln_currUnitAmt
222500070123
222600061215           MOVE PASS-REJECTION-CODE  TO lc_currRejectionCode
222700061215
222800061215           MOVE PASS-SPLIT-OPTION    TO lc_currSplitOptionCode
222900061215           MOVE PASS-REDEM-CODE      TO lc_currContrRedemCode
223000070115           .
223100070122      * -----------------------------------------
223200070115       save-calc-deductions.
223300070122      * -----------------------------------------
223400070131      * Loop through deductions, save them and calculate some
223500070122      * tots for the deductions.
223600070115      *
223700070115           PERFORM VARYING ln_dedCnt
223800070125                   FROM 1 BY 1
223900070115                   UNTIL ln_dedCnt > lnc_maxDeductions  OR
224000070130                         PASS-DEDUCT-CODE (ln_dedCnt) = SPACES
224100070130             MOVE lc_currInvestmentCode        TO lc_dedInvestmentCode
224200070131             MOVE PASS-DEDUCT-CODE (ln_dedCnt) TO lc_dedDeductonCode
224300130104             MOVE PASS-DEDUCT-AMT (ln_dedCnt)  TO ln_dedDeductionAmt
224400080612             IF li_currTaxLoop = li_numTaxLoops
224500080612               EXEC SQL
224600080612                INSERT
224700080612                INTO QTEMP/dedlist
224800080612                VALUES (:lc_dedlistRec)
224900080612               END-EXEC
225000070131             END-IF
225100070115             PERFORM calc-tot-deductions
225200070122           END-PERFORM.
225300070131      * -----------------------------------------
225400070122       calc-tot-deductions.
225500070131      * -----------------------------------------
225600070131           COMPUTE ln_totDeducitonAmt =
225700070122                      ln_totDeducitonAmt + ln_dedDeductionAmt
225800070122           EVALUATE TRUE
225900070131             WHEN lnc_PRVT
226000070131               COMPUTE ln_totProvincialTaxAmt =
226100070122                  ln_totProvincialTaxAmt + ln_dedDeductionAmt
226200070131             WHEN lnc_FEDT
226300070131               COMPUTE ln_totFederalTaxAmt =
226400070122                  ln_totFederalTaxAmt + ln_dedDeductionAmt
226500070131             WHEN lnc_CDSC
226600070131               COMPUTE ln_totDscAmt =
226700070122                  ln_totDscAmt + ln_dedDeductionAmt
226800070131             WHEN OTHER
226900070131               COMPUTE ln_totOtherDeductionAmt =
227000070122                  ln_totOtherDeductionAmt + ln_dedDeductionAmt
227100080611           END-EVALUATE.
227200080611           IF lnc_taxForGrossOrNet
227300080611             COMPUTE ln_accTotTaxForGrossOrNet =
227400080611               ln_accTotTaxForGrossOrNet + ln_dedDeductionAmt
227500070131           END-IF.
227600070221      * -----------------------------------------
227700070131       calc-acc-inv-totals.
227800070221      * -----------------------------------------
227900070131      * Calculate totals at account level
228000070131           COMPUTE ln_accTotDeducitonAmt =
228100070131              ln_accTotDeducitonAmt     + ln_totDeducitonAmt
228200070131
228300070131           COMPUTE ln_accTotProvincialTaxAmt =
228400070221              ln_accTotProvincialTaxAmt + ln_totProvincialTaxAmt
228500070221           COMPUTE ln_invProvincialTaxAmt =
228600070221                                          ln_totProvincialTaxAmt
228700070131
228800070131           COMPUTE ln_accTotFederalTaxAmt =
228900070221              ln_accTotFederalTaxAmt    + ln_totFederalTaxAmt
229000070221           COMPUTE ln_invFederalTaxAmt =
229100070221                                          ln_totFederalTaxAmt
229200070131
229300070131           COMPUTE ln_accTotProvFedTaxAmt =
229400070131              ln_accTotProvFedTaxAmt + ln_totProvincialTaxAmt
229500070131                                     + ln_totFederalTaxAmt
229600070131
229700070131           COMPUTE ln_accTotDscAmt =
229800070221              ln_accTotDscAmt           + ln_totDscAmt
229900070131           COMPUTE ln_invDscAmt    = ln_totDscAmt
230000070131
230100070131           COMPUTE ln_accTotOtherDeductionAmt =
230200070221              ln_accTotOtherDeductionAmt + ln_totOtherDeductionAmt
230300070221           COMPUTE ln_invOtherDeductionAmt = ln_totOtherDeductionAmt
230400070131
230500070131      * Gross, net , units:
230600070131           COMPUTE ln_accTotGrossAmt =
230700070131              ln_accTotGrossAmt + ln_currGrossAmt
230800070131           COMPUTE ln_accTotNetAmt =
230900070131              ln_accTotNetAmt + ln_currNetAmt
231000070131           COMPUTE ln_accTotUnitAmt =
231100070131              ln_accTotUnitAmt + ln_currUnitAmt
231200070122           .
231300070122      * -----------------------------------------
231400070122       calc-dsc-fee-as-per-of-net.
231500070122      * -----------------------------------------
231600070122      * Calculate dsc fee as percent of the Net amount
231700070122           INITIALIZE ln_dscFeeAsPerOfNetAmt
231800070122           IF PASS-CDSC-NET NOT = 0
231900070131             COMPUTE ln_dscFeeAsPerOfNetAmt ROUNDED =
232000070122               lnc_hundredPerc * ln_totDscAmt / PASS-CDSC-NET
232100070122           END-IF.
232200070122      * -----------------------------------------
232300070122       save-calc-dscCalcInvSum.
232400070122      * -----------------------------------------
232500130104      * Save investment summary record
232600080612             IF li_currTaxLoop = li_numTaxLoops
232700080612               EXEC SQL
232800080612                INSERT
232900080612                INTO QTEMP/INVSUM
233000080612                 VALUES
233100080612                   (:lc_invsumRec)
233200080612               END-EXEC
233300080612             END-IF
233400070129             .
233500070129      * -----------------------------------------
233600070129       set-acc-err-code.
233700070129      * -----------------------------------------
233800070206      * Set account level error code and description
233900070206             MOVE lc_errAccLevel    TO lc_ErrorCode
234000070206                                       lc_retnAccLevelErr
234100070206             PERFORM get-message-description
234200070206             MOVE lc_MessageDesc    TO lc_retnAccMessageDesc
234300080529             .
234400080530      * -----------------------------------------
234500080529       create-acc-res-set.
234600080529      * -----------------------------------------
234700080529      * For the account level declare cusrors
234800080529           PERFORM set-accsum-cursor
234900080529           PERFORM set-invsum-cursor
235000080529           PERFORM set-dedlist-cursor
235100080529      * Return account level dsc deductions/charges
235200080529           PERFORM set-accdtl-cursor
235300130111      * Return account level result sets
235400080529112770     PERFORM setAccLvlFreeCursor
235500080529           PERFORM set-acc-level-result-sets
235600070115           .
235700070108      * -----------------------------------------
235800070108       create-fund-res-set.
235900070130      * -----------------------------------------
236000070131      * For the fund level declare cusrors
236100070131           PERFORM set-accsum-cursor
236200070131           PERFORM set-invsum-cursor
236300070131           PERFORM set-dedlist-cursor
236400070131           IF pc_acctlevelReqNo
236500070131             CONTINUE
236600070131           ELSE
236700070131             PERFORM set-invdtl-cursor
236800070131           END-IF
236900070131      * Set result sets (do not return invdtl if not asked for this)
237000070131           PERFORM set-fund-level-result-sets
237100070131           .
237200070131      * -----------------------------------------
237300070131       set-accsum-cursor.
237400070131      * ----------------- ------------------------
237500070131             EXEC SQL
237600070131              DECLARE cu_accsum CURSOR
237700130102               FOR SELECT
237800070220               :li_IvrAcctNo AS ivr_Acc_No,
237900070220               :ln_accTotGrossAmt AS total_Gross_Amt,
238000070220               :ln_accTotDscAmt   AS total_Dsc_Amt,
238100070220               :ln_accTotProvFedTaxAmt     AS total_Prov_Fed_Tax_Amt,
238200070220               :ln_accTotOtherDeductionAmt AS Total_Other_Deduction_Amt,
238300070220               :ln_accTotNetAmt AS total_Net_Amt,
238400070220               :lnc_amtZero     AS total_Fee_Amt_Used,
238500070220               :lnc_amtZero     AS total_Charge_Amt_Used,
238600070221               :lnc_amtZero     AS total_Fee_Charge,
238700070221               :lnc_amtZero     AS total_Deposit_Equivalent_Amt,
238800121227               :lc_retnAccLevelErr    AS acc_Level_Err_Code,
238900121227               :lc_retnAccMessageDesc AS acc_Level_Err_Desc,
239000070131               :lc_accountTypeCode AS Account_Type
239100070131               FROM
239200070131                QSQPTABL
239300070131             END-EXEC
239400070131
239500070131             EXEC SQL
239600070131               OPEN cu_accsum
239700070130             END-EXEC.
239800070130      * -----------------------------------------
239900070130       set-invsum-cursor.
240000070131      * -----------------------------------------
240100070130      * Investment summary
240200070130             EXEC SQL
240300070130               DECLARE cu_invsum CURSOR
240400070130                 FOR SELECT
240500070220                  invsum.investment_code,
240600070220                  COALESCE(invnmp.investment_name_long,:lnc_space35)
240700070130                                   AS investment_name_long,
240800070130                  invsum.industry_fund_code,
240900070130
241000070130                  invsum.trade_date,
241100070130                  invsum.split_option_code,
241200070227                  splopp.split_option_descr,
241300070130                  invsum. include_assigned_units,
241400070206
241500070130                  invsum.certificate_no,
241600070130                  invsum.gross_amt,
241700070130                  invsum.net_amt,
241800070130                  invsum.unit_amt,
241900070130
242000070221                  invsum.dsc_amt,
242100070221                  invsum.provincial_tax_amt + invsum.federal_tax_amt
242200070130                                   AS Prov_And_Federal_Tax,
242300070228                  invsum.other_deduction_amt,
242400070227                  dsc_fee_as_per_of_net_amt,
242500070130                  invsum.assigned_units,
242600070220                  invsum.rejection_code,
242700121227                  COALESCE( rejcdp.rejection_descr, :lnc_space25)
242800121227                                          AS rejection_descr,
242900121227                  COALESCE( Accivp.Curr_Unit_Bal, 0.0) AS Unit_Held,
243000130602                  COALESCE(Invupp.Unit_Price, 0.0) As Unit_Price
243100070130                  ,:li_AsOfDate                    As AsOfDate
243200070131                 FROM
243300070131                  QTEMP/invsum
243400070131                    LEFT OUTER JOIN mfainvnmp invnmp ON
243500070131                  invsum.investment_code   = invnmp.investment_code AND
243600070131                  invnmp.language_code     = :lc_currLanguageCode
243700070131                               JOIN mfasplopp splopp ON
243800070131                  invsum.split_option_code = splopp.split_option_code
243900070131                    LEFT OUTER JOIN mfarejcdp rejcdp ON
244000121227                  invsum.rejection_code    = rejcdp.rejection_code
244100121227
244200121228                 LEFT OUTER JOIN MFAINVUPP Invupp ON
244300121228                 Invsum.Investment_Code = Invupp.Investment_Code AND
244400121227                 Invsum.Trade_Date = Invupp.Trade_Date
244500121227
244600121227                 LEFT OUTER JOIN MFAACCIVP Accivp ON
244700130102                 Invsum.Investment_Code = Accivp.Investment_Code AND
244800121227                 Accivp.Account_No = :li_IvrAcctNo
244900070130
245000070130                 ORDER BY
245100070130                   invsum.seqno
245200070131             END-EXEC
245300070130
245400070130             EXEC SQL
245500070130               OPEN cu_invsum
245600070130             END-EXEC.
245700070130      * -----------------------------------------
245800070130       set-dedlist-cursor.
245900070131      * -----------------------------------------
246000070131      * Deductions
246100070131             EXEC SQL
246200070131              DECLARE cu_dedlist CURSOR
246300070131               FOR SELECT
246400070131                dedlist.investment_code,
246500070220                dedlist.deduction_code,
246600070220                COALESCE(trndep.deduction_short_descr, :lnc_space10)
246700070131                                 AS deduction_short_descr,
246800070131                dedlist.deductionAmt
246900070131               FROM
247000070131                QTEMP/dedlist
247100070220                  LEFT OUTER JOIN mfatrndep trndep ON
247200070131                dedlist.deduction_code  = trndep.deduction_code AND
247300070430                trndep.language_code    = :lc_currLanguageCode
247400070430                             JOIN QTEMP/invsum     ON
247500070430                 dedlist.investment_code = invsum.investment_code
247600070430               ORDER BY
247700070131                  invsum.seqno
247800070131             END-EXEC
247900070131
248000070131             EXEC SQL
248100070131               OPEN cu_dedlist
248200070131             END-EXEC.
248300070131      * -----------------------------------------
248400070131       set-invdtl-cursor.
248500070131      * -----------------------------------------
248600070201      * Investment detail DSC charges
248700070201      * (Exclude excluded schedules in one selection)
248800070201             IF pc_DispDscSchedYes
248900070202               EXEC SQL
249000070201                DECLARE cu_invdtl1 CURSOR
249100070430                 FOR SELECT
249200070201                  dsccalp.investment_code,
249300070430                  purchase_date,
249400070201                  dsccalp.unit_amt,
249500070201                  rate,
249600070201                  charge,
249700070201                  financer_schedule,
249800070201                  charge_cdsc_on_orig_or_market
249900070201                 FROM
250000070430                  QTEMP/MFADSCCALP dsccalp
250100070430                             JOIN QTEMP/invsum     ON
250200070430                 dsccalp.investment_code = invsum.investment_code
250300070430               ORDER BY
250400070201                  invsum.seqno
250500070202               END-EXEC
250600070202
250700070202               EXEC SQL
250800070202                 OPEN cu_invdtl1
250900070201               END-EXEC
251000070201             ELSE
251100070202               EXEC SQL
251200070201                DECLARE cu_invdtl2 CURSOR
251300070430                 FOR SELECT
251400070201                  dsccalp.investment_code,
251500070430                  purchase_date,
251600070201                  dsccalp.unit_amt,
251700070201                  rate,
251800070201                  charge,
251900070201                  financer_schedule,
252000070201                  charge_cdsc_on_orig_or_market
252100070201                 FROM
252200070430                  QTEMP/MFADSCCALP dsccalp
252300070430                             JOIN QTEMP/invsum        ON
252400070201                 dsccalp.investment_code = invsum.investment_code
252500070201                 WHERE NOT EXISTS
252600070201                   (SELECT *
252700070201                    FROM
252800070201                      MFADSCCXP dsccxp
252900070201                    WHERE
253000070430                      dsccalp.cdsc_schedule = dsccxp.cdsc_schedule)
253100070430                 ORDER BY
253200070201                   invsum.seqno
253300070202               END-EXEC
253400070202
253500070202               EXEC SQL
253600070202                 OPEN cu_invdtl2
253700070201               END-EXEC
253800080529             END-IF
253900080529          .
254000080529      * -----------------------------------------
254100080529       set-accdtl-cursor.
254200080529      * -----------------------------------------
254300080530      * Account level detail DSC charges
254400080530
254500080530      * Passed PASS-CDSC-TRADE-DATE trade date
254600080530      * will be used to display data in years
254700080530      *   (Calculate age in years by comparing dates and
254800130104      *    subtructing one date from another)
254900080529             MOVE PASS-CDSC-TRADE-DATE TO li_cdscTradeDate
255000080529             EXEC SQL
255100080529              DECLARE cu_accdtl1 CURSOR
255200080530               FOR SELECT
255300080529                CAST (
255400080529                  CASE
255500130104                    WHEN
255600080529                      :li_cdscTradeDate = 0  OR
255700130104                      age_date          = 0  OR
255800080529                      age_date > :li_cdscTradeDate
255900080529                     THEN 0
256000080530                    WHEN
256100080529                      (:lc_cdscTradeDateMM   >
256200080530                           SUBSTRING(age_date,5,2))    OR
256300080529                      (:lc_cdscTradeDateMM   =
256400080530                           SUBSTRING(age_date,5,2) AND
256500080529                       :lc_cdscTradeDateDD   >=
256600080529                             SUBSTRING(age_date,7,2))
256700130104                     THEN
256800081119                        :lc_cdscTradeDateCCYY2 -
256900080529                      CAST(SUBSTRING(age_date,1,4) AS NUMERIC(4,0))
257000130104                    ELSE
257100081119                        :lc_cdscTradeDateCCYY2 - 1 -
257200080530                      CAST(SUBSTRING(age_date,1,4) AS NUMERIC(4,0))
257300080530                  END  AS NUMERIC (4,0) )
257400080530                                         AS age_yr,
257500080530                  free_dollars_used,
257600080530                 (chrg_units_taken_down -
257700080530                    free_dollars_used)   AS chrg_dif,
257800080530                  percent_applied,
257900080530                  cum_deposit_left,
258000100103                  age_date,
258100121228                  cdsc_charged,
258200080529                  original_doll_value
258300080529                 FROM
258400080529                  QTEMP/MFADSCCA2P dscca2p
258500080529               ORDER BY
258600080529                  dscca2p.age_date
258700080529               END-EXEC
258800080529
258900080529               EXEC SQL
259000080529                 OPEN cu_accdtl1
259100080529               END-EXEC
259200130111           .
259300130111      * RFS112770 - begin
259400130111      * -----------------------------------------
259500130111       setAccLvlFreeCursor.
259600130111      * -----------------------------------------
259700130111           COMPUTE li_Year = PRCDTP-AS-AT-DATE / 10000
259800130111           MOVE pc_Currency TO  lc_Currency
259900130111            EXEC SQL
260000130111             DECLARE lcu_accLvlFreeCursror CURSOR
260100130111             FOR SELECT
260200130111                  Currency              AS CurrencyType,
260300130111                  Free_Dollars          AS FreeDollar,
260400130111                  CAST(YEAR AS NUMERIC(4,0)) AS Year,
260500130111                  Market_Value          AS MarketValue,
260600130111                  Additional_Deposits   AS AddDeposits,
260700130111                  Free_Withdrawal_Taken AS FreeWdlTaken,
260800130111                  Free_Dollars + Free_Withdrawal_Taken
260900130111                                        AS FreeAllocAmt
261000130111             FROM QTEMP/MFAALVFAP
261100130111             WHERE Account_No = :li_IvrAcctNo  AND
261200130111                    YEAR     = :li_Year       AND
261300130111                    Currency   = :lc_Currency
261400130111             ORDER BY YEAR
261500130111            END-EXEC
261600130111
261700130111            EXEC SQL
261800130111             OPEN lcu_accLvlFreeCursror
261900130111            END-EXEC.
262000070108      * RFS112770 - end
262100061229      * -----------------------------------------
262200070108       get-message-description.
262300070202      * -----------------------------------------
262400070115           CALL  "FXMESSAGE" USING lc_MessageCode
262500070202                                   lc_currLanguageCode
262600070108                                   lc_MessageDesc.
262700061215      * -----------------------------------------
262800061215       process-user-index.
262900061215      * -----------------------------------------
263000061215      * Get special module authorization - call module.
263100061215           CALL  "FXSPCMAUT" USING
263200061215                              pc_spcmautModuleId
263300061215                              pc_spcmautCompanyCode
263400061229                              pc_spcmautSuccessful.
263500070131      * ------------------------------------------
263600070131       set-fund-level-result-sets.
263700070131      * ------------------------------------------
263800070131           IF pc_acctlevelReqNo
263900070131             EXEC SQL
264000070131               SET RESULT SETS
264100070131                 CURSOR cu_accsum,
264200070131                 CURSOR cu_invsum,
264300070131                 CURSOR cu_dedlist
264400070131             END-EXEC
264500070202           ELSE
264600070202             IF pc_DispDscSchedYes
264700070202               EXEC SQL
264800070202                 SET RESULT SETS
264900070202                   CURSOR cu_accsum,
265000070202                   CURSOR cu_invsum,
265100070202                   CURSOR cu_dedlist,
265200070202                   CURSOR cu_invdtl1
265300070202               END-EXEC
265400070202             ELSE
265500070202               EXEC SQL
265600070202                 SET RESULT SETS
265700070202                   CURSOR cu_accsum,
265800070202                   CURSOR cu_invsum,
265900070202                   CURSOR cu_dedlist,
266000070202                   CURSOR cu_invdtl2
266100070202               END-EXEC
266200070131             END-IF
266300080529           END-IF.
266400080529      * ------------------------------------------
266500080529       set-acc-level-result-sets.
266600080529      * ------------------------------------------
266700080529      * Set account level result sets
266800080529           EXEC SQL
266900080529             SET RESULT SETS
267000080529               CURSOR cu_accsum,
267100080529               CURSOR cu_invsum,
267200080529               CURSOR cu_dedlist,
267300130111      * This is specific to account level dsc cursor
267400130111      *RFS112770 - begin
267500130111      *        CURSOR cu_accdtl1
267600130111               CURSOR cu_accdtl1,
267700130111               CURSOR lcu_accLvlFreeCursror
267800080529      *RFS112770 - end
267900070202           END-EXEC.
268000070202      * -----------------------------------------
268100070202       set-business-error.
268200070202      * -----------------------------------------
268300130110      * Set business error (may be successful)
268400070202           MOVE lc_BusinessError       TO lc_errorCode
268500070202           PERFORM get-message-description
268600070301           MOVE lc_messageCode         TO pc_MessageCode
268700130110      * Do special formatting if fund does not exist
268800070301           IF lc_BusinessError = lnc_fundNotExists
268900070301              MOVE lc_messageDesc TO lc_string80
269000070301              INITIALIZE lc_messageDesc
269100070301              STRING lc_string80     DELIMITED BY lnc_2Spaces
269200070301                     lnc_colon       DELIMITED BY SIZE
269300130110                     lnc_1Space      DELIMITED BY SIZE
269400070301                     lc_FundToReport DELIMITED BY SIZE
269500070301             INTO lc_messageDesc
269600070306             END-STRING
269700130110           ELSE
269800070306             IF lc_BusinessError = lnc_errTradeDate
269900070306               MOVE lc_messageDesc TO lc_string80
270000070306               INITIALIZE lc_messageDesc
270100070306               STRING lc_string80     DELIMITED BY lnc_2Spaces
270200070306                      lnc_colon       DELIMITED BY SIZE
270300130110                      lnc_1Space      DELIMITED BY SIZE
270400070306                      lc_DateToReport DELIMITED BY SIZE
270500070306               INTO lc_messageDesc
270600070306               END-STRING.
270700070301
270800080611           MOVE lc_messageDesc         TO pc_MessageDesc
270900080611      * ------------------------------------------
271000080611       close-files.
271100141117      * ------------------------------------------
271200141117      * RFS125258- Begin.
271300141117      *    CALL "SETCALENV2" USING  lnc_D lc_errCode2
271400141117           MOVE ZEROS TO ln_CalDate.
271500141117           CALL "SETCALENV2" USING  lnc_D ln_CalDate lc_errCode2.
271600100508      * RFS125258- End.
271700140518
271800140518      * RFS 127707 - Start
271900140518       COPY CPYCHKTRX.
272000140518       COPY CPYSOARTN.
272100121229      * RFS 127707 - End
272200121229      *Perform Swap
272300100508       COPY CPYSWAPRTN.
