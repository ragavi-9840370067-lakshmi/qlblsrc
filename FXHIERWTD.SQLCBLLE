000100210224       IDENTIFICATION DIVISION.
000200190627       PROGRAM-ID.    FXHIERWTD.
000300190627       AUTHOR.        Joel Dsouza.
000400190627       INSTALLATION.  L&T Financial Services Technology Inc.
000500190627       DATE-WRITTEN.  April 26, 2019.
000600210830       DATE-COMPILED.
000700191030      *****************************************************************
000800210326      * RFS-NUMBER : RFS180669                                        *
000900190627      *                                                               *
001000190627      * DESCRIPTION: Withdrawal Hierarchy Function                    *
001100210512      *                                                               *
001200210512      * CALLED BY:   JOBDAILY                                         *
001300191009      *****************************************************************
001400190627      * Programmer * Date of change * Description of change           *
001500190627      *****************************************************************
001600190826      * Joel Dsouza* 2019/08/26     * RFS1018257 - TRNPST should not  *
001700190826      *            *                * check data queue when called    *
001800210530      *            *                * from this program               *
001900190912      * Joel Dsouza* 2019/09/05     * RFS184710 - Updating changed by *
002000210530      *            *                * (on trades changed to all units)*
002100210601      *            *                * for guarantee calc. process     *
002200190912      * Joel Dsouza* 2019/09/10     * RFS1018639 - Handling issue with*
002300190912      *            *                * GIC on original trade in envs.  *
002400190912      *            *                * with Account level modules      *
002500190917      * Joel Dsouza* 2019/09/11     * RFS184781 - Avoiding issues due *
002600190917      *            *                * to failed trade                 *
002700210530      * Ashwini B  * 2019/10/08     * RFS1019281 - AWD rejected with  *
002800191008      *            *                * error Certificate is mising     *
002900191023      * Joel Dsouza* 2019/10/23     * RFS184886 - Handling assignments*
003000191023      *            *                * and outstanding redemption      *
003100191023      *            *                * balance (from wire order SELL)  *
003200200330      * Chaya SP   * 2020/02/11     * RFS185066-Recompile for MFAGICDP*
003300200303      * SasiKumar B* 2020/03/03     * RFS1081196 - To create GIC      *
003400200303      *            *                * redemption transaction without  *
003500200303      *            *                * waive of MVA charge.            *
003600200303      *            *                * That is waive MVflag on the     *
003700200417      *            *                * GIC redemption transaction = 'N'*
003800200417      * Sasikumar  * 2020/04/15     * RFS1099219 - Removed            *
003900200417      *            *                * Account Level DSC module check  *
004000200728      * Joel Dsouza* 2020/07/28     * RFS186053 - Get 1st hier fund & *
004100200728      *            *                * use hier awd instructions       *
004200201029      * Niranjan   * 2020/10/29     * RFS1106613-Withdrawal hierarchy *
004300201029      *            *                * needs to determine the fund     *
004400210521      *            *                * based on asset criteria when    *
004500210521      *            *                * Use Withdrawal hier is "Y" for  *
004600201029      *            *                * GIC accounts with multiple funds*
004700210113      * Niranjan   * 2020/12/16     * RFS1108976 - Transactions with  *
004800210113      *            *                * rej code "G44" to be processed  *
004900210113      *            *                * using Withdrawal Hierarchy      *
005000210211      * Kavya K    * 2021/02/11     * RFS186088-Recompile for MFAINVMDP
005100210215      * Ashwini B  * 2021/02/15     * RFS187046 - Recompile for
005200210215      *            *                * MFATRNREP
005300210326      * Niranjan   * 2021/03/26     * RFS180708 - Set values for PASS *
005400210326      *            *                * -WAIVE-DSC, PASS-WAIVE-ERF and  *
005500210426      *            *                * PASS-TREAT-AWD                  *
005600210501      * Niranjan   * 2021/04/28     * RFS1113861 - Add GST-PST calcula*
005700210531      *            *                * -tion logic                     *
005800210609      * Niranjan   * 2021/06/09     * RFS1115481 - Update original FEE*
005900210609      *            *                * trans with Net amt available    *
006000210609      *            *                * in the fund when no deduction   *
006100210624      * Sasikumar B* 2021/06/15   * RFS1113880 - GDV reduced when     *
006101210830      *            *              *              Bypass rule 02/03    *
006102210830      * Ashwini B  * 2021/08/02     * RFS1118574 - Long run time in   *
006103210830      *            *                * acceptance. Changes are tagged  *
006200210830      *            *                * under 118574.                   *
006201210927      * Niranjan   * 2021/09/01     * RFS1119590 - All units redeemed *      
006202210927      *            *                * when unit amount < 0.001        *
006203210927      * RAJA N     * 2021/08/05 * RFS180770 - AMS and Mgmt Fee        *
006204210830      *            *            * Enchancements                       *
006205210929      * Joel Dsouza* 2021/09/27     * RFS1120884 - Use the tax info   *
006206210929      *            *                * from MFATRNATP record of        *
006207210929      *            *                * original transaction            *
006300200303      *****************************************************************
006400200303       ENVIRONMENT DIVISION.
006500190627       CONFIGURATION SECTION.
006600190627       SOURCE-COMPUTER. IBM-AS400.
006700190627       OBJECT-COMPUTER. IBM-AS400.
006800190712       SPECIAL-NAMES.   LOCAL-DATA   IS WS-LOCAL
006900190712                        DATA-AREA    IS WS-DTAARA-MFACMPCDP
007000190712                        DATA-AREA    IS WS-DTAARA-MFAGICPARM
007100190627                        LINKAGE TYPE IS PROCEDURE FOR "FXCTLP".
007200190627
007300190627       INPUT-OUTPUT SECTION.
007400190627       FILE-CONTROL.
007500190627
007600190627       DATA DIVISION.
007700190627       FILE SECTION.
007800190627
007900190627      *---------------------------------
008000190627       WORKING-STORAGE SECTION.
008100190627      *---------------------------------
008200190627           COPY CPYSQLFLD
008300190627                REPLACING == "CURRENT_PROGRAM" == BY == "FXHIERWTD" ==.
008400190627
008500190627            EXEC SQL
008600190627              INCLUDE SQLCA
008700190627            END-EXEC.
008800190627
008900190627      * Error Codes, Uniquely Identify where the error happened
009000190627       01 WS-ERR-CODE              PIC X(02)   VALUE " ".
009100190627           88 WS-ERR-OK                        VALUE "00".
009200190627           88 WS-ERR-NOT-ADDED                 VALUE "11".
009300190627           88 lncc_Err12                       VALUE "12".
009400190627           88 lncc_Err13                       VALUE "13".
009500190627           88 lncc_Err14                       VALUE "14".
009600190627           88 lncc_Err15                       VALUE "15".
009700190627           88 lncc_Err16                       VALUE "16".
009800190627           88 lncc_Err17                       VALUE "17".
009900190627           88 lncc_Err18                       VALUE "18".
010000190627           88 lncc_Err19                       VALUE "19".
010100190627           88 lncc_Err20                       VALUE "20".
010200190627           88 lncc_Err21                       VALUE "21".
010300190627           88 lncc_Err22                       VALUE "22".
010400190627           88 lncc_Err23                       VALUE "23".
010500190627           88 lncc_Err24                       VALUE "24".
010600190627           88 lncc_Err25                       VALUE "25".
010700190627           88 lncc_Err26                       VALUE "26".
010800190627           88 lncc_Err27                       VALUE "27".
010900190627           88 lncc_Err28                       VALUE "28".
011000190627           88 lncc_Err29                       VALUE "29".
011100190627           88 lncc_Err30                       VALUE "30".
011200190627           88 lncc_Err31                       VALUE "31".
011300190627           88 lncc_Err32                       VALUE "32".
011400190627           88 lncc_Err33                       VALUE "33".
011500190627           88 lncc_Err34                       VALUE "34".
011600190627           88 lncc_Err35                       VALUE "35".
011700190627           88 lncc_Err36                       VALUE "36".
011800190627           88 lncc_Err37                       VALUE "37".
011900190627           88 lncc_Err38                       VALUE "38".
012000190627           88 lncc_Err39                       VALUE "39".
012100190627           88 lncc_Err40                       VALUE "40".
012200190627           88 lncc_Err41                       VALUE "41".
012300190627           88 lncc_Err42                       VALUE "42".
012400190627           88 lncc_Err43                       VALUE "43".
012500190627           88 lncc_Err44                       VALUE "44".
012600190627           88 lncc_Err45                       VALUE "45".
012700190627           88 lncc_Err46                       VALUE "46".
012800190627           88 lncc_Err47                       VALUE "47".
012900190627           88 lncc_Err48                       VALUE "48".
013000190627           88 lncc_Err49                       VALUE "49".
013100190627           88 lncc_Err50                       VALUE "50".
013200190627           88 lncc_Err51                       VALUE "51".
013300190627           88 lncc_Err52                       VALUE "52".
013400190627           88 lncc_Err53                       VALUE "53".
013500190627           88 lncc_Err54                       VALUE "54".
013600190627           88 lncc_Err55                       VALUE "55".
013700190627           88 lncc_Err56                       VALUE "56".
013800190627           88 lncc_Err57                       VALUE "57".
013900190627           88 lncc_Err58                       VALUE "58".
014000190627           88 lncc_Err59                       VALUE "59".
014100190627           88 lncc_Err60                       VALUE "60".
014200190627           88 lncc_Err61                       VALUE "61".
014300190627           88 lncc_Err62                       VALUE "62".
014400190627           88 lncc_Err63                       VALUE "63".
014500190627           88 lncc_Err64                       VALUE "64".
014600190627           88 lncc_Err65                       VALUE "65".
014700190627           88 lncc_Err66                       VALUE "66".
014800190627           88 lncc_Err67                       VALUE "67".
014900190627           88 lncc_Err68                       VALUE "68".
015000190627           88 lncc_Err69                       VALUE "69".
015100190627           88 lncc_Err70                       VALUE "70".
015200190627           88 lncc_Err71                       VALUE "71".
015300190704           88 lncc_Err72                       VALUE "72".
015400190704           88 lncc_Err73                       VALUE "73".
015500190712           88 lncc_Err74                       VALUE "74".
015600190712           88 lncc_Err75                       VALUE "75".
015700190712           88 lncc_Err76                       VALUE "76".
015800190712           88 lncc_Err77                       VALUE "77".
015900190712           88 lncc_Err78                       VALUE "78".
016000190718           88 lncc_Err79                       VALUE "79".
016100190720           88 lncc_Err80                       VALUE "80".
016200190724           88 lncc_Err81                       VALUE "81".
016300190724           88 lncc_Err82                       VALUE "82".
016400190724           88 lncc_Err83                       VALUE "83".
016500190912184781     88 lncc_Err84                       VALUE "84".
016600191008      *RFS1019281 START
016700191008           88 lncc_Err85                       VALUE "85".
016800191008           88 lncc_Err86                       VALUE "86".
016900191009           88 lncc_Err87                       VALUE "87".
017000191009           88 lncc_Err88                       VALUE "88".
017100191008      *RFS1019281 END
017200191023      *RFS184886 START
017300191023           88 lncc_Err89                       VALUE "89".
017400191023           88 lncc_Err90                       VALUE "90".
017500191023           88 lncc_Err91                       VALUE "91".
017600191023           88 lncc_Err92                       VALUE "92".
017700191023           88 lncc_Err93                       VALUE "93".
017800191023           88 lncc_Err94                       VALUE "94".
017900191023           88 lncc_Err95                       VALUE "95".
018000191023      *RFS184886 END
018100200729      *RFS186053 START
018200200729           88 lncc_Err96                       VALUE "96".
018300200729           88 lncc_Err97                       VALUE "97".
018400200729           88 lncc_Err98                       VALUE "98".
018500200729      *RFS186053 END
018600201029      *RFS1106613 Starts
018700201029           88 lncc_Err99                       VALUE "99".
018800201029      *RFS1106613 Ends
018900210401      *RFS180708 Starts
019000210401           88 lncc_ErrA1                       VALUE "A1".
019100210401      *RFS180708 Ends
019200210501      *RFS1113861 Starts
019300210428           88 lncc_ErrA2                       VALUE "A2".
019400210512           88 lncc_ErrA3                       VALUE "A3".
019500210513           88 lncc_ErrA4                       VALUE "A4".
019600210513           88 lncc_ErrA5                       VALUE "A5".
019700210526           88 lncc_ErrA6                       VALUE "A6".
019800210527           88 lncc_ErrA7                       VALUE "A7".
019900210501      *RFS1113861 Ends
020000191009
020100210401      * Error Descriptions
020200190627       01 lc_ErrorDesc.
020300190627          03 lncc_ErrOpenGetHier         PIC X(80)
020400190627             VALUE "Error while opening GetHier cursor".
020500190627          03 lncc_ErrCloseGetHier        PIC X(80)
020600190627             VALUE "Error while closing GetHier cursor".
020700190627          03 lncc_ErrNoRecMFAWDHIERP     PIC X(80)
020800190627             VALUE "No records setup in MFAWDHIERP".
020900190627          03 lncc_ErrFetchGetHier        PIC X(80)
021000190627             VALUE "Error while fetching from GetHier cursor".
021100190627          03 lncc_ErrOpenGICInvs         PIC X(80)
021200190627             VALUE "Error while opening GICInvs cursor".
021300190627          03 lncc_ErrCloseGICInvs        PIC X(80)
021400190627             VALUE "Error while closing GICInvs cursor".
021500190627          03 lncc_ErrFetchGICInvs        PIC X(80)
021600190627             VALUE "Error while fetching from GICInvs cursor".
021700190712          03 lncc_ErrOpenGICTrans        PIC X(80)
021800190712             VALUE "Error while opening GICTrans cursor".
021900190712          03 lncc_ErrCloseGICTrans       PIC X(80)
022000190712             VALUE "Error while closing GICTrans cursor".
022100190712          03 lncc_ErrFetchGICTrans       PIC X(80)
022200190712             VALUE "Error while fetching from GICTrans cursor".
022300190627          03 lncc_ErrOpenGetTrans        PIC X(80)
022400190627             VALUE "Error while opening GetTrans cursor".
022500190627          03 lncc_ErrCloseGetTrans       PIC X(80)
022600190627             VALUE "Error while closing GetTrans cursor".
022700190627          03 lncc_ErrFetchGetTrans       PIC X(80)
022800190627             VALUE "Error while fetching from GetTrans cursor".
022900190627          03 lncc_ErrOpenGetAccInvs      PIC X(80)
023000190627             VALUE "Error while opening GetAccInvs cursor".
023100190627          03 lncc_ErrCloseGetAccInvs     PIC X(80)
023200190627             VALUE "Error while closing GetAccInvs cursor".
023300190627          03 lncc_ErrFetchGetAccInvs     PIC X(80)
023400190627             VALUE "Error while fetching from GetAccInvs cursor".
023500190627          03 lncc_ErrGetInvMV            PIC X(80)
023600190627             VALUE "Error while getting account inv market value".
023700190724          03 lncc_ErrGetCurrUnitBal      PIC X(80)
023800190724             VALUE "Error while getting current unit balance".
023900190724          03 lncc_ErrGetFEERedInfo       PIC X(80)
024000190724             VALUE "Error while getting FEE redemption info".
024100190724          03 lncc_ErrGetAWRRedInfo       PIC X(80)
024200190724             VALUE "Error while getting AWR redemption info".
024300190704          03 lncc_ErrGetMFAINVSCP        PIC X(80)
024400190704             VALUE "Error while getting count from MFAINVSCP".
024500190712          03 lncc_ErrGetMFAMULTDP        PIC X(80)
024600190712             VALUE "Error while getting record from MFAMULTDP".
024700190627          03 lncc_ErrGetExcType          PIC X(80)
024800190627             VALUE "Error while getting exchange rate type".
024900190627          03 lncc_ErrInsOgTrade          PIC X(80)
025000190627             VALUE "Error while inserting OG-trade in MFATRNOIP".
025100190627          03 lncc_ErrGetBatchNo          PIC X(80)
025200190627             VALUE "Error while getting next batch no".
025300190627          03 lncc_ErrGetTransNo          PIC X(80)
025400190627             VALUE "Error while getting next trans no".
025500190703          03 lncc_ErrGetFundCode         PIC X(80)
025600190703             VALUE "Error while getting industry fund code".
025700190627          03 lncc_ErrGetBatchInfo        PIC X(80)
025800190627             VALUE "Error while getting batch info".
025900190627          03 lncc_ErrUpdBatchInfo        PIC X(80)
026000190627             VALUE "Error while updating batch info".
026100190627          03 lncc_ErrGetSelProcSeq       PIC X(80)
026200190627             VALUE "Error while getting sell processing seq no".
026300190627          03 lncc_ErrGetFEEProcSeq       PIC X(80)
026400190627             VALUE "Error while getting fee processing seq no".
026500190627          03 lncc_ErrGetSWOProcSeq       PIC X(80)
026600190627             VALUE "Error while getting SWO processing seq no".
026700190627          03 lncc_ErrGetSWIProcSeq       PIC X(80)
026800190627             VALUE "Error while getting SWI processing seq no".
026900190627          03 lncc_ErrGetTROProcSeq       PIC X(80)
027000190627             VALUE "Error while getting TRO processing seq no".
027100190627          03 lncc_ErrGetTRIProcSeq       PIC X(80)
027200190627             VALUE "Error while getting TRI processing seq no".
027300190627          03 lncc_ErrInsMFATRNP          PIC X(80)
027400190627             VALUE "Error while inserting in MFATRNP".
027500190627          03 lncc_ErrInsTransCheque      PIC X(80)
027600190627             VALUE "Error while inserting in MFATRNCP".
027700190627          03 lncc_ErrInsTransBank        PIC X(80)
027800190627             VALUE "Error while inserting in MFATRNBP".
027900190627          03 lncc_ErrUpdTransNo          PIC X(80)
028000190627             VALUE "Error while updating trans no".
028100190627          03 lncc_ErrInsHierTrade        PIC X(80)
028200190627             VALUE "Error while inserting hier-trade in MFATRNOIP".
028300190627          03 lncc_ErrInsTransRed         PIC X(80)
028400190627             VALUE "Error while inserting trans redemption details".
028500190627          03 lncc_ErrDelMFATRNP         PIC X(80)
028600190627             VALUE "Error while deleting MFATRNP record".
028700190627          03 lncc_ErrDelMFATRNPTgt      PIC X(80)
028800190627             VALUE "Error while deleting MFATRNP record for AWR tgt".
028900190627          03 lncc_ErrUpdMFATRNP         PIC X(80)
029000190627             VALUE "Error while updating MFATRNP record".
029100190627          03 lncc_ErrDelMFATRNREP        PIC X(80)
029200190627             VALUE "Error while deleting MFATRNREP record".
029300190718          03 lncc_ErrDelMFATRNMSCP       PIC X(80)
029400190718             VALUE "Error while deleting MFATRNMSCP record".
029500190627          03 lncc_ErrDelMFATRNCP        PIC X(80)
029600190627             VALUE "Error while updating MFATRNCP record".
029700190627          03 lncc_ErrDelMFATRNBP        PIC X(80)
029800190627             VALUE "Error while updating MFATRNBP record".
029900190627          03 lncc_ErrGetAWDChqInfo      PIC X(80)
030000190627             VALUE "Error while getting AWD-CHQ info".
030100190627          03 lncc_ErrGetAWDEftInfo      PIC X(80)
030200190627             VALUE "Error while getting AWD-EFT info".
030300190627          03 lncc_ErrGetHeaderNo        PIC X(80)
030400190627             VALUE "Error while getting trans header no".
030500190627          03 lncc_ErrInsTransHeader      PIC X(80)
030600190627             VALUE "Error while inserting trans header record".
030700190627          03 lncc_ErrInsTransComm        PIC X(80)
030800190627             VALUE "Error while inserting trans commission record".
030900190627          03 lncc_ErrInsTransRESP        PIC X(80)
031000190627             VALUE "Error while inserting trans RESP record".
031100190627          03 lncc_ErrInsTransTarget      PIC X(80)
031200190627             VALUE "Error while inserting trans target record".
031300190627          03 lncc_ErrInsTransWF          PIC X(80)
031400190627             VALUE "Error while inserting trans in work file".
031500190627          03 lncc_ErrGetMatDate          PIC X(80)
031600190627             VALUE "Error while getting GIC maturity date".
031700190627          03 lncc_ErrGetTargetAcc        PIC X(80)
031800190627             VALUE "Error while getting AWR target account".
031900190627          03 lncc_ErrGetTargetTrans      PIC X(80)
032000190627             VALUE "Error while getting AWR target trans".
032100190712          03 lncc_ErrGetGICTargetTrans   PIC X(80)
032200190712             VALUE "Error while getting AWR GIC target trans".
032300190627          03 lncc_ErrGetAWRRates         PIC X(80)
032400190627             VALUE "Error while getting AWR rates".
032500190627          03 lncc_ErrGetAccType          PIC X(80)
032600190627             VALUE "Error while getting account type".
032700190627          03 lncc_ErrGetTgtAccType       PIC X(80)
032800190627             VALUE "Error while getting AWR target account type".
032900190627          03 lncc_ErrGetBeneCode         PIC X(80)
033000190627             VALUE "Error while getting beneficiary split code".
033100190627          03 lncc_ErrGetTgtBeneCode      PIC X(80)
033200190627             VALUE "Error while getting target beneficiary split code".
033300190627          03 lncc_ErrGetTransDetails     PIC X(80)
033400190627             VALUE "Error while transaction details from MFATRNP".
033500190704          03 lncc_ErrGetGrossFrmUnits    PIC X(80)
033600190704             VALUE "Error while calculating gross from units".
033700190627          03 lncc_ErrGetTransSubType     PIC X(80)
033800190627             VALUE "Error while getting trans sub type".
033900190627          03 lncc_ErrInsMFATRNMSCP       PIC X(80)
034000190627             VALUE "Error while inserting MFATRNMSCP record".
034100190627          03 lncc_ErrInsReportRec        PIC X(80)
034200190627             VALUE "Error while inserting report record".
034300190627          03 lncc_ErrUpdReportRec        PIC X(80)
034400190627             VALUE "Error while updating report record".
034500190627          03 lncc_ErrInsMFAGITRP         PIC X(80)
034600190627             VALUE "Error while inserting MFAGITRP record".
034700190627          03 lncc_ErrInsMFATRGIDP        PIC X(80)
034800190627             VALUE "Error while inserting MFATRGIDP record".
034900190912      *RFS184781 START
035000190912          03 lncc_ErrDuplicateTrans      PIC X(80)
035100190912             VALUE "Placement date + Trans no already exists (Batch alre
035200190912      -    "ady run for this date)".
035300190912      *RFS184781 END
035400191008      *RFS1019281 START
035500191009          03 lncc_ErrDelMFAGICTROP         PIC X(80)
035600191009             VALUE "Error while deleting MFAGICTROP record".
035700191009          03 lncc_ErrDelMFAGICROP          PIC X(80)
035800191009             VALUE "Error while deleting MFAGICROP  record".
035900191009          03 lncc_ErrDelMFAMULTHP          PIC X(80)
036000191009             VALUE "Error while deleting MFAMULTHP  record".
036100191009          03 lncc_ErrDelMFAMULTDP           PIC X(80)
036200191009             VALUE "Error while deleting MFAMULTDP  record".
036300191008      *RFS1019281 END
036400191023      *RFS184886 START
036500191023          03 lncc_ErrGETEntireAccAssign  PIC X(80)
036600191023             VALUE "Error while getting entire acc assignment".
036700191023          03 lncc_ErrGETCDICAssign       PIC X(80)
036800191023             VALUE "Error while getting CDIC assignments".
036900191023          03 lncc_ErrGETNonCDICAssign    PIC X(80)
037000191023             VALUE "Error while getting non CDIC assignments".
037100191023          03 lncc_ErrGetAssignUnitValue  PIC X(80)
037200191023             VALUE "Error while getting assigned unit value".
037300191023          03 lncc_ErrGetAssignAmt        PIC X(80)
037400191023             VALUE "Error while getting assigned amount".
037500191023      *RFS184886 END
037600200728      *RFS186053 START
037700200728          03 lncc_ErrGETAWDInstructions  PIC X(80)
037800200728             VALUE "Error while getting awd instructions".
037900200729          03 lncc_ErrUpdMFATRNATP        PIC X(80)
038000200729             VALUE "Error while updating MFATRNATP".
038100200729          03 lncc_ErrInsMFATRNATP        PIC X(80)
038200200729             VALUE "Error while inserting into MFATRNATP".
038300200728      *RFS186053 END
038400201029      *RFS1106613 Starts
038500201029          03 lncc_ErrGetFirstCMGIC       PIC X(80)
038600201029              VALUE "Error getting first CM GIC fund from MFAGICDP".
038700201029      *RFS1106613 Ends
038800210401      *RFS180708 Starts
038900210401          03 lncc_ErrorInsertMFATRNTXDP  PIC X(80)
039000210401              VALUE "Error inserting into MFATRNTXDP".
039100210401      *RFS180708 Ends
039200210501      *RFS1113861 Starts
039300210428          03 lncc_ErrorGetGstPstDetails  PIC X(80)
039400210428              VALUE "Error fetch from MFATRNTXDP".
039500210512          03 lncc_ErrorInsertMFADSCRDP   PIC X(80)
039600210512              VALUE "Error inserting into MFADSCRDP".
039700210517          03 lncc_ErrorDeleteMFADSCRDP   PIC X(80)
039800210517              VALUE "Error deleting MFADSCRDP record".
039900210526          03 lncc_ErrGetIndstCount       PIC X(80)
040000210526              VALUE "Error getting count from MFAACCATP".
040100210527          03 lncc_ErrorDeleteMFATRNATP   PIC X(80)
040200210527              VALUE "Error deleting QTEMP/MFATRNATP record".
040300210501      *RFS1113861 Ends
040400191009
040500190627      * Constants
040600190627       01 lc_Constants.
040700190725          05 lnc-CommaDelim              PIC X(01) VALUE ",".
040800190725          05 lnc-RowDelim                PIC X(01) VALUE ";".
040900190627          03 lnci_HierRec                PIC S9(03) VALUE 200.
041000190627          03 lnci_GICRec                 PIC S9(03) VALUE 200.
041100190627          03 lncc_PND                    PIC X(3)   VALUE "PND".
041200190720          03 lncc_HST                    PIC X(3)   VALUE "HST".
041300190720          03 lncc_HSC                    PIC X(3)   VALUE "HSC".
041400190627          03 lncc_AWE                    PIC X(3)   VALUE "AWE".
041500190627          03 lncc_AWC                    PIC X(3)   VALUE "AWC".
041600190627          03 lncc_AWR                    PIC X(3)   VALUE "AWR".
041700190627          03 lncc_DIR                    PIC X(3)   VALUE "DIR".
041800190627          03 lncc_DSB                    PIC X(3)   VALUE "DSB".
041900190627          03 lncc_WOR                    PIC X(3)   VALUE "WOR".
042000190627          03 lncc_SEL                    PIC X(3)   VALUE "SEL".
042100190627          03 lncc_SWO                    PIC X(3)   VALUE "SWO".
042200190627          03 lncc_SWI                    PIC X(3)   VALUE "SWI".
042300190627          03 lncc_TRO                    PIC X(3)   VALUE "TRO".
042400190627          03 lncc_TRI                    PIC X(3)   VALUE "TRI".
042500190627          03 lncc_FEE                    PIC X(3)   VALUE "FEE".
042600190627          03 lncc_11                     PIC X(2)   VALUE "11".
042700190711          03 lncc_G1                     PIC X(2)   VALUE "G1".
042800190627          03 lncc_6                      PIC X(1)   VALUE "6".
042900190627          03 lncc_7                      PIC X(1)   VALUE "7".
043000190627          03 lncc_2                      PIC X(1)   VALUE "2".
043100190627          03 lncc_4                      PIC X(1)   VALUE "4".
043200190627          03 lnci_TransRec               PIC S9(03) VALUE 200.
043300190627          03 lnci_AccInvRec              PIC S9(03) VALUE 200.
043400190627          03 lncc_Space                  PIC X(1)   VALUE " ".
043500190627          03 lncc_ProgramCode            PIC X(08)  VALUE "SEGMATST".
043600190627          03 lncc_ProgramAction          PIC X(10)  VALUE "DEFAULT".
043700190627          03 lncc_Y                      PIC X(1)   VALUE "Y".
043800190627          03 lncc_N                      PIC X(1)   VALUE "N".
043900190627          03 lncc_CleanMode              PIC X(01)  VALUE "C".
044000190627          03 lncc_InitMode               PIC X(01)  VALUE "I".
044100190627          03 lncc_DeleteMode             PIC X(01)  VALUE "D".
044200190627          03 lncc_B                      PIC X(1)   VALUE "B".
044300190627          03 lncc_A                      PIC X(1)   VALUE "A".
044400190627          03 lncc_C                      PIC X(1)   VALUE "C".
044500190627          03 lncc_E                      PIC X(1)   VALUE "E".
044600190627          03 lncc_R                      PIC X(1)   VALUE "R".
044700190627          03 lncc_F                      PIC X(1)   VALUE "F".
044800190627          03 lncc_M                      PIC X(1)   VALUE "M".
044900190627          03 lncc_G                      PIC X(1)   VALUE "G".
045000210501      *RFS1113861 Starts
045100210501          03 lncc_T                      PIC X(1)   VALUE "T".
045200210501      *RFS1113861 Ends
045300190627          03 lncc_HM                     PIC X(2)   VALUE "HM".
045400190627          03 lncc_HF                     PIC X(2)   VALUE "HF".
045500190627          03 lncc_HMV                    PIC X(3)   VALUE "HMV".
045600190627          03 lncc_STRNumType             PIC X(04)  VALUE "STR#".
045700190627          03 lncc_SBTNumType             PIC X(04)  VALUE "SBT#".
045800190627          03 lncc_SYSAWD                 PIC X(06)  VALUE "SYSAWD".
045900210624      * RFS1113880 - Start
046000210624      *   03 lncc_EnteredBy              PIC X(10)  VALUE "WITHDHIER".
046100210624          03 lncc_EnteredBy              PIC X(10)  VALUE " ".
046200210624          03 lncc_EnteredByF             PIC X(10)  VALUE "WITHDHIERF".
046300210624          03 lncc_EnteredByC             PIC X(10)  VALUE "WITHDHIERC".
046400210624      * RFS1113880 - End
046401210812180770    03 lncc_EnteredByM             PIC X(10)  VALUE "WITHDHIERM".
046402210812180770    03 lncc_MFE                    PIC X(03)  VALUE "MFE".
046500190627          03 lncc_Zero                   PIC S9(1)  VALUE 0.
046600190627          03 lncc_WDH                    PIC X(03)  VALUE "WDH".
046700190627          03 lncc_CM                     PIC X(03)  VALUE "CM".
046800190627          03 lncc_Dollar                 PIC X(1)   VALUE "$".
046900190704          03 lncc_Units                  PIC X(1)   VALUE "U".
047000190717          03 lncc_V2                     PIC X(2)   VALUE "V2".
047100190718          03 lncc_IE                     PIC X(2)   VALUE "IE".
047200190917      *RFS1018639 START
047300190917          03 lncc_G45                    PIC X(3)   VALUE "G45".
047400190917          03 lncc_G46                    PIC X(3)   VALUE "G46".
047500190917      *RFS1018639 END
047600191009      *RFS1019281 START
047700191009          03 lncc_G23                    PIC X(3)   VALUE "G23".
047800191009          03 lncc_G2                     PIC X(2)   VALUE "G2".
047900191009          03 lncc_G3                     PIC X(2)   VALUE "G3".
048000191009          03 lncc_AWD                    PIC X(3)   VALUE "AWD".
048100191009      *RFS1019281 END
048200191030      *RFS184886 START
048300191030          03 lncc_W                      PIC X(1)   VALUE "W".
048400191030          03 lncc_G44                    PIC X(3)   VALUE "G44".
048500191030      *RFS184886 END
048600210526      *RFS1113861 Starts
048700210526          03 lncc_INDST                  PIC X(5)   VALUE "INDST".
048800210526      *RFS1113861 Ends
048900210625      *RFS1113880 Starts
049000210625          03 lncc_FEB                    PIC X(3)   VALUE "FEB".
049100210625      *RFS1113880 Ends
049200190717
049300190627      * Special modules
049400190627       01 lc_SpecialModule.
049500190627          03 lc_ModuleACLVDSC            PIC X(10)  VALUE "ACLVDSC".
049600190627          03 lc_ACLVModFlag              PIC X(01)  VALUE SPACES.
049700190627             88 lb_ACLVModYes                       VALUE "Y".
049800190627             88 lb_ACLVModNo                        VALUE "N".
049900210501      *RFS1113861 Starts
050000210501          03 lc_ModuleDSCMETHOD          PIC X(10)  VALUE "DSCMETHOD".
050100210501          03 lc_DSCMETFlag               PIC X(01)  VALUE SPACES.
050200210501             88 lb_DSCMETYes                        VALUE "Y".
050300210501             88 lb_DSCMETNo                         VALUE "N".
050400210501      *RFS1113861 Ends
050500210501
050600190627      * Tables/Arrays
050700190627       01 lc_Tables.
050800190627          03 ltb_HierTable.
050900190627             05 ltb_HierRecs             OCCURS 200 TIMES
051000190627                                         INDEXED BY li_CounterHier.
051100190627                07 ltb_HierSeq           PIC S9(3).
051200190627                07 ltb_HierProdType      PIC X(3).
051300190627                07 ltb_HierMMFFlag       PIC X(1).
051400190627                07 ltb_HierLoadStruc     PIC X(1).
051500190627                07 ltb_HierExtLoad       PIC X(10).
051600190627                07 ltb_HierAssetCrit     PIC X(3).
051700190627          03 ltb_TransTable.
051800190627             05 ltb_TransRecs            OCCURS 200 TIMES
051900190627                                         INDEXED BY li_CounterTrans.
052000190627                07 ltb_PlaceDate         PIC S9(08).
052100190627                07 ltb_TransNo           PIC S9(9).
052200190627                07 ltb_OBatchDate        PIC S9(08).
052300190627                07 ltb_OBatchCode        PIC X(4).
052400190627                07 ltb_ProcessDate       PIC S9(08).
052500190627                07 ltb_TrnTradeDate      PIC S9(08).
052600190627                07 ltb_TrnTypeCode       PIC X(3).
052700190627                07 ltb_TrnOriginCode     PIC X(3).
052800190627                07 ltb_AccountNo         PIC S9(9).
052900190627                07 ltb_OInvCode          PIC X(5).
053000190627                07 ltb_OFundCode         PIC X(5).
053100190627                07 ltb_GrossAmt          PIC S9(13)V9(2).
053200190627                07 ltb_NetAmt            PIC S9(13)V9(2).
053300190627                07 ltb_PercentAmt        PIC S9(07)V9(2).
053400190627                07 ltb_UnitAmt           PIC S9(13)V9(3).
053500190627                07 ltb_UnitPrice         PIC S9(09)V9(4).
053600190627                07 ltb_ClosingUnitBal    PIC S9(13)V9(3).
053700190627                07 ltb_TrnProcSeqNo      PIC S9(03).
053800190627                07 ltb_RejectionCode     PIC X(3).
053900190627                07 ltb_GrossOrNet        PIC X(1).
054000190627                07 ltb_TrnSeqNo          PIC S9(03).
054100190627                07 ltb_DealerCode        PIC X(4).
054200190627                07 ltb_RepCode           PIC X(6).
054300190627                07 ltb_WireOrderNo       PIC X(7).
054400190627                07 ltb_SettlementDate    PIC S9(08).
054500190627                07 ltb_SettledGrossOrNet PIC X(1).
054600190627                07 ltb_SettlementAmt     PIC S9(13)V9(2).
054700190627                07 ltb_SuppressConfirms  PIC X(1).
054800190627                07 ltb_ContRedCode       PIC X(6).
054900190627                07 ltb_TrnStatusCode     PIC X(3).
055000190627                07 ltb_OgDocRecieved     PIC X(1).
055100190627                07 ltb_HiddenTrans       PIC X(1).
055200190627                07 ltb_AvgUnitCost       PIC S9(09)V9(4).
055300190627                07 ltb_ResAvgUnitCost    PIC S9(09)V9(4).
055400190627                07 ltb_SplitOptionCode   PIC X(1).
055500190627                07 ltb_Receipted         PIC X(1).
055600190627                07 ltb_ReceiptNo         PIC X(10).
055700190627                07 ltb_InstitutionCode   PIC X(05).
055800190627                07 ltb_BranchCode        PIC X(05).
055900190627                07 ltb_ReversalCode      PIC X(04).
056000190627                07 ltb_Reverse           PIC X(01).
056100190627                07 ltb_Adjust            PIC X(01).
056200190627                07 ltb_PaymentTypeCode   PIC X(1).
056300190627                07 ltb_MethodOfDelivery  PIC X(3).
056400190627                07 ltb_ChangedDate       PIC S9(08).
056500190627                07 ltb_ChangedTime       PIC S9(04).
056600190627                07 ltb_ChangedByUser     PIC X(10).
056700190627                07 ltb_EnteredBy         PIC X(10).
056800190627                07 ltb_TimePlaced        PIC S9(04).
056900190627                07 ltb_WireOrderFlag     PIC X(1).
057000190627                07 ltb_NetSettlementFlag PIC X(1).
057100190627                07 ltb_NomineeCode       PIC X(5).
057101210929      *RFS1120884 START
057102210929                07 ltb_ATPSplitOption    PIC X(1).
057103210929                07 ltb_ATPAddRepTax      PIC X(1).
057104210929                07 ltb_ATPFedTaxAmt      PIC S9(11)V9(2)   COMP-3.
057105210929                07 ltb_ATPFedTaxPerc     PIC S9(5)V9(2)    COMP-3.
057106210929                07 ltb_ATPProvTaxAmt     PIC S9(11)V9(2)   COMP-3.
057107210929                07 ltb_ATPProvTaxPerc    PIC S9(5)V9(2)    COMP-3.
057108210929                07 ltb_ATPISplitOption   PIC X(1).
057109210929                07 ltb_ATPIAddRepTax     PIC X(1).
057110210929                07 ltb_ATPIFedTaxAmt     PIC S9(11)V9(2)   COMP-3.
057111210929                07 ltb_ATPIFedTaxPerc    PIC S9(5)V9(2)    COMP-3.
057112210929                07 ltb_ATPIProvTaxAmt    PIC S9(11)V9(2)   COMP-3.
057113210929                07 ltb_ATPIProvTaxPerc   PIC S9(5)V9(2)    COMP-3.
057114210929      *RFS1120884 END
057200190627          03 ltb_AccInvTable.
057300190627             05 ltb_AccInvRecs           OCCURS 200 TIMES
057400190627                                         INDEXED BY li_CounterAccInv,
057500190705                                                    li_CounterOgInv,
057600200729186053                                              li_MVCounter,
057700190705                                                    li_CounterGICInv.
057800190627                07 ltb_InvCode           PIC X(5).
057900190627                07 ltb_FundCode          PIC X(5).
058000190627                07 ltb_ProdTypeCode      PIC X(3).
058100190627                07 ltb_MMFFlag           PIC X(1).
058200190627                07 ltb_LoadStruc         PIC X(1).
058300190627                07 ltb_ExtLoad           PIC X(10).
058400190627                07 ltb_ProdTypeRule      PIC X(1).
058500190627                07 ltb_MarketValue       PIC S9(13)V9(2).
058600190627                07 ltb_MaturedUnits      PIC S9(13)V9(3).
058700190627                07 ltb_MaturedUnitsMV    PIC S9(13)V9(2).
058800190627                07 ltb_FreeUnits         PIC S9(13)V9(3).
058900190627                07 ltb_FreeUnitsMV       PIC S9(13)V9(2).
059000191025      *RFS184886 START
059100191025                07 ltb_OrigMarketValue   PIC S9(13)V9(2).
059200191025                07 ltb_ActAssignment     PIC X(1).
059300191025      *RFS184886 END
059400190627          03 ltb_GICTable.
059500190627             05 ltb_GICRecs              OCCURS 200 TIMES
059600190627                                         INDEXED BY li_CounterGIC.
059700190627                07 ltb_GICInvCode        PIC X(5).
059800190627                07 ltb_GICFundCode       PIC X(5).
059900190627                07 ltb_GICIDNo           PIC S9(10).
060000190627                07 ltb_GICNo             PIC X(11).
060100190627                07 ltb_GICCurrBalance    PIC S9(13)V9(2).
060200190627                07 ltb_GICMatDate        PIC S9(08).
060300190717                07 ltb_GICMarketValue    PIC S9(13)V9(2).
060400191025      *RFS184886 START
060500191025                07 ltb_GICActAssignment  PIC X(1).
060600191025      *RFS184886 END
060700190712          03 ltb_GICTransTable.
060800190712             05 ltb_GICTransRecs         OCCURS 200 TIMES
060900190712                                         INDEXED BY li_CounterGICTrans.
061000190712                07 ltb_GICPlaceDate      PIC S9(08).
061100190712                07 ltb_GICTransNo        PIC S9(9).
061200190627
061300190627      * Flags
061400190627       01 lc_Flags.
061500190627          03 lb_EndOfGetTrans            PIC X(01).
061600190627             88 lb_EndOfGetTransTrue     VALUE "Y".
061700190627             88 lb_EndOfGetTransFalse    VALUE "N".
061800190627          03 lb_HierInvMatch             PIC X(01).
061900190627             88 lb_HierInvMatchYes       VALUE "Y".
062000190627             88 lb_HierInvMatchNo        VALUE "N".
062100190627          03 lb_HierUsed                 PIC X(01).
062200190627             88 lb_HierUsedYes           VALUE "Y".
062300190627             88 lb_HierUsedNo            VALUE "N".
062400190627          03 lb_TransNoUpd               PIC X(01).
062500190627             88 lb_TransNoUpdYes         VALUE "Y".
062600190627             88 lb_TransNoUpdNo          VALUE "N".
062700190708          03 lb_RemoveOrigWD             PIC X(01).
062800190708             88 lb_RemoveOrigWDYes       VALUE "Y".
062900190708             88 lb_RemoveOrigWDNo        VALUE "N".
063000190715          03 lb_GICTransInsExists        PIC X(01).
063100190715             88 lb_GICTransInsExistsYes  VALUE "Y".
063200190715             88 lb_GICTransInsExistsNo   VALUE "N".
063300190720          03 lb_HierTransRej             PIC X(01).
063400190720             88 lb_HierTransRejYes       VALUE "Y".
063500190720             88 lb_HierTransRejNo        VALUE "N".
063600190627          03 lc_ReturnCode               PIC X(02).
063700190627             88 lb_ValidReturnCode       VALUE "00", "  ".
063800210517      *RFS1113861 Starts
063900210512          03 lc_FeegenCall               PIC X(01).
064000210512             88 lb_FeegenCallYes         VALUE "Y".
064100210512             88 lb_FeegenCallNo          VALUE "N".
064200210526          03 lc_INDSTExists              PIC X(01).
064300210526             88 lb_INDSTExistsYes        VALUE "Y".
064400210526             88 lb_INDSTExistsNo         VALUE "N".
064500210517      *RFS1113861 Ends
064600190627
064700190627      * Null indicators
064800190627       01 ltb_IndicatorsHier.
064900190627          03 ltb_IndicatorsH             OCCURS 200 TIMES.
065000190627             07 ltb_IndicatorH           PIC S9(04) BINARY
065100190627                                         OCCURS 6 TIMES.
065200190627       01 ltb_IndicatorsTrans.
065300190627          03 ltb_IndicatorsT             OCCURS 200 TIMES.
065400190627             07 ltb_IndicatorT           PIC S9(04) BINARY
065401210929      *RFS1120884 START
065402210929      *                                  OCCURS 52 TIMES.
065403210929                                         OCCURS 64 TIMES.
065404210929      *RFS1120884 END
065600190627       01 ltb_IndicatorsInvs.
065700190627          03 ltb_IndicatorsI             OCCURS 200 TIMES.
065800190627             07 ltb_IndicatorI           PIC S9(04) BINARY
065900190627                                         OCCURS 12 TIMES.
066000190627       01 ltb_IndicatorsGICInvs.
066100190627          03 ltb_IndicatorsG             OCCURS 200 TIMES.
066200190627             07 ltb_IndicatorG           PIC S9(04) BINARY
066300190717                                         OCCURS 7 TIMES.
066400190627       01 lb_Indicators                  PIC S9(4) BINARY.
066500190627       01 ltb_IndicatorsBatch.
066600190627          03 ltb_IndicatorsB             PIC S9(4) BINARY
066700190627                                         OCCURS 5 TIMES.
066800190627
066900190627      * Table record
067000190627       01 lc_TableRecord.
067100190627          03 lr_TransRec.
067200190627             07 ld_PlaceDate         PIC S9(08).
067300190627             07 li_TransNo           PIC S9(9).
067400190627             07 ld_OBatchDate        PIC S9(08).
067500190627             07 lc_OBatchCode        PIC X(4).
067600190627             07 ld_ProcessDate       PIC S9(08).
067700190627             07 ld_TrnTradeDate      PIC S9(08).
067800190704             07 lc_OTrnTypeCode      PIC X(3).
067900190627             07 lc_TrnOriginCode     PIC X(3).
068000190627             07 li_AccountNo         PIC S9(9).
068100190627             07 lc_OInvCode          PIC X(5).
068200190627             07 lc_OFundCode         PIC X(5).
068300190627             07 li_GrossAmt          PIC S9(13)V9(2).
068400190627             07 li_NetAmt            PIC S9(13)V9(2).
068500190627             07 li_PercentAmt        PIC S9(07)V9(2).
068600190627             07 li_UnitAmt           PIC S9(13)V9(3).
068700190627             07 li_UnitPrice         PIC S9(09)V9(4).
068800190627             07 li_ClosingUnitBal    PIC S9(13)V9(3).
068900190627             07 li_TrnProcSeqNo      PIC S9(03).
069000190627             07 lc_RejectionCode     PIC X(3).
069100190627             07 lc_GrossOrNet        PIC X(1).
069200190627             07 li_TrnSeqNo          PIC S9(03).
069300190627             07 lc_DealerCode        PIC X(4).
069400190627             07 lc_RepCode           PIC X(6).
069500190627             07 lc_WireOrderNo       PIC X(7).
069600190627             07 ld_SettlementDate    PIC S9(08).
069700190627             07 lc_SettledGrossOrNet PIC X(1).
069800190627             07 li_SettlementAmt     PIC S9(13)V9(2).
069900190627             07 lc_SuppressConfirms  PIC X(1).
070000190627             07 lc_ContRedCode       PIC X(6).
070100190627             07 lc_TrnStatusCode     PIC X(3).
070200190627             07 lc_OgDocRecieved     PIC X(1).
070300190627             07 lc_HiddenTrans       PIC X(1).
070400190627             07 li_AvgUnitCost       PIC S9(09)V9(4).
070500190627             07 li_ResAvgUnitCost    PIC S9(09)V9(4).
070600190627             07 lc_SplitOptionCode   PIC X(1).
070700190627             07 lc_Receipted         PIC X(1).
070800190627             07 lc_ReceiptNo         PIC X(10).
070900190627             07 lc_InstitutionCode   PIC X(05).
071000190627             07 lc_BranchCode        PIC X(05).
071100190627             07 lc_ReversalCode      PIC X(04).
071200190627             07 lc_Reverse           PIC X(01).
071300190627             07 lc_Adjust            PIC X(01).
071400190627             07 lc_PaymentTypeCode   PIC X(1).
071500190627             07 lc_MethodOfDelivery  PIC X(3).
071600190627             07 ld_ChangedDate       PIC S9(08).
071700190627             07 li_ChangedTime       PIC S9(04).
071800190627             07 lc_ChangedByUser     PIC X(10).
071900190627             07 lc_EnteredBy         PIC X(10).
072000190627             07 li_TimePlaced        PIC S9(04).
072100190627             07 lc_WireOrderFlag     PIC X(1).
072200190627             07 lc_NetSettlementFlag PIC X(1).
072300190627             07 lc_NomineeCode       PIC X(5).
072301210929      *RFS1120884 START
072302210929             07 lc_ATPSplitOption    PIC X(1).
072303210929             07 lc_ATPAddRepTax      PIC X(1).
072304210929             07 li_ATPFedTaxAmt      PIC S9(11)V9(2)   COMP-3.
072305210929             07 li_ATPFedTaxPerc     PIC S9(5)V9(2)    COMP-3.
072306210929             07 li_ATPProvTaxAmt     PIC S9(11)V9(2)   COMP-3.
072307210929             07 li_ATPProvTaxPerc    PIC S9(5)V9(2)    COMP-3.
072308210929             07 lc_ATPISplitOption   PIC X(1).
072309210929             07 lc_ATPIAddRepTax     PIC X(1).
072310210929             07 li_ATPIFedTaxAmt     PIC S9(11)V9(2)   COMP-3.
072311210929             07 li_ATPIFedTaxPerc    PIC S9(5)V9(2)    COMP-3.
072312210929             07 li_ATPIProvTaxAmt    PIC S9(11)V9(2)   COMP-3.
072313210929             07 li_ATPIProvTaxPerc   PIC S9(5)V9(2)    COMP-3.
072314210929      *RFS1120884 END
072400190627          03 lr_AccInvTempRec.
072500190627             07 lt_InvCode           PIC X(5).
072600190627             07 lt_FundCode          PIC X(5).
072700190627             07 lt_ProdTypeCode      PIC X(3).
072800190627             07 lt_MMFFlag           PIC X(1).
072900190627             07 lt_LoadStruc         PIC X(1).
073000190627             07 lt_ExtLoad           PIC X(10).
073100190627             07 lt_ProdTypeRule      PIC X(1).
073200190627             07 lt_MarketValue       PIC S9(13)V9(2).
073300190627             07 lt_MaturedUnits      PIC S9(13)V9(3).
073400190627             07 lt_MaturedUnitsMV    PIC S9(13)V9(2).
073500190627             07 lt_FreeUnits         PIC S9(13)V9(3).
073600190627             07 lt_FreeUnitsMV       PIC S9(13)V9(2).
073700191025      *RFS184886 START
073800191025             07 lt_OrigMarketValue   PIC S9(13)V9(2).
073900191025             07 lt_ActAssignment     PIC X(1).
074000191025      *RFS184886 END
074100190627          03 lr_BatchRec.
074200190627             07 li_BatchAmt          PIC S9(13)V9(2) COMP-3.
074300190627             07 li_TransAmt          PIC S9(13)V9(2) COMP-3.
074400190627             07 li_BatchUnit         PIC S9(13)V9(3) COMP-3.
074500190627             07 li_TransUnit         PIC S9(13)V9(3) COMP-3.
074600190627             07 li_BatchTransCnt     PIC S9(07)      COMP-3.
074700190627          03 lr_AWDChqInfo.
074800190627             07 lc_PayeeName         PIC X(35).
074900190627             07 lc_PayeeName2        PIC X(35).
075000190627             07 li_AddrNo            PIC S9(7).
075100190627          03 lr_AWDEftInfo.
075200190627             07 li_BankSeqNo         PIC S9(7).
075300190724          03 lr_RedemptionInfo.
075400190627             07 lc_WaiveDSC          PIC X(01).
075500190627             07 lc_DSCWaiveReason    PIC X(04).
075600190724             07 lc_WaiveERF          PIC X(01).
075700190724             07 lc_WaiveCommChargeback PIC X(01).
075800210401180708       07 lc_BypassRule        PIC X(02).
075900210401180708       07 lc_ChargeSalesTax    PIC X(01).
076000190627          03 lr_TransHeader.
076100190627             07 ld_HPlaceDate        PIC S9(08).
076200190627             07 li_HTransNo          PIC S9(9).
076300190627             07 lc_HeaderType        PIC X(04).
076400190708             07 li_TransHeaderNo     PIC S9(09) VALUE 0.
076500190627             07 li_DetailSeqNo       PIC S9(03).
076600190726          03 lr_AccMatureFree.
076700190726             07 li_AccMaturedUnits   PIC S9(13)V9(3).
076800190726             07 li_AccMaturedUnitsMV PIC S9(13)V9(2).
076900190726             07 li_AccFreeUnits      PIC S9(13)V9(3).
077000190726             07 li_AccFreeUnitsMV    PIC S9(13)V9(2).
077100190627
077200190627       01 QCMDEXC-AREA.
077300190627          05 OVRDBF-MFATRNLD-COMMAND.
077400190627             07 OVRDBF-MFATRNLD-COMMAND1    PIC X(47) VALUE
077500190627               "OVRDBF FILE(MFATRNLD) TOFILE(QTEMP/WRKWHTRANS) ".
077600190627             07 OVRDBF-MFATRNLD-COMMAND2    PIC X(53) VALUE
077700190627               "LVLCHK(*NO) OVRSCOPE(*JOB) SHARE(*YES) OPNSCOPE(*JOB)".
077800190627          05 DLTOVR-MFATRNLD-COMMAND     PIC X(100) VALUE
077900190627             "DLTOVR FILE(MFATRNLD) LVL(*JOB)".
078000190627          05 CHGDTAARA-LDA-COMMAND       PIC X(100) VALUE
078100190627             "CHGDTAARA  DTAARA(*LDA (510 1)) VALUE('U')".
078200190627          05 CLRPFM-WorkFile-COMMAND     PIC X(100) VALUE
078300190627             "CLRPFM QTEMP/WRKWHTRANS".
078400190627          05 QCMDEXC-LENGTH              PIC 9(10)V9(5) COMP-3
078500190627             VALUE 100.
078600210512
078700190627      * Work fields
078800190627       01 lc_WorkFields.
078900190726          03 li_HierWDClosingBal         PIC S9(13)V9(3).
079000190720          03 lc_PlaceDate                PIC X(09).
079100190720          03 lc_TransNo                  PIC X(09).
079200190725          03 lc_CalcFundCode             PIC X(5).
079300190712          03 lc_GICSysPamDateDA          PIC X(90).
079400190712          03 lc_AccLevelACB              PIC X(01).
079500190712          03 lc_ProcessDate.
079600190627             05 lc_AsAtDate              PIC X(08).
079700190627             05 ld_AsAtDate REDEFINES lc_AsAtDate
079800190627                                         PIC S9(08).
079900190627             05 FILLER                   PIC X(161).
080000190708          03 ld_TRNPSTDate               PIC S9(08).
080100190627          03 li_NoOfTrnRowsFetched       PIC S9(03) VALUE 0.
080200190627          03 li_NoOfInvRowsFetched       PIC S9(03) VALUE 0.
080300190627          03 li_NoOfGICRowsFetched       PIC S9(03) VALUE 0.
080400190712          03 li_NoOfGICTransRowsFetched  PIC S9(03) VALUE 0.
080500190627          03 li_NoOfHierRowsFetched      PIC S9(03) VALUE 0.
080600190627          03 lc_ExchangeRateType         PIC  X(01).
080700190627          03 li_InvMV                    PIC S9(13)V9(2).
080800190627          03 li_RemainingGross           PIC S9(13)V9(2).
080900190627          03 li_RemainingNet             PIC S9(13)V9(2).
081000190719          03 li_MarketValueTracker       PIC S9(13)V9(2) VALUE 0.
081100190724          03 li_CurrUnitBal              PIC S9(13)V9(3).
081200190627          03 ld_TradeDate                PIC S9(08) COMP-3.
081300190627          03 li_PrevAccountNo            PIC S9(9).
081400190627          03 li_I                        PIC  9(9).
081500190627          03 li_J                        PIC  9(9).
081600190627          03 lc_InvCode                  PIC X(5)   VALUE SPACES.
081700190627          03 li_TransNum                 PIC S9(09) VALUE 0.
081800190627          03 li_PrevTransNum             PIC S9(09) VALUE 0.
081900190627          03 lc_BatchNum                 PIC X(09)  VALUE SPACES.
082000190627          03 lc_BatchCode                PIC X(04)  VALUE SPACES.
082100190627          03 lc_PrevBatchCode            PIC X(04)  VALUE SPACES.
082200190627          03 ld_PrevPlaceDate            PIC S9(08).
082300190712          03 ld_InstructionDate          PIC S9(08).
082400190627          03 li_PrevTransNo              PIC S9(9).
082500190712          03 li_InstructionNo            PIC S9(9).
082600190627          03 li_SELTransProcSeqNo        PIC S9(03) VALUE 0.
082700190627          03 li_FEETransProcSeqNo        PIC S9(03) VALUE 0.
082800190627          03 li_TROTransProcSeqNo        PIC S9(03) VALUE 0.
082900190627          03 li_TRITransProcSeqNo        PIC S9(03) VALUE 0.
083000190627          03 li_SWOTransProcSeqNo        PIC S9(03) VALUE 0.
083100190627          03 li_SWITransProcSeqNo        PIC S9(03) VALUE 0.
083200190627          03 li_TransProcSeqNo           PIC S9(03) VALUE 0.
083300190627          03 li_TransCnt                 PIC S9(09) VALUE 0.
083400190627          03 li_ParmSystime              PIC S9(04) VALUE 0.
083500190627          03 li_HierInvGross             PIC S9(13)V9(2) VALUE 0.
083600190627          03 li_HierInvNet               PIC S9(13)V9(2) VALUE 0.
083700190627          03 li_BatchUpdAmt              PIC S9(13)V9(2) VALUE 0.
083800190725          03 li_CalcGross                PIC S9(13)V9(2) VALUE 0.
083900190627          03 li_HierInvUnits             PIC S9(13)V9(3) VALUE 0.
084000190725          03 li_CalcUnits                PIC S9(13)V9(3) VALUE 0.
084100190627          03 lc_TransInvCode             PIC X(5)   VALUE SPACES.
084200190627          03 lc_TransFundCode            PIC X(5)   VALUE SPACES.
084300190627          03 lc_TreatTxnAsAWD            PIC X(1)   VALUE SPACES.
084400190627          03 li_TargetAccountNo          PIC S9(9).
084500190704          03 lc_TargetInvCode            PIC X(5).
084600190704          03 lc_TargetFundCode           PIC X(5).
084700190704          03 lc_FromInvCode              PIC X(5).
084800190627          03 ld_TargetPlaceDate          PIC S9(08).
084900190627          03 li_TargetTransNo            PIC S9(9).
085000190712          03 ld_GICTargetPlaceDate       PIC S9(08).
085100190712          03 li_GICTargetTransNo         PIC S9(9).
085200190627          03 ld_WHPlaceDate              PIC S9(08).
085300190627          03 li_WHTransNo                PIC S9(9).
085400190627          03 lc_AWRCommRate              PIC S9(04)V9(03) COMP-3.
085500190627          03 lc_AWRSponsorRate           PIC S9(03)V9(02) COMP-3.
085600190627          03 lc_AccTypeRule              PIC X(01).
085700190627          03 lc_TargetAccTypeRule        PIC X(01).
085800190627          03 lc_BeneSplitCode            PIC X(05).
085900190627          03 lc_TargetBeneSplitCode      PIC X(05).
086000190627          03 lc_RESPBeneSplitCode        PIC X(05).
086100190725          03 lc_CalcSplitCode            PIC X(01).
086200190627          03 li_TransAccountNo           PIC S9(9).
086300190627          03 lc_TransSplitOptionCode     PIC X(1).
086400190627          03 lc_PrevHierAssetCrit        PIC X(03).
086500190704          03 lc_GenTransType             PIC X(03).
086600190627          03 lc_SETCALENV2Action         PIC X(01).
086700190627          03 li_GrossedUpNet             PIC S9(13)V9(2).
086800190627          03 lc_TransSubType             PIC X(05).
086900190627          03 li_GICIDNo                  PIC S9(10).
087000190704          03 li_Counter                  PIC S9(2).
087100190709          03 li_UpdGrossAmt              PIC S9(13)V9(2) VALUE 0.
087200190717          03 li_AccruedIntAmt            PIC S9(11)V9(2).
087300191023      *RFS184886 START
087400191030          03 li_OrigInvMV                PIC S9(13)V9(2).
087500191023          03 lc_EntireAccAssign          PIC X(01).
087600191023          03 li_AssignedValue            PIC S9(13)V9(2).
087700191023          03 li_AssignedUnitValue        PIC S9(13)V9(2).
087800191023          03 li_AssignedAmt              PIC S9(13)V9(2).
087900191023          03 li_SumCDIC                  PIC S9(13)V9(2).
088000191023          03 li_SumNonCDIC               PIC S9(13)V9(2).
088100191030          03 lc_UpdSplitCode             PIC X(01).
088200191023      *RFS184886 END
088300200729      *RFS186053 START
088400200729          03 li_PassedAccountNo          PIC S9(9) VALUE 0.
088500200729          03 lc_DWaiveDSCFlag            PIC X(01) VALUE SPACES.
088600200729          03 lc_DWaiveDSCReasonCode      PIC X(04) VALUE SPACES.
088700200729          03 lc_DWaiveGIFeesFlag         PIC X(01) VALUE SPACES.
088800200729          03 lc_DWaiveGIFeesReasonCode   PIC X(04) VALUE SPACES.
088900200729          03 lc_TaxSplitOption           PIC X(01) VALUE SPACES.
089000200729          03 lc_AddReplaceTax            PIC X(01) VALUE SPACES.
089100200729          03 li_FedTaxAmt                PIC S9(13)V9(2) VALUE 0.
089200200729          03 li_FedTaxPercent            PIC S9(05)V9(2) VALUE 0.
089300200729          03 li_ProvTaxAmt               PIC S9(13)V9(2) VALUE 0.
089400200729          03 li_ProvTaxPercent           PIC S9(05)V9(2) VALUE 0.
089500200729          03 li_RemFedTaxAmt             PIC S9(13)V9(2) VALUE 0.
089600200729          03 li_RemProvTaxAmt            PIC S9(13)V9(2) VALUE 0.
089700200729          03 li_TransFedTaxAmt           PIC S9(13)V9(2) VALUE 0.
089800200729          03 li_TransProvTaxAmt          PIC S9(13)V9(2) VALUE 0.
089900200729          03 li_TransAmtForTax           PIC S9(13)V9(2) VALUE 0.
090000200729          03 li_TmpRemAmt                PIC S9(13)V9(2) VALUE 0.
090100200729          03 li_TotAmtForTax             PIC S9(13)V9(2) VALUE 0.
090200200729          03 li_AccountMV                PIC S9(13)V9(2) VALUE 0.
090201210830      *RFS1118574 Start
090202210830          03 li_StrNo                    PIC S9(10)      VALUE 0.
090203210830          03 li_EndNo                    PIC S9(10)      VALUE 0.
090204210830      *RFS1118574 End
090300200729      *RFS186053 END
090400210501      *RFS1113861 Starts
090500210427          03 li_GstPercent               PIC S9(09)V9(5) VALUE 0.
090600210427          03 li_PstPercent               PIC S9(09)V9(5) VALUE 0.
090700210520          03 li_DivFactorGst             PIC S9(09)V9(7) VALUE 0.
090800210520          03 li_DivFactorPst             PIC S9(09)V9(7) VALUE 0.
090900210428          03 lc_CompoundTax              PIC X(01)       VALUE " ".
091000210428          03 li_NetAmtAvail              PIC S9(13)V9(2) VALUE 0.
091100210428          03 li_OrigNetAmt               PIC S9(13)V9(2) VALUE 0.
091200210507          03 lc_GenGrossOrNet            PIC X(1)        VALUE " ".
091300210507          03 li_FeeInvMV                 PIC S9(13)V9(2) VALUE 0.
091400210510          03 lc_CalcFeeInv               PIC X(05)       VALUE " ".
091500210526          03 li_INDSTCount               PIC S9(05)      VALUE 0.
091600210530          03 li_GstAmt                   PIC S9(13)V9(2) VALUE 0.
091700210530          03 li_PstAmt                   PIC S9(13)V9(2) VALUE 0.
091800210530          03 li_NetAmtTaxed              PIC S9(13)V9(2) VALUE 0.
091900210524      *RFS1113861 Ends
091901210927      *RFS1119590 Starts
091902210927          03 lc_CalculatorRejCode        PIC X(3).
091903210927             88 pb-InsufficientBal       VALUES "11 " "G1 " "G45" "G46"
091904210927                                                "G23" "G44" "G2 " "G3 ".
091905210927      *RFS1119590 Ends
091906211004      *RFS1120884 START
091907211004          03 li_ATPIRemFedTaxAmt         PIC S9(13)V9(2) VALUE 0.
091908211004          03 li_ATPIRemProvTaxAmt        PIC S9(13)V9(2) VALUE 0.
091909211004          03 li_ATPITransFedTaxAmt       PIC S9(13)V9(2) VALUE 0.
091910211004          03 li_ATPITransProvTaxAmt      PIC S9(13)V9(2) VALUE 0.
091911211004      *RFS1120884 END
092100190627      * Report Work file fields
092200190627       01 lc_ReportFields.
092300190627          03 ld_RP_PlaceDate             PIC S9(08).
092400190627          03 li_RP_TransNo               PIC S9(9).
092500190627          03 ld_RP_TradeDate             PIC S9(08).
092600190627          03 lc_RP_InvCode               PIC X(05).
092700190627          03 lc_RP_FundCode              PIC X(05).
092800190704          03 lc_RP_TransType             PIC X(03).
092900190627          03 li_RP_Gross                 PIC S9(13)V9(2).
093000190627          03 li_RP_Net                   PIC S9(13)V9(2).
093100190627          03 li_RP_Units                 PIC S9(13)V9(3).
093200190627          03 li_RP_Price                 PIC S9(09)V9(4).
093300190627          03 li_RP_OutstandingBal        PIC S9(13)V9(2).
093400190627          03 li_RP_RemainingMV           PIC S9(13)V9(2).
093500190627          03 lc_RP_Reason                PIC X(40).
093600190725      * String fields
093700190725       01 lc_StringFields.
093800190725           05 lc-InvDataString              PIC  X(1000).
093900190725           05 ln-Tally                      PIC  9(4).
094000190725           05 ln-InvStringCnt               PIC  9(4).
094100190725           05 ln-TotalCnt                   PIC  9(4).
094200190627
094300190912      *RFS1018639 START
094400190911      * QCAPCMD Fields
094500190911       77  QCAPCMD                                 PIC X(00010)
094600190911                    VALUE 'QCAPCMD'.
094700190911
094800190911       01  QUS-EC.
094900190911           05  BYTES-PROVIDED                   PIC S9(00009) BINARY.
095000190911           05  BYTES-AVAILABLE                  PIC S9(00009) BINARY.
095100190911           05  EXCEPTION-ID                     PIC  X(00007).
095200190911           05  RESERVED                         PIC  X(00001).
095300190911           05  EXCEPTION-DATA                   PIC  X(00001).
095400190911
095500190911       01  QCA-PCMD-CPOP0100.
095600190911           05  COMMAND-PROCESS-TYPE            PIC S9(00009) BINARY.
095700190911           05  DBCS-DATA-HANDLING              PIC  X(00001).
095800190911           05  PROMPTER-ACTION                 PIC  X(00001).
095900190911           05  COMMAND-STRING-SYNTAX           PIC  X(00001).
096000190911           05  MESSAGE-KEY                     PIC  X(00004).
096100190911           05  RESERVED                        PIC  X(00009).
096200190911
096300190911       01  COMMAND-LENGTH  PIC S9(09) VALUE 50 BINARY.
096400190911       01  RECEIVER        PIC  X(01).
096500190911       01  RECEIVER-LENGTH PIC S9(09) VALUE  0 BINARY.
096600190911       01  OPTIONS-SIZE    PIC S9(09) VALUE 20 BINARY.
096700190911       01  FORMAT-NAME     PIC  X(08) VALUE 'CPOP0100'.
096800190911       01  FIRST-ERROR     PIC  X(01) VALUE '0'.
096900190912      *RFS1018639 END
097000210501      *RFS1113861 Starts
097100210501       01  LNK-GETDSCMET-PARAMETERS.
097200210501           05 LNK-ACCOUNT-NO                   PIC S9(09).
097300210501           05 LNK-TRANS-TYPE-CODE              PIC X(03).
097400210501           05 LNK-TRANS-ORIGIN-CODE            PIC X(03).
097500210501           05 LNK-TRANS-SUBTYPE                PIC X(05).
097600210501           05 LNK-DSC-REDUCTION-METHOD         PIC X(01).
097700210501              88 LNK-DSC-REDUCTION-METHOD-CHRG       VALUE "C".
097800210501              88 LNK-DSC-REDUCTION-METHOD-WAIVE      VALUE "S".
097900210501           05 LNK-RET-CODE                     PIC X(02).
098000210501              88 LNK-RET-CODE-OK                     VALUE SPACES.
098100210501              88 LNK-RET-CODE-ACC-NOT-EXIST          VALUE "20".
098200210501              88 LNK-RET-CODE-DSC-RED-NOT-EXIST      VALUE "22".
098300210501      *RFS1113861 Ends
098400210501
098500190627      * Copybooks
098600190627       COPY CPTRNPST1.
098700190627       COPY CPCTLP.
098800190712       COPY CPGICRD.
098900190717       COPY INTCLCLS.
099000190725       COPY CPCDSCCLC.
099100190627
099200190627
099300200728      *RFS186053 START - Parameters for new mode
099400200728      *PROCEDURE DIVISION.
099500200728       LINKAGE SECTION.
099600200730       01 pi_HIERWTDAccountNo      PIC S9(9) COMP-3.
099700200728       01 pc_HIERWTDInvestmentCode PIC X(5).
099701210830      *RFS1118574 Start
099702210830       01 pc_StrSeq                PIC X(10).
099703210830       01 pc_EndSeq                PIC X(10).
099704210830      *RFS1118574 End
099800200728
099900200728       PROCEDURE DIVISION USING pi_HIERWTDAccountNo
099901210830      *RFS1118574 Start
099902210830      *                       pc_HIERWTDInvestmentCode.
099903210830                                pc_HIERWTDInvestmentCode
099904210830                                pc_StrSeq
099905210830                                pc_EndSeq.
099906210830      *RFS1118574 End
100100200728      *RFS186053 END
100200190627      *---------------------------------
100300190627       MAIN-PROCESS.
100400190627      *---------------------------------
100500190627           PERFORM Initial-Logic.
100600190627           PERFORM Detail-Process.
100700190627           PERFORM EndOfProgram.
100800190627
100900190627      *---------------------------------
101000190627       Initial-Logic.
101100190627      *---------------------------------
101200190627           SET WS-ERR-OK  TO TRUE.
101300190627
101400190627           EXEC SQL
101500190627             WHENEVER SQLERROR CONTINUE
101600190627           END-EXEC.
101700190627
101800190627           INITIALIZE lc_ProcessDate.
101900190627           CALL "RTVPRCDTP" USING lc_ProcessDate.
101901210830      *RFS1118574 Start
101902210830           IF pc_StrSeq IS NOT NUMERIC OR
101903210830              pc_EndSeq IS NOT NUMERIC
101904210830              MOVE "0000000000" TO pc_StrSeq
101905210830              MOVE "9999999999" TO pc_EndSeq
101906210830           END-IF
101907210830           MOVE pc_StrSeq  TO li_StrNo
101908210830           MOVE pc_EndSeq  TO li_EndNo
101909210830      *RFS1118574 End
102000190627
102100190627           INITIALIZE lc_ACLVModFlag.
102200190627           CALL "RTVMODAUTH" USING lc_ModuleACLVDSC lc_ACLVModFlag.
102300210501
102400210501      *RFS1113861 Starts
102500210501           INITIALIZE lc_DSCMETFlag.
102600210501           CALL "RTVMODAUTH" USING lc_ModuleDSCMETHOD lc_DSCMETFlag.
102700210501      *RFS1113861 Ends
102800190627
102900190712           INITIALIZE lc_GICSysPamDateDA, lc_AccLevelACB.
103000190712           ACCEPT lc_GICSysPamDateDA FROM WS-DTAARA-MFAGICPARM
103100190712                                     FOR "MFAGICPARM".
103200190712           MOVE lc_GICSysPamDateDA(7:1) TO lc_AccLevelACB.
103300190712
103400200417099219*    IF lc_ACLVModFlag NOT = lncc_Y
103500190725              PERFORM Init-Calc-Files
103600200417099219*    END-IF.
103700190627      *Transaction workfile - WRKWHTRANS
103800190627           EXEC SQL
103900190627           DROP TABLE QTEMP/WRKWHTRANS
104000190627           END-EXEC.
104100190627           EXEC SQL
104200190627           CREATE OR REPLACE TABLE QTEMP/WRKWHTRANS LIKE MFATRNP
104300190627           END-EXEC.
104400200728      *RFS186053 START
104500200728      *Moved report file creation to JOBAWDGEN
104600190627      *Report workfile - WRKWDHIER
104700200728      *    EXEC SQL
104800200728      *    DROP TABLE WRKWDHIER
104900200728      *    END-EXEC.
105000200728      *    EXEC SQL
105100200728      *    CREATE OR REPLACE TABLE WRKWDHIER
105200200728      *    (
105300200728      *      ACCOUNT_NO FOR ACCNO    NUMERIC(9)
105400200728      *                              NOT NULL WITH DEFAULT,
105500200728      *      PLACEMENT_DATE FOR PLCDATE NUMERIC(9)
105600200728      *                              NOT NULL WITH DEFAULT,
105700200728      *      TRANSACTION_NO FOR TRANSNO NUMERIC(9)
105800200728      *                              NOT NULL WITH DEFAULT,
105900200728      *      TRADE_DATE FOR TRADATE  NUMERIC(9)
106000200728      *                              NOT NULL WITH DEFAULT,
106100200728      *      INVESTMENT_CODE FOR INVCODE CHAR(5)
106200200728      *                              NOT NULL WITH DEFAULT,
106300200728      *      INDUSTRY_FUND_CODE FOR FUNDCODE CHAR(5)
106400200728      *                              NOT NULL WITH DEFAULT,
106500200728      *      TRANSACTION_TYPE FOR TRANTYPE CHAR(3)
106600200728      *                              NOT NULL WITH DEFAULT,
106700200728      *      ORIGIN_CODE FOR TRANORIG CHAR(3)
106800200728      *                              NOT NULL WITH DEFAULT,
106900200728      *      GROSS FOR GROSSAMT      NUMERIC(13,2)
107000200728      *                              NOT NULL WITH DEFAULT,
107100200728      *      NET FOR NETAMT          NUMERIC(13,2)
107200200728      *                              NOT NULL WITH DEFAULT,
107300200728      *      UNITS FOR UNITAMT       NUMERIC(13,3)
107400200728      *                              NOT NULL WITH DEFAULT,
107500200728      *      PRICE FOR UNITPRC       NUMERIC(9,4)
107600200728      *                              NOT NULL WITH DEFAULT,
107700200728      *      GROSS_OF_ORIGINAL_TRANS FOR OGGROSS NUMERIC(13,2)
107800200728      *                              NOT NULL WITH DEFAULT,
107900200728      *      OUTSTANDING_BALANCE FOR REMBAL NUMERIC(13,2)
108000200728      *                              NOT NULL WITH DEFAULT,
108100200728      *      REMAINING_MARKET_VALUE FOR REMFMV NUMERIC(13,2)
108200200728      *                              NOT NULL WITH DEFAULT,
108300200728      *      REASON_OF_REPORTING FOR REASON CHAR(40)
108400200728      *                              NOT NULL WITH DEFAULT
108500200728      *    )
108600200728      *    END-EXEC.
108700200728
108800200728      *Handle parameters
108900210512      *RFS1113861 Starts
109000210512           SET lb_FeegenCallNo TO TRUE.
109100210512           IF pc_HIERWTDInvestmentCode = lncc_FEE
109200210512              SET lb_FeegenCallYes TO TRUE
109300210512           END-IF.
109400210512      *RFS1113861 Ends
109500210625      *RFS1113880 Starts
109600210625           IF pc_HIERWTDInvestmentCode = lncc_FEB
109700210625              MOVE lncc_EnteredByF TO lncc_EnteredBy
109800210625           ELSE
109900210625              MOVE lncc_EnteredByC TO lncc_EnteredBy
110000210625           END-IF.
110100210625      *RFS1113880 Ends
110101210812
110102210812      *RFS180770 STARTS
110103210812           IF pc_HIERWTDInvestmentCode = lncc_MFE
110104210812              MOVE lncc_EnteredByM TO lncc_EnteredBy
110105210812           END-IF
110106210812      *RFS180770 ENDS
110107210812
110200200728           INITIALIZE pc_HIERWTDInvestmentCode
110300200728                      li_PassedAccountNo.
110400200728           IF pi_HIERWTDAccountNo > 0
110500200728              MOVE pi_HIERWTDAccountNo TO li_PassedAccountNo
110600200728           END-IF.
110700200728      *RFS186053 END
110800190627           INITIALIZE lc_ReportFields.
110900190912      *RFS1018639 START - For QCAPCMD API call
111000190911      * Initialize the error code parameter.  To signal exceptions to
111100190911      * this program by the API, you need to set the bytes provided
111200190911      * field of the error code to zero.  Because this program has
111300190911      * exceptions sent back through the error code parameter, it sets
111400190911      * the bytes provided field to the number of bytes it gives the
111500190911      * API for the parameter.
111600190911           MOVE 16 TO BYTES-PROVIDED.
111700190911      * Initialize QCAPCMD options control block for CL processing
111800190911           MOVE 0 TO COMMAND-PROCESS-TYPE.
111900190911           MOVE '0' TO DBCS-DATA-HANDLING.
112000190911           MOVE '0' TO PROMPTER-ACTION.
112100190911           MOVE '0' TO COMMAND-STRING-SYNTAX.
112200190911           MOVE SPACES TO MESSAGE-KEY.
112300190911           MOVE LOW-VALUES TO RESERVED OF QCA-PCMD-CPOP0100.
112400190912      *RFS1018639 END
112500190627
112600190627      *---------------------------------
112700190627       Detail-Process.
112800190627      *---------------------------------
112900190627           PERFORM GetHierarchy.
113000200728      *RFS186053 START - Separate flows based on account no parameter
113100200728      *    PERFORM GetExchangeType.
113200200728      *    PERFORM GetPendingTrans.
113300200728           IF li_PassedAccountNo > 0
113400200728              MOVE li_PassedAccountNo to li_AccountNo
113500200728              PERFORM GetAccInvs
113600200728              IF li_NoOfInvRowsFetched > 0
113700200728                 IF lc_ACLVModFlag = lncc_Y
113800210518      *RFS1113861 Starts
113900210518                 AND lb_FeegenCallNo
114000210518      *RFS1113861 Ends
114100200728                    PERFORM GetAccLvlMatureFree
114200200728                 END-IF
114300200728                 PERFORM GetFirstAccountHierInv
114400200728              END-IF
114500200728           ELSE
114600200728              PERFORM GetExchangeType
114700200728              PERFORM GetPendingTrans
114800200728           END-IF.
114900200728      *RFS186053 END
115000190627
115100190627      *---------------------------------
115200190627       GetHierarchy.
115300190627      *---------------------------------
115400190627           EXEC SQL
115500190627             DECLARE GetHier CURSOR FOR
115600190627             SELECT
115700190627               HIERP.HIERARCHY_SEQUENCE,
115800190627               HIERP.PRODUCT_TYPE_CODE,
115900190627               HIERP.MONEY_MARKET_FUND,
116000190627               HIERP.LOAD_STRUCTURE,
116100190627               HIERP.EXTERNAL_LOAD_TYPE_CODE,
116200190627               HIERP.ASSET_CRITERIA
116300190627             FROM MFAWDHIERP HIERP
116400190627             ORDER BY HIERP.HIERARCHY_SEQUENCE
116500190627           END-EXEC.
116600190627           EXEC SQL
116700190627             OPEN GetHier
116800190627           END-EXEC.
116900190627           MOVE SQLSTATE TO lc_sqlStates.
117000190627           EVALUATE TRUE
117100190627               WHEN lncc_sqlSuccessful
117200190627                    CONTINUE
117300190627               WHEN OTHER
117400190627                    SET lncc_Err12 TO TRUE
117500190627                    MOVE lncc_ErrOpenGetHier
117600190627                      TO lc_sqlErrShortDESCR
117700190627                    PERFORM SQLFailProcess
117800190627           END-EVALUATE.
117900190627           INITIALIZE ltb_HierTable.
118000190627           EXEC SQL
118100190627             FETCH NEXT FROM GetHier
118200190627             FOR  :lnci_HierRec ROWS
118300190627             INTO :ltb_HierRecs:ltb_IndicatorsH
118400190627           END-EXEC.
118500190627           MOVE SQLSTATE TO lc_sqlStates.
118600190627           EVALUATE TRUE
118700190627               WHEN lncc_sqlSuccessful
118800190627                    COMPUTE li_NoOfHierRowsFetched = SQLERRD(3)
118900190627                    CONTINUE
119000190627      * End program if there are no hierarchy records
119100190627               WHEN lncc_sqlEnd
119200190627                    COMPUTE li_NoOfHierRowsFetched = SQLERRD(3)
119300190627                    SET lncc_Err13 TO TRUE
119400190627                    MOVE lncc_ErrNoRecMFAWDHIERP
119500190627                      TO lc_sqlErrShortDESCR
119600190627                    PERFORM Dsp-Error
119700190627                    PERFORM CloseGetHier
119800190627                    PERFORM EndOfProgram
119900190627               WHEN OTHER
120000190627                    SET lncc_Err14 TO TRUE
120100190627                    MOVE lncc_ErrFetchGetHier
120200190627                      TO lc_sqlErrShortDESCR
120300190627                    PERFORM SQLFailProcess
120400190627           END-EVALUATE.
120500190627           PERFORM CloseGetHier.
120600190627
120700190627      *---------------------------------
120800190627       GetPendingTrans.
120900190627      *---------------------------------
121000190627           EXEC SQL
121100190627             DECLARE GetTrans CURSOR FOR
121200190627             SELECT
121300190627               TRNP.PLACEMENT_DATE,
121400190627               TRNP.TRANS_NO,
121500190627               TRNP.BATCH_DATE,
121600190627               TRNP.BATCH_CODE,
121700190627               TRNP.PROCESS_DATE,
121800190627               TRNP.TRADE_DATE,
121900190627               TRNP.TRANS_TYPE_CODE,
122000190627               TRNP.TRANS_ORIGIN_CODE,
122100190627               TRNP.ACCOUNT_NO,
122200190627               TRNP.INVESTMENT_CODE,
122300190627               TRNP.INDUSTRY_FUND_CODE,
122400190627               TRNP.GROSS_AMT,
122500190627               TRNP.NET_AMT,
122600190627               TRNP.PERCENT_AMT,
122700190627               TRNP.UNIT_AMT,
122800190627               TRNP.UNIT_PRICE,
122900190627               TRNP.CLOSING_UNIT_BAL,
123000190627               TRNP.TRANS_PROC_SEQ_NO,
123100190627               TRNP.REJECTION_CODE,
123200190627               TRNP.GROSS_OR_NET,
123300190627               TRNP.TRANS_SEQ_NO,
123400190627               TRNP.DEALER_CODE,
123500190627               TRNP.DEALER_REP_CODE,
123600190627               TRNP.WIRE_ORDER_NO,
123700190627               TRNP.SETTLEMENT_DATE,
123800190627               TRNP.SETTLED_GROSS_OR_NET,
123900190627               TRNP.SETTLEMENT_AMT,
124000190627               TRNP.SUPPRESS_CONFIRMATION,
124100190627               TRNP.CONTR_REDEM_CODE,
124200190627               TRNP.TRANS_STATUS_CODE,
124300190627               TRNP.ORIGINAL_DOCUMENTS_RECVD,
124400190627               TRNP.HIDDEN_TRANS,
124500190627               TRNP.AVERAGE_UNIT_COST,
124600190627               TRNP.RESULTANT_AVERAGE_UNIT_COST,
124700190627               TRNP.SPLIT_OPTION_CODE,
124800190627               TRNP.RECEIPTED,
124900190627               TRNP.RECEIPT_NUMBER,
125000190627               TRNP.INSTITUTION_CODE,
125100190627               TRNP.BRANCH_CODE,
125200190627               TRNP.REVERSAL_CODE,
125300190627               TRNP.REVERSE,
125400190627               TRNP.ADJUST,
125500190627               TRNP.PAYMENT_TYPE_CODE,
125600190627               TRNP.METHOD_OF_DELIVERY,
125700190627               TRNP.CHANGED_DATE,
125800190627               TRNP.CHANGED_TIME,
125900190627               TRNP.CHANGED_BY_USER,
126000190627               TRNP.ENTERED_BY,
126100190627               TRNP.TIME_PLACED,
126200190627               TRNP.WIRE_ORDER_FLAG,
126300190627               TRNP.NET_SETTLEMENT_FLAG,
126400190627               TRNP.NOMINEE_CODE
126401210929      *RFS1120884 START
126402210929               ,ATP.SPLIT_OPTION_CODE
126403210929               ,ATP.ADD_REPLACE_TAX
126404210929               ,ATP.FEDERAL_TAX_AMT
126405210929               ,ATP.FEDERAL_TAX_PERCENT
126406210929               ,ATP.PROVINCIAL_TAX_AMT
126407210929               ,ATP.PROVINCIAL_TAX_PERCENT
126408210929               ,ATP.INPUT_SPLIT_OPTION_CODE
126409210929               ,ATP.INPUT_ADD_REPLACE_TAX
126410210929               ,ATP.INPUT_FEDERAL_TAX_AMT
126411210929               ,ATP.INPUT_FEDERAL_TAX_PERCENT
126412210929               ,ATP.INPUT_PROVINCIAL_TAX_AMT
126413210929               ,ATP.INPUT_PROVINCIAL_TAX_PERCENT
126414210929      *RFS1120884 END
126415210830      *RFS1118574 Start
126416210830      *      FROM MFATRNP TRNP
126417210830             FROM WKHIERWTD HIERWTD
126418210830             INNER JOIN MFATRNP TRNP
126419210830             ON  TRNP.PLACEMENT_DATE = HIERWTD.PLACEMENT_DATE
126420210830             AND TRNP.TRANS_NO       = HIERWTD.TRANS_NO
126421210830      *RFS1118574 End
126422210929      *RFS1120884 START
126423210929             LEFT  JOIN MFATRNATP ATP
126424210929             ON  TRNP.PLACEMENT_DATE = ATP.PLACEMENT_DATE
126425210929             AND TRNP.TRANS_NO       = ATP.TRANS_NO
126426210929      *RFS1120884 END
126600190627             WHERE
126700190627               TRNP.TRANS_STATUS_CODE = :lncc_PND AND
126701210830118574         HIERWTD.Seq_No between :li_StrNo and :li_EndNo AND
126800190627               (
126900190627                (TRNP.TRANS_ORIGIN_CODE IN
127000190627                                (:lncc_AWE, :lncc_AWC, :lncc_AWR) AND
127100190627                 TRNP.TRANS_TYPE_CODE IN
127200190627                                (:lncc_SEL, :lncc_SWO, :lncc_TRO)
127300190627                ) OR
127400190627                (TRNP.TRANS_ORIGIN_CODE = :lncc_DIR AND
127500190627                 TRNP.TRANS_TYPE_CODE = :lncc_FEE
127600190627                )
127700190627               ) AND
127800190917      *RFS1018639 START
127900190917      *        TRNP.REJECTION_CODE IN (:lncc_11, :lncc_G1)
128000191008      *        TRNP.REJECTION_CODE IN (:lncc_11, :lncc_G1,
128100191008      *                               :lncc_G45, :lncc_G46)
128200191008      *RFS1018639 END
128300191008      *RFS1019281 START
128400191008              TRNP.REJECTION_CODE IN (:lncc_11, :lncc_G1,
128500191119                                     :lncc_G45, :lncc_G46, :lncc_G23,
128600210113      *RFS1108976 Starts
128700210113                                     :lncc_G44,
128800210113      *RFS1108976 Ends
128900191009                                     :lncc_G2, :lncc_G3)
129000191008      *RFS1019281 END
129100210625      * RFS1113880 Starts
129200210625      *        AND TRNP.ENTERED_BY <> :lncc_EnteredBy
129300210625               AND TRNP.ENTERED_BY NOT IN (:lncc_EnteredByF,
129400210625                                           :lncc_EnteredByC)
129500210625      * RFS1113880 Ends
129600190627             ORDER BY
129700190627               TRNP.ACCOUNT_NO,
129800190627               TRNP.TRADE_DATE,
129900190627               TRNP.PLACEMENT_DATE,
130000190627               TRNP.TRANS_NO
130100190627           END-EXEC.
130200190627           EXEC SQL
130300190627             OPEN GetTrans
130400190627           END-EXEC.
130500190627           MOVE SQLSTATE TO lc_sqlStates.
130600190627           EVALUATE TRUE
130700190627               WHEN lncc_sqlSuccessful
130800190627                    CONTINUE
130900190627               WHEN OTHER
131000190627                    SET lncc_Err16 TO TRUE
131100190627                    MOVE lncc_ErrOpenGetTrans
131200190627                      TO lc_sqlErrShortDESCR
131300190627                    PERFORM SQLFailProcess
131400190627           END-EVALUATE.
131500190627           INITIALIZE li_PrevAccountNo, ld_PrevPlaceDate,
131600190708                      li_PrevTransNo, li_TransHeaderNo, li_TransNum.
131700190627           SET lb_EndOfGetTransFalse TO TRUE.
131800190627           PERFORM FetchTrans UNTIL lb_EndOfGetTransTrue.
131900190627           PERFORM CloseGetTrans.
132000190627
132100190627      *---------------------------------
132200190627       FetchTrans.
132300190627      *---------------------------------
132400190708           INITIALIZE ltb_TransTable,
132500190627                      li_NoOfTrnRowsFetched.
132600190627           SET lb_TransNoUpdNo TO TRUE.
132700190627           EXEC SQL
132800190627             FETCH NEXT FROM GetTrans
132900190627             FOR  :lnci_TransRec ROWS
133000190627             INTO :ltb_TransRecs:ltb_IndicatorsT
133100190627           END-EXEC.
133200190627           MOVE SQLSTATE TO lc_sqlStates.
133300190627           EVALUATE TRUE
133400190627               WHEN lncc_sqlSuccessful
133500190627                    COMPUTE li_NoOfTrnRowsFetched = SQLERRD(3)
133600190627               WHEN lncc_sqlEnd
133700190627                    SET lb_EndOfGetTransTrue TO TRUE
133800190627                    COMPUTE li_NoOfTrnRowsFetched = SQLERRD(3)
133900190627               WHEN OTHER
134000190627                    SET lncc_Err17 TO TRUE
134100190627                    MOVE lncc_ErrFetchGetTrans
134200190627                      TO lc_sqlErrShortDESCR
134300190627                    PERFORM SQLFailProcess
134400190627           END-EVALUATE.
134500190627           SET li_CounterTrans TO 1.
134600190627           PERFORM ProcessTrans TEST BEFORE UNTIL li_CounterTrans >
134700190627                                            li_NoOfTrnRowsFetched.
134800190627
134900190627      *---------------------------------
135000190627       ProcessTrans.
135100190627      *---------------------------------
135200190627           SET lb_HierUsedNo TO TRUE.
135300190708           SET lb_RemoveOrigWDNo TO TRUE.
135400190917184781     SET lb_HierTransRejNo TO TRUE.
135500190704           INITIALIZE lr_TransRec.
135600190627           MOVE ltb_TransRecs(li_CounterTrans) TO lr_TransRec.
135700190627           MOVE li_GrossAmt TO li_RemainingGross, li_RemainingNet.
135800190704           IF lc_SplitOptionCode = lncc_Units
135900190704              PERFORM CalcGrossFromUnits
136000190704           END-IF.
136100190627           IF li_NetAmt > 0
136200190627              MOVE li_NetAmt TO li_RemainingNet
136300190627           END-IF.
136400190627           MOVE lc_OBatchCode TO lc_BatchCode.
136500190627           MOVE lncc_Dollar TO lc_TransSplitOptionCode.
136600190704           MOVE lc_OTrnTypeCode TO lc_GenTransType.
136700190627           INITIALIZE li_TargetAccountNo.
136800190724           INITIALIZE lr_RedemptionInfo, lc_TreatTxnAsAWD.
136900190704           IF lc_OTrnTypeCode = lncc_FEE
137000190627              PERFORM GetFEEInfo
137100190627           ELSE
137200190627              PERFORM GetAWDInfo
137300200729186053        PERFORM ProcessAWDInstructions
137400190627           END-IF.
137500191023184886     PERFORM CheckEntireAccAssign.
137600190627      *SKIP TRANSACTION IF AWD REPURCHASE TO SAME ACCOUNT
137700191030      *RFS184886 START - OR SKIP IN CASE OF ACTIVE ENTIRE ACC ASSIGNMENT
137800191023      *    IF li_AccountNo NOT = li_TargetAccountNo
137900191023           IF ((li_AccountNo NOT = li_TargetAccountNo)
138000191023              AND (lc_EntireAccAssign NOT = lncc_Y))
138100191023      *RFS184886 END
138200190627              IF li_AccountNo NOT = li_PrevAccountNo
138300210531      *RFS1113861 Starts
138400210531              OR (li_AccountNo     = li_PrevAccountNo
138500210531              AND lc_OTrnTypeCode  = lncc_FEE)
138600210531      *RFS1113861 Ends
138700190627                 MOVE li_AccountNo TO li_PrevAccountNo
138800190627                 PERFORM GetAccInvs
138900190709                 PERFORM GetRESPInfo
139000210530      *RFS1113861 Starts
139100210530                 PERFORM CheckINDST
139200210530                 IF lb_INDSTExistsYes
139300210530                    INITIALIZE li_FedTaxAmt, li_FedTaxPercent,
139400210530                               li_ProvTaxAmt, li_ProvTaxPercent
139500210530                               lc_TaxSplitOption, lc_AddReplaceTax
139600210530                 END-IF
139700210530      *RFS1113861 Ends
139800190627              END-IF
139900190708              PERFORM OriginalWDPrerequisites
140000190713              IF (li_NoOfInvRowsFetched > 0 AND lb_RemoveOrigWDYes)
140100190713                  OR
140200190713                 (li_NoOfInvRowsFetched > 1 AND lb_HierUsedYes)
140300190725                 IF lc_ACLVModFlag = lncc_Y
140400210519      *RFS1113861 Starts
140500210519                 AND lc_OTrnTypeCode NOT = lncc_Fee
140600210519      *RFS1113861 Ends
140700190725                    PERFORM GetAccLvlMatureFree
140800190725                 END-IF
140900190627                 PERFORM GoThroughHier
141000190627              END-IF
141100190627           END-IF.
141200190708           IF lb_HierUsedYes
141300190708              PERFORM UpdateBatchHeader
141400190715              IF (lc_GrossOrNet = lncc_G AND li_RemainingGross > 0)
141500190715                  OR
141600190715                 (lc_GrossOrNet = lncc_N AND li_RemainingNet > 0)
141700190708                 PERFORM ReportOutstandingBal
141800190708              END-IF
141900190708           END-IF.
141901210830      *RFS1118574 Start
141902210830      *    IF lb_TransNoUpdYes AND
141903210830      *       (li_CounterTrans >= li_NoOfTrnRowsFetched)
141904210830      *       PERFORM UpdateTransNum
141905210830      *    END-IF.
141906210830      *RFS1118574 End
142400190627           SET li_CounterTrans UP BY 1.
142500190704
142600190704      * ---------------------------------
142700190704       CalcGrossFromUnits.
142800190704      * ---------------------------------
142900190704           EXEC SQL
143000190704             SELECT
143100190704               (DECIMAL(
143200190704                 ROUND(
143300190704                  :li_UnitAmt
143400190704                  *
143500190704                  COALESCE(
143600190704                   CASE WHEN InvuppY.Unit_Price > 0
143700190704                    THEN InvuppY.Unit_Price
143800190704                    ELSE InvuppS.Unit_Price
143900190704                   END, 0)
144000190704                  /
144100190704                  COALESCE( Exrhmp.Exchange_Rate,1)
144200190704                 , 2)
144300190704                ,13,2)
144400190704               )
144500190704               INTO :li_GrossAmt:lb_Indicators
144600190704               FROM
144700190704                 Mfainvp invp
144800190704                 LEFT OUTER JOIN Mfainvupp InvuppY ON
144900190719                 InvuppY.Trade_Date = :ld_TrnTradeDate AND
145000190704                 invp.Investment_Code = InvuppY.Investment_Code AND
145100190704                 InvuppY.Distribution_Flag = :lncc_Y
145200190704                 LEFT OUTER JOIN Mfainvupp InvuppS ON
145300190719                 InvuppS.Trade_Date = :ld_TrnTradeDate AND
145400190704                 invp.Investment_Code = InvuppS.Investment_Code AND
145500190704                 InvuppS.Distribution_Flag = :lncc_Space
145600190704                 LEFT OUTER JOIN Mfaexrhmp Exrhmp ON
145700190704                 Exrhmp.Currency = Invp.Currency AND
145800190719                 Exrhmp.Trade_Date = :ld_TrnTradeDate AND
145900190704                 Exrhmp.Exchange_Rate_Type = :lc_ExchangeRateType
146000190704               WHERE
146100190704                 invp.Investment_code = :lc_OInvCode
146200190704           END-EXEC.
146300190704           MOVE SQLSTATE TO lc_sqlStates.
146400190704           EVALUATE TRUE
146500190704               WHEN lncc_sqlSuccessful
146600190704                    CONTINUE
146700190704               WHEN OTHER
146800190704                    SET lncc_Err72 TO TRUE
146900190704                    MOVE lncc_ErrGetGrossFrmUnits
147000190704                      TO lc_sqlErrShortDESCR
147100190704                    PERFORM SQLFailProcess
147200190704           END-EVALUATE.
147300190704           MOVE li_GrossAmt TO li_RemainingGross.
147400190627
147500190627      * ---------------------------------
147600190627       GetAWDInfo.
147700190627      * ---------------------------------
147800190627           IF lc_PaymentTypeCode = lncc_C
147900190627             INITIALIZE lr_AWDChqInfo
148000190627             EXEC SQL
148100190627               SELECT
148200190627                 TRNCP.PAYEE_NAME, TRNCP.PAYEE_NAME2, TRNCP.ADDR_NO,
148300190627                 TRNREP.WAIVE_DSC, TRNREP.DSC_WAIVE_REASON_CODE
148400190627               INTO :lc_PayeeName,
148500190627                    :lc_PayeeName2,
148600190627                    :li_AddrNo,
148700190627                    :lc_WaiveDSC,
148800190627                    :lc_DSCWaiveReason
148900190627               FROM MFATRNCP TRNCP
149000190627               INNER JOIN MFATRNREP TRNREP ON
149100190627                 TRNCP.PLACEMENT_DATE = TRNREP.PLACEMENT_DATE AND
149200190627                 TRNCP.TRANS_NO = TRNREP.TRANS_NO
149300190627               WHERE TRNCP.PLACEMENT_DATE = :ld_PlaceDate
149400190627                 AND TRNCP.TRANS_NO = :li_TransNo
149500190627             END-EXEC
149600190627             MOVE SQLSTATE TO lc_sqlStates
149700190627             EVALUATE TRUE
149800190627                 WHEN lncc_sqlSuccessful
149900190724                      MOVE lncc_Y TO lc_TreatTxnAsAWD
150000190627                      CONTINUE
150100190627                 WHEN OTHER
150200190627                      SET lncc_Err42 TO TRUE
150300190627                      MOVE lncc_ErrGetAWDChqInfo
150400190627                        TO lc_sqlErrShortDESCR
150500190627                      PERFORM SQLFailProcess
150600190627             END-EVALUATE
150700190627           END-IF
150800190627
150900190627           IF lc_PaymentTypeCode = lncc_E
151000190627             INITIALIZE lr_AWDEftInfo
151100190627             EXEC SQL
151200190627               SELECT
151300190627                 TRNBP.BANK_SEQ_NO,
151400190627                 TRNREP.WAIVE_DSC, TRNREP.DSC_WAIVE_REASON_CODE
151500190627               INTO :li_BankSeqNo,
151600190627                    :lc_WaiveDSC,
151700190627                    :lc_DSCWaiveReason
151800190627               FROM MFATRNBP TRNBP
151900190627               INNER JOIN MFATRNREP TRNREP ON
152000190627                 TRNBP.PLACEMENT_DATE = TRNREP.PLACEMENT_DATE AND
152100190627                 TRNBP.TRANS_NO = TRNREP.TRANS_NO
152200190627               WHERE TRNBP.PLACEMENT_DATE = :ld_PlaceDate
152300190627                 AND TRNBP.TRANS_NO = :li_TransNo
152400190627             END-EXEC
152500190627             MOVE SQLSTATE TO lc_sqlStates
152600190627             EVALUATE TRUE
152700190627                 WHEN lncc_sqlSuccessful
152800190724                      MOVE lncc_Y TO lc_TreatTxnAsAWD
152900190627                      CONTINUE
153000190627                 WHEN OTHER
153100190627                      SET lncc_Err43 TO TRUE
153200190627                      MOVE lncc_ErrGetAWDEftInfo
153300190627                        TO lc_sqlErrShortDESCR
153400190627                      PERFORM SQLFailProcess
153500190627             END-EVALUATE
153600190627           END-IF.
153700190627           IF lc_TrnOriginCode = lncc_AWR
153800190627              PERFORM ValidateAWR
153900190627           END-IF.
154000190627
154100190627      * ---------------------------------
154200190627       GetFEEInfo.
154300190627      * ---------------------------------
154400190627           INITIALIZE lc_TransSubType.
154500190627           EXEC SQL
154600190627             SELECT COALESCE(TRANS_SUB_TYPE, " ")
154700190627             INTO :lc_TransSubType:lb_Indicators
154800190627             FROM MFATRNMSCP
154900190627             WHERE PLACEMENT_DATE = :ld_PlaceDate
155000190627               AND TRANS_NO = :li_TransNo
155100190627           END-EXEC.
155200190627           MOVE SQLSTATE TO lc_sqlStates.
155300190627           EVALUATE TRUE
155400190627               WHEN lncc_sqlSuccessful OR lncc_sqlEnd
155500190627                    CONTINUE
155600190627               WHEN OTHER
155700190627                    SET lncc_Err66 TO TRUE
155800190627                    MOVE lncc_ErrGetTransSubType
155900190627                      TO lc_sqlErrShortDESCR
156000190627                    PERFORM SQLFailProcess
156100190627           END-EVALUATE.
156200190724           EXEC SQL
156300190724             SELECT
156400190724               TRNREP.WAIVE_DSC, TRNREP.DSC_WAIVE_REASON_CODE,
156500190724               TRNREP.WAIVE_ERF, TRNREP.WAIVE_COMM_CHARGEBACK
156600210401180708        ,TRNREP.BYPASS_RULE, TRNREP.CHARGE_SALES_TAX
156700190724             INTO :lr_RedemptionInfo
156800190724             FROM MFATRNREP TRNREP
156900190724             WHERE TRNREP.PLACEMENT_DATE = :ld_PlaceDate
157000190724               AND TRNREP.TRANS_NO = :li_TransNo
157100190724           END-EXEC.
157200190724           MOVE SQLSTATE TO lc_sqlStates.
157300190724           EVALUATE TRUE
157400190724               WHEN lncc_sqlSuccessful OR lncc_sqlEnd
157500190724                    MOVE lncc_N TO lc_TreatTxnAsAWD
157600190724                    CONTINUE
157700190724               WHEN OTHER
157800190724                    SET lncc_Err82 TO TRUE
157900190724                    MOVE lncc_ErrGetFEERedInfo
158000190724                      TO lc_sqlErrShortDESCR
158100190724                    PERFORM SQLFailProcess
158200190724           END-EVALUATE.
158300190627
158400210530      *RFS1113861 Starts
158500210530           IF lc_ChargeSalesTax = lncc_Y
158600210530              PERFORM GetSalesTaxDetails
158700210530           END-IF.
158800210530      *RFS1113861 Ends
158900190627      * ---------------------------------
159000190627       ValidateAWR.
159100190627      * ---------------------------------
159200190627           INITIALIZE ld_TargetPlaceDate, li_TargetTransNo,
159300190704                      lc_TargetInvCode, lc_AWRCommRate,
159400190704                      lc_AWRSponsorRate, lc_TargetFundCode.
159500190627           EXEC SQL
159600190627             SELECT PLACEMENT_DATE_2, TRANS_NO_2
159700190627             INTO :ld_TargetPlaceDate, :li_TargetTransNo
159800190627             FROM MFATRNTGP
159900190627             WHERE PLACEMENT_DATE = :ld_PlaceDate
160000190627               AND TRANS_NO = :li_TransNo
160100190627               AND RELATIONSHIP_TYPE = :lncc_DSB
160200190627           END-EXEC.
160300190627           MOVE SQLSTATE TO lc_sqlStates.
160400190627           EVALUATE TRUE
160500190627               WHEN lncc_sqlSuccessful
160600190627                    CONTINUE
160700190627               WHEN OTHER
160800190627                    SET lncc_Err55 TO TRUE
160900190627                    MOVE lncc_ErrGetTargetTrans
161000190627                      TO lc_sqlErrShortDESCR
161100190627                    PERFORM SQLFailProcess
161200190627           END-EVALUATE.
161300190627           EXEC SQL
161400190627             SELECT ACCOUNT_NO, INVESTMENT_CODE, INDUSTRY_FUND_CODE
161500190704             INTO :li_TargetAccountNo, :lc_TargetInvCode,
161600190704                  :lc_TargetFundCode
161700190627             FROM MFATRNP
161800190627             WHERE PLACEMENT_DATE = :ld_TargetPlaceDate
161900190627               AND TRANS_NO = :li_TargetTransNo
162000190627           END-EXEC.
162100190627           MOVE SQLSTATE TO lc_sqlStates.
162200190627           EVALUATE TRUE
162300190627               WHEN lncc_sqlSuccessful
162400190627                    CONTINUE
162500190627               WHEN OTHER
162600190627                    SET lncc_Err46 TO TRUE
162700190627                    MOVE lncc_ErrGetTargetAcc
162800190627                      TO lc_sqlErrShortDESCR
162900190627                    PERFORM SQLFailProcess
163000190627           END-EVALUATE.
163100190627           IF li_AccountNo NOT = li_TargetAccountNo
163200190724             EXEC SQL
163300190724               SELECT
163400190724                 TRNREP.WAIVE_DSC, TRNREP.DSC_WAIVE_REASON_CODE
163500190724               INTO :lc_WaiveDSC,
163600190724                    :lc_DSCWaiveReason
163700190724               FROM MFATRNREP TRNREP
163800190724               WHERE TRNREP.PLACEMENT_DATE = :ld_PlaceDate
163900190724                 AND TRNREP.TRANS_NO = :li_TransNo
164000190724             END-EXEC
164100190724             MOVE SQLSTATE TO lc_sqlStates
164200190724             EVALUATE TRUE
164300190724                 WHEN lncc_sqlSuccessful
164400190724                      MOVE lncc_Y TO lc_TreatTxnAsAWD
164500190724                      CONTINUE
164600190724                 WHEN OTHER
164700190724                      SET lncc_Err83 TO TRUE
164800190724                      MOVE lncc_ErrGetAWRRedInfo
164900190724                        TO lc_sqlErrShortDESCR
165000190724                      PERFORM SQLFailProcess
165100190724             END-EVALUATE
165200190627             EXEC SQL
165300190627               SELECT COALESCE(COMM_RATE, 0), COALESCE(SPONSOR_RATE, 0)
165400190627               INTO :lc_AWRCommRate, :lc_AWRSponsorRate
165500190627               FROM MFATRNCMP
165600190627               WHERE PLACEMENT_DATE = :ld_TargetPlaceDate
165700190627                 AND TRANS_NO = :li_TargetTransNo
165800190627             END-EXEC
165900190627             MOVE SQLSTATE TO lc_sqlStates
166000190627             EVALUATE TRUE
166100190627               WHEN lncc_sqlSuccessful
166200190627                    CONTINUE
166300190627               WHEN OTHER
166400190627                    SET lncc_Err56 TO TRUE
166500190627                    MOVE lncc_ErrGetAWRRates
166600190627                      TO lc_sqlErrShortDESCR
166700190627                    PERFORM SQLFailProcess
166800190627             END-EVALUATE
166900190627           END-IF.
167000190627
167100190627      * ---------------------------------
167200190627       GetRESPInfo.
167300190627      * ---------------------------------
167400190627           INITIALIZE lc_AccTypeRule.
167500190627           EXEC SQL
167600190627             SELECT COALESCE(ACCTYP.ACCOUNT_TYPE_RULE, " ")
167700190627             INTO :lc_AccTypeRule
167800190627             FROM MFAACCNTP ACCNTP
167900190627             LEFT OUTER JOIN MFAACCTYP ACCTYP ON
168000190627               ACCNTP.ACCOUNT_TYPE_CODE = ACCTYP.ACCOUNT_TYPE_CODE
168100190627             WHERE ACCNTP.ACCOUNT_NO = :li_AccountNo
168200190627           END-EXEC.
168300190627           MOVE SQLSTATE TO lc_sqlStates.
168400190627           EVALUATE TRUE
168500190627               WHEN lncc_sqlSuccessful
168600190627                    CONTINUE
168700190627               WHEN OTHER
168800190627                    SET lncc_Err58 TO TRUE
168900190627                    MOVE lncc_ErrGetAccType
169000190627                      TO lc_sqlErrShortDESCR
169100190627                    PERFORM SQLFailProcess
169200190627           END-EVALUATE.
169300190627           IF lc_AccTypeRule = lncc_4
169400190627              INITIALIZE lc_BeneSplitCode
169500190627              EXEC SQL
169600190627                SELECT COALESCE(MIN(BENEFICIARY_SPLIT_CODE), " ")
169700190627                INTO :lc_BeneSplitCode
169800190627                FROM MFAACCBPP
169900190627                WHERE ACCOUNT_NO = :li_AccountNo
170000190627                  AND BENEFICIARY_SPLIT_DEFAULT = "R"
170100190627                  AND HRDC_FILE_DATE = 0
170200190627              END-EXEC
170300190627              MOVE SQLSTATE TO lc_sqlStates
170400190627              EVALUATE TRUE
170500190627                WHEN lncc_sqlSuccessful
170600190627                    CONTINUE
170700190627                WHEN OTHER
170800190627                    SET lncc_Err59 TO TRUE
170900190627                    MOVE lncc_ErrGetBeneCode
171000190627                      TO lc_sqlErrShortDESCR
171100190627                    PERFORM SQLFailProcess
171200190627              END-EVALUATE
171300190627           END-IF.
171400190627           IF lc_TrnOriginCode = lncc_AWR
171500190627           INITIALIZE lc_TargetAccTypeRule
171600190627           EXEC SQL
171700190627             SELECT COALESCE(ACCTYP.ACCOUNT_TYPE_RULE, " ")
171800190627             INTO :lc_TargetAccTypeRule
171900190627             FROM MFAACCNTP ACCNTP
172000190627             LEFT OUTER JOIN MFAACCTYP ACCTYP ON
172100190627               ACCNTP.ACCOUNT_TYPE_CODE = ACCTYP.ACCOUNT_TYPE_CODE
172200190627             WHERE ACCNTP.ACCOUNT_NO = :li_TargetAccountNo
172300190627           END-EXEC
172400190627           MOVE SQLSTATE TO lc_sqlStates
172500190627           EVALUATE TRUE
172600190627               WHEN lncc_sqlSuccessful
172700190627                    CONTINUE
172800190627               WHEN OTHER
172900190627                    SET lncc_Err60 TO TRUE
173000190627                    MOVE lncc_ErrGetTgtAccType
173100190627                      TO lc_sqlErrShortDESCR
173200190627                    PERFORM SQLFailProcess
173300190627           END-EVALUATE
173400190627           IF lc_TargetAccTypeRule = lncc_4
173500190627              INITIALIZE lc_TargetBeneSplitCode
173600190627              EXEC SQL
173700190627                SELECT COALESCE(MIN(BENEFICIARY_SPLIT_CODE), " ")
173800190627                INTO :lc_TargetBeneSplitCode
173900190627                FROM MFAACCBPP
174000190627                WHERE ACCOUNT_NO = :li_TargetAccountNo
174100190627                  AND BENEFICIARY_SPLIT_DEFAULT = "P"
174200190627                  AND HRDC_FILE_DATE = 0
174300190627              END-EXEC
174400190627              MOVE SQLSTATE TO lc_sqlStates
174500190627              EVALUATE TRUE
174600190627                WHEN lncc_sqlSuccessful
174700190627                    CONTINUE
174800190627                WHEN OTHER
174900190627                    SET lncc_Err61 TO TRUE
175000190627                    MOVE lncc_ErrGetTgtBeneCode
175100190627                      TO lc_sqlErrShortDESCR
175200190627                    PERFORM SQLFailProcess
175300190627              END-EVALUATE
175400190627           END-IF
175500190627           END-IF.
175600190627
175700190627      *---------------------------------
175800190627       GetAccInvs.
175900190627      *---------------------------------
176000190627           EXEC SQL
176100190627             DECLARE GetAccInvs CURSOR FOR
176200190627             SELECT
176300190627               CIVP.INVESTMENT_CODE,
176400190627               INVP.INDUSTRY_FUND_CODE, INVP.PRODUCT_TYPE_CODE,
176500190627               IGRMP.MONEY_MARKET_FUND,
176600190627               INVP.LOAD_STRUCTURE, IVMDP.EXTERNAL_LOAD_TYPE_CODE,
176700190627               PCDP.PRODUCT_TYPE_RULE,
176800191025               0, 0, 0, 0, 0
176900191025184886         , 0, " "
177000190627             FROM MFAACCIVP CIVP
177100190627               INNER JOIN MFAINVP INVP ON
177200190627               CIVP.INVESTMENT_CODE = INVP.INVESTMENT_CODE
177300190627               INNER JOIN MFAPRTCDP PCDP ON
177400190627               INVP.PRODUCT_TYPE_CODE = PCDP.PRODUCT_TYPE_CODE
177500190627               LEFT OUTER JOIN MFAINVMDP IVMDP ON
177600190627               INVP.INVESTMENT_CODE = IVMDP.INVESTMENT_CODE
177700190627               LEFT OUTER JOIN MFAINVGRMP IGRMP ON
177800190627               INVP.INVESTMENT_GROUP_CODE = IGRMP.INVESTMENT_GROUP_CODE
177900190627             WHERE
178000190627               CIVP.ACCOUNT_NO = :li_AccountNo AND
178100200904      *RFS186053 START
178200200904      *        CIVP.CURR_UNIT_BAL > 0 AND
178300200904               ((CIVP.CURR_UNIT_BAL > 0 AND :li_PassedAccountNo = 0)
178400200904                OR
178500200904                (:li_PassedAccountNo > 0)) AND
178600200904      *RFS186053 END
178700190627               PCDP.PRODUCT_TYPE_RULE IN (:lncc_6, :lncc_7, :lncc_2)
178800190627           END-EXEC.
178900190627           EXEC SQL
179000190627             OPEN GetAccInvs
179100190627           END-EXEC.
179200190627           MOVE SQLSTATE TO lc_sqlStates.
179300190627           EVALUATE TRUE
179400190627               WHEN lncc_sqlSuccessful
179500190627                    CONTINUE
179600190627               WHEN OTHER
179700190627                    SET lncc_Err19 TO TRUE
179800190627                    MOVE lncc_ErrOpenGetAccInvs
179900190627                      TO lc_sqlErrShortDESCR
180000190627                    PERFORM SQLFailProcess
180100190627           END-EVALUATE.
180200190627           PERFORM FetchAccInvs.
180300190627           PERFORM CloseGetAccInvs.
180400190627
180500190627      *---------------------------------
180600190627       FetchAccInvs.
180700190627      *---------------------------------
180800190627           INITIALIZE ltb_AccInvTable
180900190826101825                Ws-Local-Data-Area
181000190627                      li_NoOfInvRowsFetched.
181100190627           EXEC SQL
181200190627             FETCH NEXT FROM GetAccInvs
181300190627             FOR  :lnci_AccInvRec ROWS
181400190627             INTO :ltb_AccInvRecs:ltb_IndicatorsI
181500190627           END-EXEC.
181600190627           MOVE SQLSTATE TO lc_sqlStates.
181700190627           EVALUATE TRUE
181800190627               WHEN lncc_sqlSuccessful
181900190627                    COMPUTE li_NoOfInvRowsFetched = SQLERRD(3)
182000190627               WHEN lncc_sqlEnd
182100190627                    COMPUTE li_NoOfInvRowsFetched = SQLERRD(3)
182200190627               WHEN OTHER
182300190627                    SET lncc_Err20 TO TRUE
182400190627                    MOVE lncc_ErrFetchGetAccInvs
182500190627                      TO lc_sqlErrShortDESCR
182600190627                    PERFORM SQLFailProcess
182700190627           END-EVALUATE.
182800190709           SET li_CounterAccInv TO 1.
182900190709           PERFORM ProcessAccInv TEST BEFORE UNTIL li_CounterAccInv
183000190709                                           > li_NoOfInvRowsFetched.
183100190627
183200190627      *---------------------------------
183300190627       ProcessAccInv.
183400190627      *---------------------------------
183500190627           INITIALIZE lc_InvCode, li_InvMV.
183600190627           MOVE ltb_InvCode(li_CounterAccInv) TO lc_InvCode.
183700190627           PERFORM GetInvMarketValue.
183800190627           IF lc_ACLVModFlag = lncc_N AND
183900190718              ltb_LoadStruc(li_CounterAccInv) = lncc_B AND
184000190725              ltb_ProdTypeRule(li_CounterAccInv) = lncc_6 AND
184100190725              ltb_InvCode(li_CounterAccInv) NOT = lc_OInvCode
184200190627              PERFORM GetFundLvlMatureFree
184300190627           END-IF.
184400190627           SET li_CounterAccInv UP BY 1.
184500190627
184600190627      *---------------------------------
184700190627       GetInvMarketValue.
184800190627      *---------------------------------
184900191119184886     INITIALIZE li_InvMV, li_OrigInvMV.
185000190627           EXEC SQL
185100190627             SELECT
185200191025      *RFS184886 START - SUBTRACT OUTSTANDING_REDEMPTION_BALANCE
185300191025               (DECIMAL(
185400191025                 ROUND(
185500191025                  (ACCIVP.CURR_UNIT_BAL -
185600191025                   ACCIVP.OUTSTANDING_REDEMPTION_BALANCE)
185700191025                  *
185800191025                  COALESCE(
185900191025                   CASE WHEN InvuppY.Unit_Price > 0
186000191025                    THEN InvuppY.Unit_Price
186100191025                    ELSE InvuppS.Unit_Price
186200191025                   END, 0)
186300191025                  /
186400191025                  COALESCE( Exrhmp.Exchange_Rate,1)
186500191025                 , 2)
186600191025                ,13,2)
186700191025               ),
186800191025      *RFS184886 END
186900190627               (DECIMAL(
187000190627                 ROUND(
187100191025                  ACCIVP.CURR_UNIT_BAL
187200190627                  *
187300190627                  COALESCE(
187400190627                   CASE WHEN InvuppY.Unit_Price > 0
187500190627                    THEN InvuppY.Unit_Price
187600190627                    ELSE InvuppS.Unit_Price
187700190627                   END, 0)
187800190627                  /
187900190627                  COALESCE( Exrhmp.Exchange_Rate,1)
188000190627                 , 2)
188100190627                ,13,2)
188200190627               )
188300190627               INTO :li_InvMV:lb_Indicators
188400191025184886             ,:li_OrigInvMV:lb_Indicators
188500190627               FROM
188600190627                 MFAACCIVP ACCIVP
188700190627                 INNER JOIN Mfainvp invp ON
188800190627                 ACCIVP.Investment_Code = invp.Investment_Code
188900190627                 LEFT OUTER JOIN Mfainvupp InvuppY ON
189000190627                 InvuppY.Trade_Date = :ld_AsAtDate AND
189100190627                 ACCIVP.Investment_Code = InvuppY.Investment_Code AND
189200190627                 InvuppY.Distribution_Flag = :lncc_Y
189300190627                 LEFT OUTER JOIN Mfainvupp InvuppS ON
189400190627                 InvuppS.Trade_Date = :ld_AsAtDate AND
189500190627                 ACCIVP.Investment_Code = InvuppS.Investment_Code AND
189600190627                 InvuppS.Distribution_Flag = :lncc_Space
189700190627                 LEFT OUTER JOIN Mfaexrhmp Exrhmp ON
189800190627                 Exrhmp.Currency = Invp.Currency AND
189900190627                 Exrhmp.Trade_Date = :ld_AsAtDate AND
190000190627                 Exrhmp.Exchange_Rate_Type = :lc_ExchangeRateType
190100190627               WHERE
190200190627                 ACCIVP.Account_No = :li_AccountNo AND
190300190627                 ACCIVP.Investment_code = :lc_InvCode
190400190627           END-EXEC.
190500190627           MOVE SQLSTATE TO lc_sqlStates.
190600190627           EVALUATE TRUE
190700190627               WHEN lncc_sqlSuccessful
190800190627                    CONTINUE
190900190627               WHEN OTHER
191000190627                    SET lncc_Err22 TO TRUE
191100190627                    MOVE lncc_ErrGetInvMV
191200190627                      TO lc_sqlErrShortDESCR
191300190627                    PERFORM SQLFailProcess
191400190627           END-EVALUATE.
191500190717           IF ltb_ProdTypeRule(li_CounterAccInv) = lncc_2 OR
191600190717              ltb_ProdTypeRule(li_CounterAccInv) = lncc_7
191700190717              INITIALIZE INTCLC-PARMS
191800190717              MOVE lc_InvCode TO PASS-INVESTMENT-CODE
191900190718              MOVE lncc_V2 TO PASS-MODE
192000190724              MOVE ld_AsAtDate TO PASS-END-DATE-OPTION
192100190717              PERFORM GetAccruedInterestAmt
192200190717              COMPUTE li_InvMV = li_InvMV + li_AccruedIntAmt
192300191023      *RFS184886 START
192400191025              COMPUTE li_OrigInvMV = li_OrigInvMV + li_AccruedIntAmt
192500191023              PERFORM GetGICDIIFundAssignedValue
192600191023           ELSE
192700191023              PERFORM GetSEGFundAssignedValue
192800191023      *RFS184886 END
192900190717           END-IF.
193000191025      *RFS184886 START
193100191025           MOVE li_OrigInvMV TO ltb_OrigMarketValue(li_CounterAccInv).
193200191025           IF li_AssignedValue > 0
193300191025              MOVE lncc_Y TO ltb_ActAssignment(li_CounterAccInv)
193400191025              COMPUTE li_InvMV = li_InvMV - li_AssignedValue
193500191025           END-IF.
193600191025      *RFS184886 END
193700190627           MOVE li_InvMV TO ltb_MarketValue(li_CounterAccInv).
193800190627
193900190717      *---------------------------------
194000190717       GetAccruedInterestAmt.
194100190717      *---------------------------------
194200190717           INITIALIZE li_AccruedIntAmt.
194300190719           MOVE li_AccountNo TO PASS-ACCOUNT-NO.
194400190717           CALL "INTCLC" USING       INTCLC-PARMS.
194500190717           CANCEL "INTCLC".
194600190717           IF RETN-RET-CODE EQUAL TO "00"
194700190717              MOVE RETN-ACCRUAL-AMT TO li_AccruedIntAmt
194800190717           END-IF.
194900190717
195000190627      * ---------------------------------
195100190627       GetAccLvlMatureFree.
195200190627      * ---------------------------------
195300190726           INITIALIZE lr_AccMatureFree.
195400190725           MOVE lncc_M TO lc_CalcSplitCode.
195500190725           PERFORM StringCalcInvInfo.
195600191025      *RFS184886 START
195700191025           IF ln-TotalCnt > 1
195800191025             PERFORM CALL-SACDSCCLC
195900191025             PERFORM GetCalcValues
196000191025             IF li_CalcUnits > 0
196100191025                MOVE li_CalcUnits
196200191025                  TO li_AccMaturedUnits
196300191025                MOVE li_CalcGross
196400191025                  TO li_AccMaturedUnitsMV
196500191025             END-IF
196600191025             MOVE lncc_F TO lc_CalcSplitCode
196700191025             PERFORM StringCalcInvInfo
196800191025             PERFORM CALL-SACDSCCLC
196900191025             PERFORM GetCalcValues
197000191025             IF li_CalcUnits > 0
197100191025                MOVE li_CalcUnits
197200191025                  TO li_AccFreeUnits
197300191025                MOVE li_CalcGross
197400191025                  TO li_AccFreeUnitsMV
197500191025             END-IF
197600191025           END-IF.
197700191025      *RFS184886 END
197800190725
197900190725      * ---------------------------------
198000190725       StringCalcInvInfo.
198100190725      * ---------------------------------
198200191025184886     INITIALIZE lc-InvDataString, ptbc_invDataArr.
198300190725           MOVE 1 TO ln-TotalCnt.
198400190725           PERFORM VARYING li_CounterAccInv FROM 1 BY 1
198500190725                   UNTIL li_CounterAccInv > li_NoOfInvRowsFetched
198600190725             IF ltb_LoadStruc(li_CounterAccInv) = lncc_B AND
198700190725                ltb_ProdTypeRule(li_CounterAccInv) = lncc_6 AND
198800190725                ltb_MarketValue(li_CounterAccInv) > 0 AND
198900190725                ltb_InvCode(li_CounterAccInv) NOT = lc_OInvCode
199000190725                MOVE ltb_FundCode(li_CounterAccInv) TO lc_CalcFundCode
199100190725                STRING lc_CalcFundCode   DELIMITED BY SPACE
199200190725                   lnc-CommaDelim        DELIMITED BY SIZE
199300190725                   lnc-CommaDelim        DELIMITED BY SIZE
199400190725                   lc_CalcSplitCode      DELIMITED BY SIZE
199500190725                   lnc-CommaDelim        DELIMITED BY SIZE
199600190725                   lnc-CommaDelim        DELIMITED BY SIZE
199700190725                   lnc-CommaDelim        DELIMITED BY SIZE
199800190725                   lnc-CommaDelim        DELIMITED BY SIZE
199900190725                   lnc-CommaDelim        DELIMITED BY SIZE
200000190725                   lnc-RowDelim          DELIMITED BY SIZE
200100190725                INTO  lc-InvDataString
200200190725                END-STRING
200300190725                MOVE ZEROES TO ln-Tally, ln-InvStringCnt
200400190725                INSPECT lc-InvDataString TALLYING ln-Tally
200500190725                                    FOR CHARACTERS BEFORE INITIAL ";"
200600190725                COMPUTE ln-InvStringCnt = ln-Tally + 1
200700190725                MOVE lc-InvDataString (1 : ln-InvStringCnt)
200800190725                  TO ptbc_invDataArr (ln-TotalCnt : ln-InvStringCnt)
200900190725                COMPUTE ln-TotalCnt = ln-TotalCnt + ln-InvStringCnt
201000190725             END-IF
201100190725           END-PERFORM.
201200190725
201300190725      * ---------------------------------
201400190725       CALL-SACDSCCLC.
201500190725      * ---------------------------------
201600190725           MOVE SPACES TO pc_RequestUserId.
201700190725           MOVE li_AccountNo TO pc_IvrAcctNo.
201800190725           MOVE "CAD" TO pc_Currency.
201900210501      *RFS1113861 Starts
202000210501           MOVE lc_TreatTxnAsAWD  TO pc_AWDRedemptionFlag.
202100210501           MOVE lc_WaiveDSC       TO pc_WaiveDsc.
202200210501           MOVE lc_WaiveErf       TO pc_WaiveErf.
202300210501           MOVE lc_ContRedCode    TO pc_ContRdmptnCode.
202400210501      *RFS1113861 Ends
202500190725           CALL "SACDSCCLC" USING  pc_RequestUserId,
202600190725                                   pc_LanguageCode,
202700190725                                   pc_RowThreshold,
202800190725                                   pc_IvrAcctNo,
202900190725                                   pc_ContRdmptnCode,
203000190725                                   pc_DispDscSched,
203100190725                                   pc_Currency,
203200190725                                   pc_WaiveDsc,
203300190725                                   pc_WaiveErf,
203400190725                                   pc_SplitTaxOption,
203500190725                                   pc_ReplaceAddTax,
203600190725                                   pc_FedTax,
203700190725                                   pc_ProvTax,
203800190725                                   pc_AcctGrossAmt,
203900190725                                   pc_AcctNetAmt,
204000190725                                   pc_AWDRedemptionFlag,
204100190725                                   pc_acctlevelReq,
204200190725                                   ptbc_invDataArr,
204300190725                                   pc_rowCount,
204400190725                                   pc_MessageCode,
204500190725                                   pc_MessageDesc.
204600190725           CANCEL "SACDSCCLC".
204700190725
204800190725      * ---------------------------------
204900190726       GetCalcValues.
205000190725      * ---------------------------------
205100190726           INITIALIZE li_CalcUnits, li_CalcGross.
205200190726           EXEC SQL
205300190726           SELECT SUM(UNIT_AMT), SUM(GROSS_AMT)
205400190726           INTO :li_CalcUnits, :li_CalcGross
205500190726           FROM QTEMP/INVSUM
205600190726           END-EXEC.
205700190627
205800190627      * ---------------------------------
205900190627       GetFundLvlMatureFree.
206000190627      * ---------------------------------
206100190627           MOVE li_AccountNo TO Pass-CDSC-Account.
206200190627           MOVE lc_InvCode TO Pass-CDSC-Investment.
206300190627           MOVE lncc_M TO Pass-Split-Option.
206400190627           MOVE 0 TO Pass-CDSC-Gross, Pass-CDSC-Net.
206500190718           INITIALIZE PASS-CERT-ID-N.
206600190719           MOVE ld_AsAtDate TO Pass-CDSC-Trade-Date.
206700190627           PERFORM Calculator.
206800190718           IF PASS-REJECTION-CODE-OK
206900190627              MOVE Pass-CDSC-Units
207000190627                TO ltb_MaturedUnits(li_CounterAccInv)
207100190627              MOVE Pass-CDSC-Gross
207200190627                TO ltb_MaturedUnitsMV(li_CounterAccInv)
207300190627           END-IF.
207400190627           MOVE li_AccountNo TO Pass-CDSC-Account.
207500190627           MOVE lc_InvCode TO Pass-CDSC-Investment.
207600190627           MOVE lncc_F TO Pass-Split-Option.
207700190627           MOVE 0 TO Pass-CDSC-Gross, Pass-CDSC-Net.
207800190718           INITIALIZE PASS-CERT-ID-N.
207900190719           MOVE ld_AsAtDate TO Pass-CDSC-Trade-Date.
208000190627           PERFORM Calculator.
208100190718           IF PASS-REJECTION-CODE-OK
208200190627              MOVE Pass-CDSC-Units TO ltb_FreeUnits(li_CounterAccInv)
208300190627              MOVE Pass-CDSC-Gross TO ltb_FreeUnitsMV(li_CounterAccInv)
208400190627           END-IF.
208500190627
208600190627      * ---------------------------------
208700190627       GoThroughHier.
208800190627      * ---------------------------------
208900190627           SET li_CounterAccInv TO 1.
209000190627           SET li_CounterHier TO 1.
209100190627           INITIALIZE lc_PrevHierAssetCrit.
209200190627           PERFORM SortFundsByHMV.
209300190627           PERFORM CheckHierInvMatch TEST BEFORE UNTIL
209400190917      *RFS184781 START - STOP HIERARCHY WD ONCE ANY TRADE IS REJECTED
209500190919                   lb_HierTransRejYes
209600190919                   OR
209700190919      *RFS184781 END
209800190919                   li_CounterHier > li_NoOfHierRowsFetched
209900190715                   OR
210000190715                   (lc_GrossOrNet = lncc_G AND li_RemainingGross <= 0)
210100190715                   OR
210200190919                   (lc_GrossOrNet = lncc_N AND li_RemainingNet <= 0).
210300190627
210400190627      * ---------------------------------
210500190627       CheckHierInvMatch.
210600190627      * ---------------------------------
210700190627           IF ltb_HierAssetCrit(li_CounterHier) NOT =
210800190627              lc_PrevHierAssetCrit
210900190627              MOVE ltb_HierAssetCrit(li_CounterHier)
211000190627                TO lc_PrevHierAssetCrit
211100190627              PERFORM SortFunds
211200190627           END-IF.
211300190627           SET lb_HierInvMatchNo TO TRUE.
211400190627           SEARCH ltb_AccInvRecs VARYING li_CounterAccInv
211500190627           WHEN li_CounterAccInv > li_NoOfInvRowsFetched
211600190627                CONTINUE
211700190627           WHEN ltb_HierProdType(li_CounterHier) =
211800190627                ltb_ProdTypeCode(li_CounterAccInv) AND
211900190627                ((ltb_HierMMFFlag(li_CounterHier) =
212000190627                  ltb_MMFFlag(li_CounterAccInv))
212100190627                  OR
212200190627                 (ltb_HierMMFFlag(li_CounterHier) = lncc_N
212300190627                  AND ltb_MMFFlag(li_CounterAccInv) = SPACE)
212400190627                ) AND
212500190627                ((ltb_HierLoadStruc(li_CounterHier) =
212600190627                  ltb_LoadStruc(li_CounterAccInv)
212700190627                  AND ltb_HierExtLoad(li_CounterHier) =
212800190627                  ltb_ExtLoad(li_CounterAccInv))
212900190627                  OR
213000190627                  ltb_ProdTypeRule(li_CounterAccInv) = lncc_2
213100190627                  OR
213200190627                  ltb_ProdTypeRule(li_CounterAccInv) = lncc_7
213300190627                ) AND
213400190627                ltb_InvCode(li_CounterAccInv) NOT =
213500190627                lc_OInvCode                        AND
213600190627                ltb_MarketValue(li_CounterAccInv) > 0
213700210507      *RFS1113861 Starts
213800210507                IF (ltb_HierAssetCrit(li_CounterHier) NOT = lncc_HM
213900210507                AND ltb_HierAssetCrit(li_CounterHier) NOT = lncc_HF
214000210507                AND lc_OTrnTypeCode = lncc_FEE) OR
214100210507                lc_OTrnTypeCode = lncc_SEL
214200210507      *RFS1113861 Ends
214300190627                SET lb_HierInvMatchYes TO TRUE
214400210507      *RFS1113861 Starts
214500210507                END-IF
214600210507      *RFS1113861 Ends
214700190704                IF lc_TrnOriginCode = lncc_AWR
214800190704                   PERFORM CheckAWRTargetInv
214900190704                END-IF
215000190704                IF lb_HierInvMatchYes
215100190627                EVALUATE TRUE
215200190627                  WHEN ltb_HierAssetCrit(li_CounterHier) = lncc_CM
215300190627                    PERFORM ProcessGICs
215400190627                    SET li_CounterHier UP BY 1
215500190627                    SET li_CounterAccInv TO 1
215600190627                  WHEN (ltb_HierAssetCrit(li_CounterHier) = lncc_HM OR
215700190627                        ltb_HierAssetCrit(li_CounterHier) = lncc_HF)
215800190627                    PERFORM ProcessMatureFree
215900190627                    SET li_CounterAccInv UP BY 1
216000190627                  WHEN OTHER
216100190708                    PERFORM HierWDPrerequisites
216200210507      *RFS1113861 Starts
216300210507                    IF lc_OTrnTypeCode = lncc_FEE
216400210518                    PERFORM TransCalcforFEE
216500210508                    ELSE
216600210507      *RFS1113861 Ends
216700190627                    PERFORM TransCalc
216800210507      *RFS1113861 Starts
216900210507                    END-IF
217000210507      *RFS1113861 Ends
217100190627                    PERFORM GenerateHierTrans
217200190627                    SET li_CounterAccInv UP BY 1
217300190627                END-EVALUATE
217400190704                END-IF
217500190627           END-SEARCH.
217600190627           IF lb_HierInvMatchNo
217700190627              SET li_CounterHier UP BY 1
217800190627              SET li_CounterAccInv TO 1
217900190627           END-IF.
218000190704
218100190704      * ---------------------------------
218200190704       CheckAWRTargetInv.
218300190704      * ---------------------------------
218400190704           MOVE ltb_InvCode(li_CounterAccInv) TO lc_FromInvCode.
218500190704           INITIALIZE li_Counter.
218600190704           EXEC SQL
218700190704             SELECT COUNT(1)
218800190704             INTO :li_Counter
218900190704             FROM MFAINVSCP
219000190704             WHERE FROM_INVESTMENT = :lc_FromInvCode
219100190704               AND TO_INVESTMENT = :lc_TargetInvCode
219200190704           END-EXEC.
219300190704           MOVE SQLSTATE TO lc_sqlStates.
219400190704           EVALUATE TRUE
219500190704               WHEN lncc_sqlSuccessful
219600190704                    CONTINUE
219700190704               WHEN OTHER
219800190704                    SET lncc_Err73 TO TRUE
219900190704                    MOVE lncc_ErrGetMFAINVSCP
220000190704                      TO lc_sqlErrShortDESCR
220100190704                    PERFORM SQLFailProcess
220200190704           END-EVALUATE.
220300190704           IF li_Counter = 0
220400190704              SET lb_HierInvMatchNo TO TRUE
220500190704           ELSE
220600190704              IF lc_FromInvCode = lc_TargetInvCode
220700190704                 MOVE lncc_TRO TO lc_GenTransType
220800190704              ELSE
220900190704                 MOVE lncc_SWO TO lc_GenTransType
221000190704              END-IF
221100190704           END-IF.
221200190627
221300190627      * ---------------------------------
221400190627       SortFunds.
221500190627      * ---------------------------------
221600190627           EVALUATE TRUE
221700190726             WHEN (ltb_HierAssetCrit(li_CounterHier) = lncc_HM AND
221800190726                                     lc_ACLVModFlag NOT = lncc_Y)
221900190704      *HM
222000190627               PERFORM SortFundsByHM
222100190726             WHEN (ltb_HierAssetCrit(li_CounterHier) = lncc_HF AND
222200190726                                     lc_ACLVModFlag NOT = lncc_Y)
222300190627      *HF
222400190627               PERFORM SortFundsByHF
222500190627             WHEN OTHER
222600190627      *HMV
222700190627               PERFORM SortFundsByHMV
222800190627           END-EVALUATE.
222900190627
223000190627      * ---------------------------------
223100190627       SortFundsByHM.
223200190627      * ---------------------------------
223300190627           MOVE 1 TO li_I.
223400190627           PERFORM UNTIL li_I > li_NoOfInvRowsFetched
223500190627             MOVE li_I TO li_J
223600190627             PERFORM UNTIL li_J > li_NoOfInvRowsFetched
223700190627               IF (ltb_MaturedUnitsMV(li_I) < ltb_MaturedUnitsMV(li_J))
223800190627                 MOVE ltb_AccInvRecs(li_I) TO lr_AccInvTempRec
223900190627                 MOVE ltb_AccInvRecs(li_J) TO ltb_AccInvRecs(li_I)
224000190627                 MOVE lr_AccInvTempRec TO ltb_AccInvRecs(li_J)
224100190627               END-IF
224200190627               ADD 1 TO li_J GIVING li_J
224300190627             END-PERFORM
224400190627             ADD 1 TO li_I GIVING li_I
224500190627           END-PERFORM.
224600190627
224700190627      * ---------------------------------
224800190627       SortFundsByHF.
224900190627      * ---------------------------------
225000190627           MOVE 1 TO li_I.
225100190627           PERFORM UNTIL li_I > li_NoOfInvRowsFetched
225200190627             MOVE li_I TO li_J
225300190627             PERFORM UNTIL li_J > li_NoOfInvRowsFetched
225400190627               IF (ltb_FreeUnitsMV(li_I) < ltb_FreeUnitsMV(li_J))
225500190627                 MOVE ltb_AccInvRecs(li_I) TO lr_AccInvTempRec
225600190627                 MOVE ltb_AccInvRecs(li_J) TO ltb_AccInvRecs(li_I)
225700190627                 MOVE lr_AccInvTempRec TO ltb_AccInvRecs(li_J)
225800190627               END-IF
225900190627               ADD 1 TO li_J GIVING li_J
226000190627             END-PERFORM
226100190627             ADD 1 TO li_I GIVING li_I
226200190627           END-PERFORM.
226300190627
226400190627      * ---------------------------------
226500190627       SortFundsByHMV.
226600190627      * ---------------------------------
226700190627           MOVE 1 TO li_I.
226800190627           PERFORM UNTIL li_I > li_NoOfInvRowsFetched
226900190627             MOVE li_I TO li_J
227000190627             PERFORM UNTIL li_J > li_NoOfInvRowsFetched
227100190627               IF (ltb_MarketValue(li_I) < ltb_MarketValue(li_J))
227200190627                 MOVE ltb_AccInvRecs(li_I) TO lr_AccInvTempRec
227300190627                 MOVE ltb_AccInvRecs(li_J) TO ltb_AccInvRecs(li_I)
227400190627                 MOVE lr_AccInvTempRec TO ltb_AccInvRecs(li_J)
227500190627               END-IF
227600190627               ADD 1 TO li_J GIVING li_J
227700190627             END-PERFORM
227800190627             ADD 1 TO li_I GIVING li_I
227900190627           END-PERFORM.
228000190627
228100190627      *---------------------------------
228200190627       ProcessGICs.
228300190627      *---------------------------------
228400190627           EXEC SQL
228500190627             DECLARE GICInvs CURSOR FOR
228600190627             SELECT
228700190627               CIVP.INVESTMENT_CODE, INVP.INDUSTRY_FUND_CODE,
228800190627               GICDP.CERTIFICATE_ID_NO, GICDP.CERTIFICATE_NO,
228900190627               GICDP.CURRENT_CERTIFICATE_BALANCE,
229000190717               GICDP.MATURITY_DATE, 0
229100191025184886         , " "
229200190627             FROM MFAACCIVP CIVP
229300190627               INNER JOIN MFAINVP INVP ON
229400190627               CIVP.INVESTMENT_CODE = INVP.INVESTMENT_CODE
229500190627               INNER JOIN MFAPRTCDP PCDP ON
229600190627               INVP.PRODUCT_TYPE_CODE = PCDP.PRODUCT_TYPE_CODE
229700190627               INNER JOIN MFAGICDP GICDP ON
229800190627               CIVP.ACCOUNT_NO = GICDP.ACCOUNT_NO AND
229900190627               CIVP.INVESTMENT_CODE = GICDP.INVESTMENT_CODE
230000190627             WHERE
230100190627               CIVP.ACCOUNT_NO = :li_AccountNo AND
230200190627               CIVP.CURR_UNIT_BAL > 0 AND
230300190627               GICDP.CERT_STATUS_CODE = :lncc_A AND
230400190627               PCDP.PRODUCT_TYPE_RULE = :lncc_2
230500190711             ORDER BY GICDP.MATURITY_DATE,
230600190711                      GICDP.INT_RATE, GICDP.CERTIFICATE_NO
230700190627           END-EXEC.
230800190627           EXEC SQL
230900190627             OPEN GICInvs
231000190627           END-EXEC.
231100190627           MOVE SQLSTATE TO lc_sqlStates.
231200190627           EVALUATE TRUE
231300190627               WHEN lncc_sqlSuccessful
231400190627                    CONTINUE
231500190627               WHEN OTHER
231600190627                    SET lncc_Err47 TO TRUE
231700190627                    MOVE lncc_ErrOpenGICInvs
231800190627                      TO lc_sqlErrShortDESCR
231900190627                    PERFORM SQLFailProcess
232000190627           END-EVALUATE.
232100190627           INITIALIZE ltb_GICTable.
232200190627           EXEC SQL
232300190627             FETCH NEXT FROM GICInvs
232400190627             FOR  :lnci_GICRec ROWS
232500190627             INTO :ltb_GICRecs:ltb_IndicatorsG
232600190627           END-EXEC.
232700190627           MOVE SQLSTATE TO lc_sqlStates.
232800190627           EVALUATE TRUE
232900190627               WHEN lncc_sqlSuccessful
233000190627                    COMPUTE li_NoOfGICRowsFetched = SQLERRD(3)
233100190627                    CONTINUE
233200190627               WHEN lncc_sqlEnd
233300190627                    COMPUTE li_NoOfGICRowsFetched = SQLERRD(3)
233400190627                    CONTINUE
233500190627               WHEN OTHER
233600190627                    SET lncc_Err48 TO TRUE
233700190627                    MOVE lncc_ErrFetchGICInvs
233800190627                      TO lc_sqlErrShortDESCR
233900190627                    PERFORM SQLFailProcess
234000190627           END-EVALUATE.
234100190627           PERFORM CloseGICInvs.
234200190717           SET li_CounterGIC TO 1.
234300190627           PERFORM GICWithdrawals TEST BEFORE UNTIL
234400190919      *RFS184781 START - STOP HIERARCHY WD ONCE ANY TRADE IS REJECTED
234500190919                   lb_HierTransRejYes
234600190919                   OR
234700190919      *RFS184781 END
234800190715                   li_CounterGIC > li_NoOfGICRowsFetched
234900190715                   OR
235000190715                   (lc_GrossOrNet = lncc_G AND li_RemainingGross <= 0)
235100190715                   OR
235200190715                   (lc_GrossOrNet = lncc_N AND li_RemainingNet <= 0).
235300190627
235400190627      * ---------------------------------
235500190627       GICWithdrawals.
235600190627      * ---------------------------------
235700191023      *RFS184886 START
235800191023           MOVE ltb_GICIDNo(li_CounterGIC) TO li_GICIDNo.
235900191023           PERFORM GetGICAssignedValue.
236000191025           IF li_AssignedValue > 0
236100191025              MOVE lncc_Y TO ltb_GICActAssignment(li_CounterGIC)
236200191025              COMPUTE ltb_GICCurrBalance(li_CounterGIC) =
236300191025                ltb_GICCurrBalance(li_CounterGIC) - li_AssignedValue
236400191025           END-IF.
236500191023           IF ltb_GICCurrBalance(li_CounterGIC) > 0
236600191023              PERFORM HierWDPrerequisites
236700191023              PERFORM GICTransCalc
236800191023              PERFORM GenerateHierTrans
236900191023           END-IF.
237000191023      *RFS184886 END
237100190705           SET li_CounterGIC UP BY 1.
237200190627
237300190627      * ---------------------------------
237400190627       GICTransCalc.
237500190627      * ---------------------------------
237600190717           INITIALIZE INTCLC-PARMS.
237700190717           MOVE ltb_GICInvCode(li_CounterGIC) TO PASS-INVESTMENT-CODE.
237800190717           MOVE ltb_GICIDNo(li_CounterGIC) TO PASS-CERTIFICATE-ID-NO.
237900190718           MOVE ltb_GICCurrBalance(li_CounterGIC) TO PASS-GROSS-AMT.
238000190718           MOVE lncc_IE TO PASS-MODE.
238100190724           MOVE ld_TrnTradeDate TO PASS-END-DATE-OPTION.
238200190717           PERFORM GetAccruedInterestAmt.
238300190719           COMPUTE ltb_GICMarketValue(li_CounterGIC) =
238400190717                  ltb_GICCurrBalance(li_CounterGIC) + li_AccruedIntAmt.
238500190627           MOVE lncc_Dollar TO lc_TransSplitOptionCode.
238600190627           IF lc_GrossOrNet = lncc_G
238700190627              PERFORM GICTransGrossCalc
238800190627           ELSE
238900190627              PERFORM GICTransNetCalc
239000190627           END-IF.
239100190719           COMPUTE li_MarketValueTracker =
239200190719                   ltb_GICMarketValue(li_CounterGIC).
239300190719           COMPUTE li_MarketValueTracker =
239400190719                   li_MarketValueTracker - li_HierInvGross.
239500190719           IF li_MarketValueTracker = 0
239600191025184886        AND ltb_GICActAssignment(li_CounterGIC) NOT = lncc_Y
239700190717              MOVE lncc_A TO lc_TransSplitOptionCode
239800190725              IF lc_TrnOriginCode NOT = lncc_AWR
239900190725                 COMPUTE li_HierInvGross = 0
240000190725              END-IF
240100190717           END-IF.
240200190705
240300190627      * ---------------------------------
240400190627       GICTransGrossCalc.
240500190627      * ---------------------------------
240600190717           IF li_RemainingGross > ltb_GICMarketValue(li_CounterGIC)
240700190717              MOVE ltb_GICMarketValue(li_CounterGIC)
240800190627                TO li_HierInvGross
240900190627           ELSE
241000190627              MOVE li_RemainingGross TO li_HierInvGross
241100190627           END-IF.
241200190627
241300190627      * ---------------------------------
241400190627       GICTransNetCalc.
241500190627      * ---------------------------------
241600190627           PERFORM FundGrossedUpRemNet.
241700190627           MOVE li_GrossedUpNet TO li_HierInvGross.
241800190627
241900190627      * ---------------------------------
242000190627       ProcessMatureFree.
242100190627      * ---------------------------------
242200190726           IF lc_ACLVModFlag = lncc_Y
242300190726              IF ltb_HierAssetCrit(li_CounterHier) = lncc_HM
242400190726                 AND li_AccMaturedUnitsMV > 0
242500190726                 PERFORM HierWDPrerequisites
242600190726                 PERFORM AccMatureTransCalc
242700190726                 PERFORM GenerateHierTrans
242800190726              ELSE
242900190726                 IF ltb_HierAssetCrit(li_CounterHier) = lncc_HF
243000190726                 AND li_AccFreeUnitsMV > 0
243100190726                    PERFORM HierWDPrerequisites
243200190726                    PERFORM AccFreeTransCalc
243300190726                    PERFORM GenerateHierTrans
243400190726                 END-IF
243500190726              END-IF
243600190726           ELSE
243700190726              IF ltb_HierAssetCrit(li_CounterHier) = lncc_HM
243800190726                 AND ltb_MaturedUnitsMV(li_CounterAccInv) > 0
243900190726                 PERFORM HierWDPrerequisites
244000190726                 PERFORM FundMatureTransCalc
244100190726                 PERFORM GenerateHierTrans
244200190726              ELSE
244300190726                 IF ltb_HierAssetCrit(li_CounterHier) = lncc_HF
244400190726                 AND ltb_FreeUnitsMV(li_CounterAccInv) > 0
244500190726                    PERFORM HierWDPrerequisites
244600190726                    PERFORM FundFreeTransCalc
244700190726                    PERFORM GenerateHierTrans
244800190726                 END-IF
244900190726              END-IF
245000190726           END-IF.
245100190726
245200190726      * ---------------------------------
245300190726       AccMatureTransCalc.
245400190726      * ---------------------------------
245500190726           MOVE lncc_M TO lc_TransSplitOptionCode.
245600190726           IF lc_GrossOrNet = lncc_G
245700190726              PERFORM AccMatureTransGrossCalc
245800190726           ELSE
245900190726              PERFORM AccMatureTransNetCalc
246000190726           END-IF.
246100190726           COMPUTE li_AccMaturedUnitsMV =
246200190726                      li_AccMaturedUnitsMV - li_HierInvGross.
246300190726           COMPUTE li_MarketValueTracker =
246400190726                 ltb_MarketValue(li_CounterAccInv).
246500190726           COMPUTE li_MarketValueTracker =
246600190726                 li_MarketValueTracker - li_HierInvGross.
246700190726           IF li_MarketValueTracker = 0 AND
246800190726              lc_TrnOriginCode NOT = lncc_AWR
246900190726                 COMPUTE li_HierInvGross = 0
247000190726           END-IF.
247100190726
247200190726      * ---------------------------------
247300190726       AccMatureTransGrossCalc.
247400190726      * ---------------------------------
247500190726           IF li_AccMaturedUnitsMV > ltb_MarketValue(li_CounterAccInv)
247600190726              IF li_RemainingGross > ltb_MarketValue(li_CounterAccInv)
247700190726                 MOVE ltb_MarketValue(li_CounterAccInv)
247800190726                   TO li_HierInvGross
247900190726              ELSE
248000190726                 MOVE li_RemainingGross TO li_HierInvGross
248100190726              END-IF
248200190726           ELSE
248300190726              IF li_RemainingGross > li_AccMaturedUnitsMV
248400190726                 MOVE li_AccMaturedUnitsMV TO li_HierInvGross
248500190726              ELSE
248600190726                 MOVE li_RemainingGross TO li_HierInvGross
248700190726              END-IF
248800190726           END-IF.
248900190726
249000190726      * ---------------------------------
249100190726       AccMatureTransNetCalc.
249200190726      * ---------------------------------
249300190726           PERFORM FundGrossedUpRemNet.
249400190726           IF li_AccMaturedUnitsMV > ltb_MarketValue(li_CounterAccInv)
249500190726              MOVE li_GrossedUpNet   TO li_HierInvGross
249600190726           ELSE
249700190726              IF li_GrossedUpNet   > li_AccMaturedUnitsMV
249800190726                 MOVE li_AccMaturedUnitsMV TO li_HierInvGross
249900190726              ELSE
250000190726                 MOVE li_GrossedUpNet   TO li_HierInvGross
250100190726              END-IF
250200190726           END-IF.
250300190726
250400190726      * ---------------------------------
250500190726       AccFreeTransCalc.
250600190726      * ---------------------------------
250700190726           MOVE lncc_F TO lc_TransSplitOptionCode.
250800190726           IF lc_GrossOrNet = lncc_G
250900190726              PERFORM AccFreeTransGrossCalc
251000190726           ELSE
251100190726              PERFORM AccFreeTransNetCalc
251200190726           END-IF.
251300190726           COMPUTE li_AccFreeUnitsMV =
251400190726                      li_AccFreeUnitsMV - li_HierInvGross.
251500190726           COMPUTE li_MarketValueTracker =
251600190726                 ltb_MarketValue(li_CounterAccInv).
251700190726           COMPUTE li_MarketValueTracker =
251800190726                 li_MarketValueTracker - li_HierInvGross.
251900190726           IF li_MarketValueTracker = 0 AND
252000190726              lc_TrnOriginCode NOT = lncc_AWR
252100190726                 COMPUTE li_HierInvGross = 0
252200190726           END-IF.
252300190726
252400190726      * ---------------------------------
252500190726       AccFreeTransGrossCalc.
252600190726      * ---------------------------------
252700190726           IF li_AccFreeUnitsMV > ltb_MarketValue(li_CounterAccInv)
252800190726              IF li_RemainingGross > ltb_MarketValue(li_CounterAccInv)
252900190726                 MOVE ltb_MarketValue(li_CounterAccInv)
253000190726                   TO li_HierInvGross
253100190726              ELSE
253200190726                 MOVE li_RemainingGross TO li_HierInvGross
253300190726              END-IF
253400190726           ELSE
253500190726              IF li_RemainingGross > li_AccFreeUnitsMV
253600190726                 MOVE li_AccFreeUnitsMV TO li_HierInvGross
253700190726              ELSE
253800190726                 MOVE li_RemainingGross TO li_HierInvGross
253900190726              END-IF
254000190726           END-IF.
254100190726
254200190726      * ---------------------------------
254300190726       AccFreeTransNetCalc.
254400190726      * ---------------------------------
254500190726           PERFORM FundGrossedUpRemNet.
254600190726           IF li_AccFreeUnitsMV > ltb_MarketValue(li_CounterAccInv)
254700190726              MOVE li_GrossedUpNet TO li_HierInvGross
254800190726           ELSE
254900190726              IF li_GrossedUpNet   > li_AccFreeUnitsMV
255000190726                 MOVE li_AccFreeUnitsMV TO li_HierInvGross
255100190726              ELSE
255200190726                 MOVE li_GrossedUpNet   TO li_HierInvGross
255300190726              END-IF
255400190726           END-IF.
255500190627
255600190627      * ---------------------------------
255700190627       FundMatureTransCalc.
255800190627      * ---------------------------------
255900190627           MOVE lncc_M TO lc_TransSplitOptionCode.
256000190627           IF lc_GrossOrNet = lncc_G
256100190627              PERFORM FundMatureTransGrossCalc
256200190627           ELSE
256300190627              PERFORM FundMatureTransNetCalc
256400190627           END-IF.
256500190719           COMPUTE li_MarketValueTracker =
256600190725                   ltb_MaturedUnitsMV(li_CounterAccInv).
256700190719           COMPUTE li_MarketValueTracker =
256800190719                   li_MarketValueTracker - li_HierInvGross.
256900190725           IF li_MarketValueTracker = 0 AND
257000190725              lc_TrnOriginCode NOT = lncc_AWR
257100190725                 COMPUTE li_HierInvGross = 0
257200190627           END-IF.
257300190627
257400190627      * ---------------------------------
257500190627       FundMatureTransGrossCalc.
257600190627      * ---------------------------------
257700190627           IF li_RemainingGross > ltb_MaturedUnitsMV(li_CounterAccInv)
257800190627              MOVE ltb_MaturedUnitsMV(li_CounterAccInv)
257900190627                TO li_HierInvGross
258000190627           ELSE
258100190627              MOVE li_RemainingGross TO li_HierInvGross
258200190627           END-IF.
258300190627
258400190627      * ---------------------------------
258500190627       FundMatureTransNetCalc.
258600190627      * ---------------------------------
258700190627           PERFORM FundGrossedUpRemNet.
258800190627           IF li_GrossedUpNet   > ltb_MaturedUnitsMV(li_CounterAccInv)
258900190627              MOVE ltb_MaturedUnitsMV(li_CounterAccInv)
259000190627                TO li_HierInvGross
259100190627           ELSE
259200190627              MOVE li_GrossedUpNet   TO li_HierInvGross
259300190627           END-IF.
259400190627
259500190627      * ---------------------------------
259600190627       FundFreeTransCalc.
259700190627      * ---------------------------------
259800190627           MOVE lncc_F TO lc_TransSplitOptionCode.
259900190627           IF lc_GrossOrNet = lncc_G
260000190627              PERFORM FundFreeTransGrossCalc
260100190627           ELSE
260200190627              PERFORM FundFreeTransNetCalc
260300190627           END-IF.
260400190719           COMPUTE li_MarketValueTracker =
260500190725                   ltb_FreeUnitsMV(li_CounterAccInv).
260600190719           COMPUTE li_MarketValueTracker =
260700190719                   li_MarketValueTracker - li_HierInvGross.
260800190725           IF li_MarketValueTracker = 0 AND
260900190725              lc_TrnOriginCode NOT = lncc_AWR
261000190627              COMPUTE li_HierInvGross = 0
261100190627           END-IF.
261200190627
261300190627      * ---------------------------------
261400190627       FundFreeTransGrossCalc.
261500190627      * ---------------------------------
261600190627           IF li_RemainingGross > ltb_FreeUnitsMV(li_CounterAccInv)
261700190627              MOVE ltb_FreeUnitsMV(li_CounterAccInv)
261800190627                TO li_HierInvGross
261900190627           ELSE
262000190627              MOVE li_RemainingGross TO li_HierInvGross
262100190627           END-IF.
262200190627
262300190627      * ---------------------------------
262400190627       FundFreeTransNetCalc.
262500190627      * ---------------------------------
262600190627           PERFORM FundGrossedUpRemNet.
262700190627           IF li_GrossedUpNet   > ltb_FreeUnitsMV(li_CounterAccInv)
262800190627              MOVE ltb_FreeUnitsMV(li_CounterAccInv)
262900190627                TO li_HierInvGross
263000190627           ELSE
263100190627              MOVE li_GrossedUpNet   TO li_HierInvGross
263200190627           END-IF.
263300190627
263400190627      * ---------------------------------
263500190627       TransCalc.
263600190627      * ---------------------------------
263700190627           MOVE lncc_Dollar TO lc_TransSplitOptionCode.
263800190627           IF lc_GrossOrNet = lncc_G
263900190627              PERFORM TransGrossCalc
264000190627           ELSE
264100190627              PERFORM TransNetCalc
264200190627           END-IF.
264300190719           COMPUTE li_MarketValueTracker =
264400190719                   ltb_MarketValue(li_CounterAccInv).
264500190719           COMPUTE li_MarketValueTracker =
264600190719                   li_MarketValueTracker - li_HierInvGross.
264700191119           IF li_MarketValueTracker = 0
264800190627              MOVE lncc_A TO lc_TransSplitOptionCode
264900190725              IF lc_TrnOriginCode NOT = lncc_AWR
265000190725                 COMPUTE li_HierInvGross = 0
265100190725              END-IF
265200190627           END-IF.
265300190627
265400190627      * ---------------------------------
265500190627       TransGrossCalc.
265600190627      * ---------------------------------
265700190627           IF li_RemainingGross > ltb_MarketValue(li_CounterAccInv)
265800190627              MOVE ltb_MarketValue(li_CounterAccInv)
265900190627                TO li_HierInvGross
266000190627           ELSE
266100190627              MOVE li_RemainingGross TO li_HierInvGross
266200190627           END-IF.
266300190627
266400190627      * ---------------------------------
266500190627       TransNetCalc.
266600190627      * ---------------------------------
266700190627           PERFORM FundGrossedUpRemNet.
266800190627           MOVE li_GrossedUpNet TO li_HierInvGross.
266900190627
267000190627      * ---------------------------------
267100190627       FundGrossedUpRemNet.
267200190627      * ---------------------------------
267300190627           MOVE li_AccountNo TO Pass-CDSC-Account.
267400190627           IF ltb_HierAssetCrit(li_CounterHier) = lncc_CM
267500190627             MOVE ltb_GICInvCode(li_CounterGIC) TO Pass-CDSC-Investment
267600190717             MOVE ltb_GICIDNo(li_CounterGIC)    TO PASS-CERT-ID-N
267700190627           ELSE
267800190718             INITIALIZE PASS-CERT-ID-N
267900190627             MOVE ltb_InvCode(li_CounterAccInv) TO Pass-CDSC-Investment
268000190627           END-IF.
268100190627           MOVE li_RemainingNet TO Pass-CDSC-Net.
268200190627           MOVE lncc_Dollar TO Pass-Split-Option.
268300190627           MOVE 0 TO Pass-CDSC-Gross.
268400190719           MOVE ld_TrnTradeDate TO Pass-CDSC-Trade-Date.
268500190627           PERFORM Calculator.
268600190627           INITIALIZE li_GrossedUpNet.
268601210927      *RFS1119590 Starts
268602210927      *    IF PASS-REJECTION-CODE-OK
268603210927      *      MOVE Pass-CDSC-Gross TO li_GrossedUpNet
268604210927      *    ELSE
268605210927           INITIALIZE lc_CalculatorRejCode, lc_GenGrossOrNet.
268606210927           MOVE PASS-REJECTION-CODE TO lc_CalculatorRejCode.
268607210927           IF pb-InsufficientBal
268608210927             MOVE lncc_G TO lc_GenGrossOrNet
269000190709             IF ltb_HierAssetCrit(li_CounterHier) = lncc_CM
269100190717              MOVE ltb_GICMarketValue(li_CounterGIC) TO li_GrossedUpNet
269200190709             ELSE
269300190709              MOVE ltb_MarketValue(li_CounterAccInv) TO li_GrossedUpNet
269400190709             END-IF
269401210927           ELSE
269402210927             MOVE lncc_N TO lc_GenGrossOrNet
269403210927             MOVE li_RemainingNet TO li_GrossedUpNet
269404210927      *RFS1119590 Ends
269500190709           END-IF.
269600190627
269700190627      * ---------------------------------
269800190708       OriginalWDPrerequisites.
269900190627      * ---------------------------------
270000190708           IF li_TransHeaderNo = 0
270100190627              PERFORM GetTransHeaderNo
270200190627           END-IF.
270300190627           IF lc_BatchCode NOT = lc_PrevBatchCode
270400190627              MOVE lc_BatchCode TO lc_PrevBatchCode
270500190627              PERFORM GetBatchInfo
270600190627           END-IF.
270700190627           IF NOT (ld_PlaceDate = ld_PrevPlaceDate AND
270800190627                     li_TransNo = li_PrevTransNo)
270900190708              MOVE ld_PlaceDate TO ld_PrevPlaceDate
271000190708              MOVE li_TransNo   TO li_PrevTransNo
271100190708              PERFORM ProcessOriginalWD
271200190627           END-IF.
271300190708
271400190708      * ---------------------------------
271500190708       HierWDPrerequisites.
271600190708      * ---------------------------------
271700190708           SET lb_TransNoUpdYes TO TRUE.
271800190708           SET lb_HierUsedYes TO TRUE.
271900190708           IF li_TransNum = 0
271901210830118574*       PERFORM GetTransNum
272100190708              PERFORM GetTransProcSeqNo
272200190708           END-IF.
272300190708           IF lb_RemoveOrigWDYes
272400190708              PERFORM RemoveOriginalWD
272500190708              SET lb_RemoveOrigWDNo TO TRUE
272600190708           END-IF.
272700190627
272800190627      * ---------------------------------
272900190627       SaveOriginalTrans.
273000190627      * ---------------------------------
273100190709           COMPUTE li_TransHeaderNo = li_TransHeaderNo + 1.
273200190709           INITIALIZE li_DetailSeqNo.
273300190627           EXEC SQL
273400190627           INSERT INTO MFATRNOIP
273500190627           (HEADER_NO, PLACEMENT_DATE,
273600190627           TRANS_NO, BATCH_DATE, BATCH_CODE, PROCESS_DATE, TRADE_DATE,
273700190627           TRANS_TYPE_CODE, TRANS_ORIGIN_CODE, ACCOUNT_NO,
273800190627           INVESTMENT_CODE, INDUSTRY_FUND_CODE, GROSS_AMT, NET_AMT,
273900190627           PERCENT_AMT, UNIT_AMT, UNIT_PRICE, CLOSING_UNIT_BAL,
274000190627           TRANS_PROC_SEQ_NO, REJECTION_CODE, GROSS_OR_NET,
274100190627           TRANS_SEQ_NO, DEALER_CODE, DEALER_REP_CODE, WIRE_ORDER_NO,
274200190627           SETTLEMENT_DATE, SETTLED_GROSS_OR_NET, SETTLEMENT_AMT,
274300190627           SUPPRESS_CONFIRMATION, CONTR_REDEM_CODE, TRANS_STATUS_CODE,
274400190627           ORIGINAL_DOCUMENTS_RECVD, HIDDEN_TRANS, AVERAGE_UNIT_COST,
274500190627           RESULTANT_AVERAGE_UNIT_COST, SPLIT_OPTION_CODE, RECEIPTED,
274600190627           RECEIPT_NUMBER, INSTITUTION_CODE, BRANCH_CODE,
274700190627           REVERSAL_CODE, REVERSE, ADJUST, PAYMENT_TYPE_CODE,
274800190627           METHOD_OF_DELIVERY, CHANGED_DATE, CHANGED_TIME,
274900190627           CHANGED_BY_USER, ENTERED_BY, TIME_PLACED, WIRE_ORDER_FLAG,
275000190627           NET_SETTLEMENT_FLAG, NOMINEE_CODE)
275100190627           VALUES(:li_TransHeaderNo    ,
275200190627                  :ld_PlaceDate        ,
275300190627                  :li_TransNo          ,
275400190627                  :ld_OBatchDate       ,
275500190627                  :lc_OBatchCode       ,
275600190627                  :ld_ProcessDate      ,
275700190627                  :ld_TrnTradeDate     ,
275800190704                  :lc_OTrnTypeCode     ,
275900190627                  :lc_TrnOriginCode    ,
276000190627                  :li_AccountNo        ,
276100190627                  :lc_OInvCode         ,
276200190627                  :lc_OFundCode        ,
276300190627                  :li_GrossAmt         ,
276400190627                  :li_NetAmt           ,
276500190627                  :li_PercentAmt       ,
276600190627                  :li_UnitAmt          ,
276700190627                  :li_UnitPrice        ,
276800190627                  :li_ClosingUnitBal   ,
276900190627                  :li_TrnProcSeqNo     ,
277000190627                  :lc_RejectionCode    ,
277100190627                  :lc_GrossOrNet       ,
277200190627                  :li_TrnSeqNo         ,
277300190627                  :lc_DealerCode       ,
277400190627                  :lc_RepCode          ,
277500190627                  :lc_WireOrderNo      ,
277600190627                  :ld_SettlementDate   ,
277700190627                  :lc_SettledGrossOrNet,
277800190627                  :li_SettlementAmt    ,
277900190627                  :lc_SuppressConfirms ,
278000190627                  :lc_ContRedCode      ,
278100190627                  :lc_TrnStatusCode    ,
278200190627                  :lc_OgDocRecieved    ,
278300190627                  :lc_HiddenTrans      ,
278400190627                  :li_AvgUnitCost      ,
278500190627                  :li_ResAvgUnitCost   ,
278600190627                  :lc_TransSplitOptionCode,
278700190627                  :lc_Receipted        ,
278800190627                  :lc_ReceiptNo        ,
278900190627                  :lc_InstitutionCode  ,
279000190627                  :lc_BranchCode       ,
279100190627                  :lc_ReversalCode     ,
279200190627                  :lc_Reverse          ,
279300190627                  :lc_Adjust           ,
279400190627                  :lc_PaymentTypeCode  ,
279500190627                  :lc_MethodOfDelivery ,
279600190627                  :ld_ChangedDate      ,
279700190627                  :li_ChangedTime      ,
279800190627                  :lc_ChangedByUser    ,
279900190627                  :lc_EnteredBy        ,
280000190627                  :li_TimePlaced       ,
280100190627                  :lc_WireOrderFlag    ,
280200190627                  :lc_NetSettlementFlag,
280300190627                  :lc_NomineeCode
280400191009                 )
280500190627           END-EXEC.
280600190627           MOVE SQLSTATE TO lc_sqlStates.
280700190627           EVALUATE TRUE
280800190627               WHEN lncc_sqlSuccessful
280900190911184781           OR lncc_sqlDuplicate
281000190627                    CONTINUE
281100190627               WHEN OTHER
281200190627                    SET lncc_Err24 TO TRUE
281300190627                    MOVE lncc_ErrInsOgTrade
281400190627                      TO lc_sqlErrShortDESCR
281500190627                    PERFORM SQLFailProcess
281600190627           END-EVALUATE.
281700190627
281800190627      * ---------------------------------
281900190708       ProcessOriginalWD.
282000190627      * ---------------------------------
282100190627           SET li_CounterOgInv TO 1.
282200190627           SEARCH ltb_AccInvRecs VARYING li_CounterOgInv
282300190711           WHEN ltb_InvCode(li_CounterOgInv) = lc_OInvCode
282400190711                AND ltb_MarketValue(li_CounterOgInv) > 0
282500190627                   PERFORM UpdateOriginalTrans
282600190627           WHEN li_CounterOgInv > li_NoOfInvRowsFetched
282700190708                   SET lb_RemoveOrigWDYes TO TRUE
282800190627           END-SEARCH.
282900190627
283000190627      * ---------------------------------
283100190708       RemoveOriginalWD.
283200190627      * ---------------------------------
283300190708           PERFORM SaveOriginalTrans.
283400190627           MOVE li_GrossAmt TO li_BatchUpdAmt.
283500190708           PERFORM BatchReconciliation.
283600190627           EXEC SQL
283700190627             DELETE FROM MFATRNP
283800190627             WHERE PLACEMENT_DATE = :ld_PlaceDate
283900190627               AND TRANS_NO = :li_TransNo
284000190627           END-EXEC.
284100190627           MOVE SQLSTATE TO lc_sqlStates.
284200190627           EVALUATE TRUE
284300190718               WHEN lncc_sqlSuccessful OR lncc_sqlEnd
284400190627                    CONTINUE
284500190627               WHEN OTHER
284600190627                    SET lncc_Err33 TO TRUE
284700190627                    MOVE lncc_ErrDelMFATRNP
284800190627                      TO lc_sqlErrShortDESCR
284900190627                    PERFORM SQLFailProcess
285000190627           END-EVALUATE.
285100190627
285200190627           EXEC SQL
285300190627             DELETE FROM MFATRNREP
285400190627             WHERE PLACEMENT_DATE = :ld_PlaceDate
285500190627               AND TRANS_NO = :li_TransNo
285600190627           END-EXEC.
285700190627           MOVE SQLSTATE TO lc_sqlStates.
285800190627           EVALUATE TRUE
285900190718               WHEN lncc_sqlSuccessful OR lncc_sqlEnd
286000190627                    CONTINUE
286100190627               WHEN OTHER
286200190627                    SET lncc_Err34 TO TRUE
286300190627                    MOVE lncc_ErrDelMFATRNREP
286400190627                      TO lc_sqlErrShortDESCR
286500190627                    PERFORM SQLFailProcess
286600190627           END-EVALUATE.
286700191008
286800191008      *RFS1019281 START
286900191009           PERFORM GetGICTransInstructionDetails.
287000191009
287100191009           IF lb_GICTransInsExistsYes
287200191008           EXEC SQL
287300191009             DELETE FROM MFAGICTROP
287400191009             WHERE ACCOUNT_NO = :li_AccountNo
287500191009               AND INSTRUCTION_TYPE_CODE = :lncc_AWD
287600191009               AND INVESTMENT_CODE = :lc_OInvCode
287700191009               AND INSTRUCTION_DATE = :ld_InstructionDate
287800191009               AND INSTRUCTION_NO = :li_InstructionNo
287900191009           END-EXEC
288000191009           MOVE SQLSTATE TO lc_sqlStates
288100191008           EVALUATE TRUE
288200191008               WHEN lncc_sqlSuccessful OR lncc_sqlEnd
288300191008                    CONTINUE
288400191008               WHEN OTHER
288500191008                    SET lncc_Err85 TO TRUE
288600191009                    MOVE lncc_ErrDelMFAGICTROP
288700191008                      TO lc_sqlErrShortDESCR
288800191008                    PERFORM SQLFailProcess
288900191009           END-EVALUATE
289000191008
289100191008           EXEC SQL
289200191009             DELETE FROM MFAGICROP
289300191009             WHERE ACCOUNT_NO = :li_AccountNo
289400191009               AND INSTRUCTION_TYPE_CODE = :lncc_AWD
289500191009               AND INVESTMENT_CODE = :lc_OInvCode
289600191009               AND INSTRUCTION_DATE = :lncc_Zero
289700191009               AND INSTRUCTION_NO = :lncc_Zero
289800191009           END-EXEC
289900191009           MOVE SQLSTATE TO lc_sqlStates
290000191008           EVALUATE TRUE
290100191009               WHEN lncc_sqlSuccessful OR lncc_sqlEnd
290200191008                    CONTINUE
290300191008               WHEN OTHER
290400191008                    SET lncc_Err86 TO TRUE
290500191009                    MOVE lncc_ErrDelMFAGICROP
290600191008                      TO lc_sqlErrShortDESCR
290700191008                    PERFORM SQLFailProcess
290800191009           END-EVALUATE
290900191009
291000191009           EXEC SQL
291100191009             DELETE FROM MFAMULTHP
291200191009             WHERE INSTRUCTION_DATE = :ld_InstructionDate
291300191009               AND INSTRUCTION_NO = :li_InstructionNo
291400191009           END-EXEC
291500191009           MOVE SQLSTATE TO lc_sqlStates
291600191009           EVALUATE TRUE
291700191009               WHEN lncc_sqlSuccessful OR lncc_sqlEnd
291800191009                    CONTINUE
291900191009               WHEN OTHER
292000191009                    SET lncc_Err87 TO TRUE
292100191009                    MOVE lncc_ErrDelMFAMULTHP
292200191009                      TO lc_sqlErrShortDESCR
292300191009                    PERFORM SQLFailProcess
292400191009           END-EVALUATE
292500191009
292600191009           EXEC SQL
292700191009             DELETE FROM MFAMULTDP
292800191009             WHERE INSTRUCTION_DATE = :ld_InstructionDate
292900191009               AND INSTRUCTION_NO = :li_InstructionNo
293000191009           END-EXEC
293100191009           MOVE SQLSTATE TO lc_sqlStates
293200191009           EVALUATE TRUE
293300191009               WHEN lncc_sqlSuccessful OR lncc_sqlEnd
293400191009                    CONTINUE
293500191009               WHEN OTHER
293600191009                    SET lncc_Err88 TO TRUE
293700191009                    MOVE lncc_ErrDelMFAMULTDP
293800191009                      TO lc_sqlErrShortDESCR
293900191009                    PERFORM SQLFailProcess
294000191009           END-EVALUATE
294100191009
294200191009           END-IF.
294300191008      *RFS1019281 END
294400190627           IF li_BatchTransCnt > 0
294500190627              COMPUTE li_BatchTransCnt = li_BatchTransCnt - 1
294600190627           END-IF.
294700190627
294800190704           IF lc_OTrnTypeCode NOT = lncc_FEE
294900190627           IF lc_PaymentTypeCode = lncc_C
295000190627             EXEC SQL
295100190627               DELETE FROM MFATRNCP
295200190627               WHERE PLACEMENT_DATE = :ld_PlaceDate
295300190627                 AND TRANS_NO = :li_TransNo
295400191009             END-EXEC
295500190627             MOVE SQLSTATE TO lc_sqlStates
295600190627             EVALUATE TRUE
295700190718                 WHEN lncc_sqlSuccessful OR lncc_sqlEnd
295800190627                      CONTINUE
295900190627                 WHEN OTHER
296000190627                      SET lncc_Err38 TO TRUE
296100190627                      MOVE lncc_ErrDelMFATRNCP
296200190627                        TO lc_sqlErrShortDESCR
296300190627                      PERFORM SQLFailProcess
296400190627             END-EVALUATE
296500190627           END-IF
296600190627
296700190627           IF lc_PaymentTypeCode = lncc_E
296800190627             EXEC SQL
296900190627               DELETE FROM MFATRNBP
297000190627               WHERE PLACEMENT_DATE = :ld_PlaceDate
297100190627                 AND TRANS_NO = :li_TransNo
297200190627             END-EXEC
297300190627             MOVE SQLSTATE TO lc_sqlStates
297400190627             EVALUATE TRUE
297500190718                 WHEN lncc_sqlSuccessful OR lncc_sqlEnd
297600190627                      CONTINUE
297700190627                 WHEN OTHER
297800190627                      SET lncc_Err39 TO TRUE
297900190627                      MOVE lncc_ErrDelMFATRNBP
298000190627                        TO lc_sqlErrShortDESCR
298100190627                      PERFORM SQLFailProcess
298200190627             END-EVALUATE
298300190627           END-IF
298400190627
298500190627           IF lc_PaymentTypeCode = lncc_R
298600190627             EXEC SQL
298700190627               DELETE FROM MFATRNP
298800190627               WHERE PLACEMENT_DATE = :ld_TargetPlaceDate
298900190627                 AND TRANS_NO = :li_TargetTransNo
299000190627             END-EXEC
299100190627             MOVE SQLSTATE TO lc_sqlStates
299200190627             EVALUATE TRUE
299300190718                 WHEN lncc_sqlSuccessful OR lncc_sqlEnd
299400190627                      CONTINUE
299500190627                 WHEN OTHER
299600190627                      SET lncc_Err64 TO TRUE
299700190627                      MOVE lncc_ErrDelMFATRNPTgt
299800190627                        TO lc_sqlErrShortDESCR
299900190627                      PERFORM SQLFailProcess
300000190627             END-EVALUATE
300100190627           END-IF
300200190627           END-IF.
300300190718           IF lc_TransSubType NOT = SPACES
300400190718             EXEC SQL
300500190718               DELETE FROM MFATRNMSCP
300600190718               WHERE PLACEMENT_DATE = :ld_PlaceDate
300700190718                 AND TRANS_NO = :li_TransNo
300800190718             END-EXEC
300900190718             MOVE SQLSTATE TO lc_sqlStates
301000190718             EVALUATE TRUE
301100190718                 WHEN lncc_sqlSuccessful OR lncc_sqlEnd
301200190718                      CONTINUE
301300190718                 WHEN OTHER
301400190718                      SET lncc_Err79 TO TRUE
301500190718                      MOVE lncc_ErrDelMFATRNMSCP
301600190718                        TO lc_sqlErrShortDESCR
301700190718                      PERFORM SQLFailProcess
301800190718             END-EVALUATE
301900190718           END-IF.
302000190703
302100190703           IF lc_OFundCode = SPACES
302200190703             EXEC SQL
302300190703               SELECT INDUSTRY_FUND_CODE
302400190703               INTO :lc_OFundCode
302500190703               FROM MFAINVP
302600190703               WHERE INVESTMENT_CODE = :lc_OInvCode
302700190703             END-EXEC
302800190703             MOVE SQLSTATE TO lc_sqlStates
302900190703             EVALUATE TRUE
303000190703                 WHEN lncc_sqlSuccessful
303100190703                      CONTINUE
303200190703                 WHEN OTHER
303300190703                      SET lncc_Err69 TO TRUE
303400190703                      MOVE lncc_ErrGetFundCode
303500190703                        TO lc_sqlErrShortDESCR
303600190703                      PERFORM SQLFailProcess
303700190703             END-EVALUATE
303800190703           END-IF.
303900190708           INITIALIZE ld_RP_PlaceDate, li_RP_TransNo, li_RP_Gross,
304000190708                      li_NetAmt, li_UnitAmt, li_UnitPrice,
304100190708                      li_RP_RemainingMV, li_RP_OutstandingBal.
304200190627           MOVE ld_TrnTradeDate TO ld_RP_TradeDate.
304300190627           MOVE lc_OInvCode TO lc_RP_InvCode.
304400190703           MOVE lc_OFundCode TO lc_RP_FundCode.
304500190704           MOVE lc_OTrnTypeCode TO lc_RP_TransType.
304600190708           MOVE "Full Withdrawal from requested fund" TO lc_RP_Reason.
304700190708           PERFORM PutReportRec.
304800190627
304900190627      * ---------------------------------
305000190627       UpdateOriginalTrans.
305100190627      * ---------------------------------
305200200729      *RFS186053 START - UPDATE ADD-TAX ON OG TRADE
305201211004      *RFS1120884 START
305202211004      *    IF lc_TaxSplitOption = lncc_Dollar AND
305203211004      *     (li_FedTaxAmt > 0 OR li_ProvTaxAmt > 0) AND
305204211004           IF ((lc_TaxSplitOption = lncc_Dollar AND
305205211004               (li_FedTaxAmt > 0 OR li_ProvTaxAmt > 0))
305206211004              OR
305207211004               (lc_ATPISplitOption = lncc_Dollar AND
305208211004               (li_ATPIFedTaxAmt > 0 OR li_ATPIProvTaxAmt > 0))) AND
305209211004      *RFS1120884 END
305500200729            lc_OTrnTypeCode NOT = lncc_FEE
305600200729             PERFORM UpdateTransAdditionalTax
305700200729           END-IF.
305800200729      *RFS186053 END
305900191030184886     MOVE lncc_A TO lc_UpdSplitCode.
306000191030           MOVE ltb_MarketValue(li_CounterOgInv) TO li_BatchUpdAmt.
306100190708           PERFORM BatchReconciliation.
306200190704           MOVE ltb_FundCode(li_CounterOgInv) TO lc_OFundCode.
306300191030      *Update GROSS_AMT to 0 for all-unit DII AWD or GIC REJECTION
306400190713           IF (ltb_ProdTypeRule(li_CounterOgInv) = lncc_7 AND
306500190713               lc_OTrnTypeCode NOT = lncc_FEE)
306600190713              OR
306700190917      *RFS1018639 START
306800190917      *       lc_RejectionCode = lncc_G1
306900191030              (lc_RejectionCode = lncc_G1 OR lncc_G45 OR lncc_G46)
307000190917      *RFS1018639 END
307100190709              COMPUTE li_UpdGrossAmt = 0
307200190709           ELSE
307300190709              COMPUTE li_UpdGrossAmt = li_GrossAmt
307400190709           END-IF.
307500190627
307600190712           IF lc_RejectionCode = lncc_11
307700190917      *RFS184781 START
307800190917      *      SET lb_HierUsedYes TO TRUE
307900190917      *      PERFORM SaveOriginalTrans
308000190917      *RFS184781 END
308100210507      *RFS1113861 Starts
308200210507             IF lc_OTrnTypeCode = lncc_FEE
308300210507                MOVE li_GrossAmt TO li_NetAmtAvail, li_OrigNetAmt
308400210507                MOVE ltb_MarketValue(li_CounterOgInv) TO li_FeeInvMV
308500210510                MOVE lc_OInvCode TO lc_CalcFeeInv
308600210507                PERFORM CalculatorForFee
308700210526                IF lc_ChargeSalesTax = lncc_Y AND
308800210526                   lb_IndstExistsNo
308900210507                   PERFORM Calculate-GST-PST
309000210609      *RFS1115481 Starts
309100210609                ELSE
309200210609                   MOVE li_NetAmtAvail TO li_NetAmt
309300210609      *RFS1115481 Ends
309400210507                END-IF
309500210507                PERFORM UpdateFeeTrans
309600210507             ELSE
309700210507      *RFS1113861 Ends
309800190715             PERFORM UpdateMFATRNP
309900210507      *RFS1113861 Starts
310000210507             END-IF
310100210507      *RFS1113861 Ends
310200190712             COMPUTE ltb_MarketValue(li_CounterOgInv) = 0
310300190712             MOVE ld_PlaceDate TO ld_WHPlaceDate, ld_RP_PlaceDate
310400190712             MOVE li_TransNo TO li_WHTransNo, li_RP_TransNo
310500190712             PERFORM InsertTransInWorkFile
310600190712             IF lc_TrnOriginCode = lncc_AWR
310700190712                MOVE ld_TargetPlaceDate TO ld_WHPlaceDate
310800190712                MOVE li_TargetTransNo TO li_WHTransNo
310900190712                PERFORM InsertTransInWorkFile
311000190712             END-IF
311100190712             PERFORM PostTrans
311200190912      *RFS1018639 START
311300210412             PERFORM GetTransDetails
311400190912      *RFS1018639 END
311500190917      *RFS184781 START
311600190917             IF lb_HierTransRejNo
311700190917              SET lb_HierUsedYes TO TRUE
311800190917              PERFORM SaveOriginalTrans
311900191025      *RFS184886 START
312000191025      *       INITIALIZE li_RP_OutstandingBal, li_RP_RemainingMV
312100191025              INITIALIZE li_RP_OutstandingBal
312200191025              COMPUTE ltb_OrigMarketValue(li_CounterOgInv) =
312300191025                      ltb_OrigMarketValue(li_CounterOgInv) - li_RP_Gross
312400191025              COMPUTE li_RP_RemainingMV =
312500191025                      ltb_OrigMarketValue(li_CounterOgInv)
312600191025      *RFS184886 END
312700190917              MOVE "Full Withdrawal from requested fund" TO lc_RP_Reason
312800190917              PERFORM PutReportRec
312900190917              MOVE ld_PlaceDate TO ld_HPlaceDate
313000190917              MOVE li_TransNo TO li_HTransNo
313100190917              PERFORM CreateTransHeader
313200190917             ELSE
313300190917              PERFORM UpdateTransToOrigState
313400190917             END-IF
313500190712           ELSE
313600190917             PERFORM ProcessGICRejection
313700190917      *RFS184781 END
313800190712           END-IF.
313900190715
314000190715      * ---------------------------------
314100190715       UpdateMFATRNP.
314200190715      * ---------------------------------
314300190912      *RFS184710 START
314400190912           INITIALIZE li_ParmSystime.
314500190912           MOVE FUNCTION CURRENT-DATE(9:4) to li_ParmSystime.
314600190912      *RFS184710 END
314700190715           EXEC SQL
314800190715             UPDATE MFATRNP
314900191119             SET SPLIT_OPTION_CODE = :lc_UpdSplitCode,
315000190715                 GROSS_AMT = :li_UpdGrossAmt
315100190912      *RFS184710 START
315200190912                 ,CHANGED_DATE    = :ld_AsAtDate
315300190912                 ,CHANGED_TIME    = :li_ParmSystime
315400190912                 ,CHANGED_BY_USER = :lncc_EnteredBy
315500190912      *RFS184710 END
315600190715             WHERE PLACEMENT_DATE = :ld_PlaceDate
315700190715               AND TRANS_NO = :li_TransNo
315800190715           END-EXEC.
315900190715           MOVE SQLSTATE TO lc_sqlStates.
316000190715           EVALUATE TRUE
316100190715               WHEN lncc_sqlSuccessful
316200190715                    CONTINUE
316300190715               WHEN OTHER
316400190715                    SET lncc_Err35 TO TRUE
316500190715                    MOVE lncc_ErrUpdMFATRNP
316600190715                      TO lc_sqlErrShortDESCR
316700190715                    PERFORM SQLFailProcess
316800190715           END-EVALUATE.
316900190712
317000190917      *RFS184781 START - When orig trade fails, update to orig state
317100190917      * ---------------------------------
317200190917       UpdateTransToOrigState.
317300190917      * ---------------------------------
317400190917           EXEC SQL
317500190917             UPDATE MFATRNP
317600190917             SET SPLIT_OPTION_CODE = :lc_SplitOptionCode,
317700190917                 GROSS_AMT         = :li_GrossAmt,
317800190917                 CHANGED_DATE      = :ld_ChangedDate,
317900190917                 CHANGED_TIME      = :li_ChangedTime,
318000190917                 CHANGED_BY_USER   = :lc_ChangedByUser
318100190917             WHERE PLACEMENT_DATE  = :ld_PlaceDate
318200190917               AND TRANS_NO        = :li_TransNo
318300190917           END-EXEC.
318400190917           MOVE SQLSTATE TO lc_sqlStates.
318500190917           EVALUATE TRUE
318600190917               WHEN lncc_sqlSuccessful
318700190917                    CONTINUE
318800190917               WHEN OTHER
318900190917                    SET lncc_Err35 TO TRUE
319000190917                    MOVE lncc_ErrUpdMFATRNP
319100190917                      TO lc_sqlErrShortDESCR
319200190917                    PERFORM SQLFailProcess
319300190917           END-EVALUATE.
319400190917
319500190712      * ---------------------------------
319600190917       ProcessGICRejection.
319700190712      * ---------------------------------
319800190917      *RFS184781 END
319900190715           PERFORM GetGICTransInstructionDetails.
320000190715           IF lb_GICTransInsExistsYes
320100190715           PERFORM UpdateMFATRNP
320200190712           IF lc_ACLVModFlag = lncc_Y OR lc_AccLevelACB = lncc_2
320300190712              MOVE ld_PlaceDate TO ld_WHPlaceDate
320400190712              MOVE li_TransNo TO li_WHTransNo
320500190712              PERFORM InsertTransInWorkFile
320600190712              IF lc_TrnOriginCode = lncc_AWR
320700190712                 MOVE ld_TargetPlaceDate TO ld_WHPlaceDate
320800190712                 MOVE li_TargetTransNo TO li_WHTransNo
320900190712                 PERFORM InsertTransInWorkFile
321000190712              END-IF
321100190712              PERFORM PostTrans
321200190712              PERFORM ProcessGICTrans
321300190712           ELSE
321400190712              PERFORM CallGICRDORDR
321500190715           END-IF
321600190715           END-IF.
321700190712
321800190712      * ---------------------------------
321900190712       CallGICRDORDR.
322000190712      * ---------------------------------
322100190712           INITIALIZE GICRD_AccountNo
322200190712                      GICRD_TransNo
322300190712                      GICRD_PlacementDate
322400190712                      GICRD_InvestmentCode
322500190712                      GICRD_RedemptionAmt
322600190712                      GICRD_GrossOrNet
322700190712                      GICRD_RedemptionOrder
322800190712                      GICRD_CallAction
322900190712                      GICRD_InstructionNo
323000190712                      GICRD_InstructionDate
323100190712                      GICRD_SplitOption
323200190712                      GICRD_ReplaceAmt
323300190712                      GICRD_PenaltyAmt
323400190712                      GICRD_TotalNetAmt
323500190712                      GICRD_ContrRedemCode
323600190712                      GICRD_TransType
323700190712                      GICRD_CertArray
323800190712                      GICRD_ProcessCode.
323900190712           MOVE li_AccountNo               TO GICRD_AccountNo.
324000190712           MOVE li_TransNo                 TO GICRD_TransNo.
324100190712           MOVE ld_PlaceDate               TO GICRD_PlacementDate.
324200190712           MOVE lc_OInvCode                TO GICRD_InvestmentCode.
324300190712           MOVE lc_GrossOrNet              TO GICRD_GrossOrNet.
324400190713           MOVE "O"                        TO GICRD_CallAction.
324500190712           MOVE lncc_A                     TO GICRD_SplitOption.
324600190712           MOVE lc_ContRedCode             TO GICRD_ContrRedemCode.
324700190712           MOVE lc_OTrnTypeCode            TO GICRD_TransType.
324800190712           MOVE li_InstructionNo TO        GICRD_InstructionNo.
324900190712           MOVE ld_InstructionDate TO      GICRD_InstructionDate.
325000190712
325100190712           CALL "GICRDORDR" USING GICRD_AccountNo
325200190712                                  GICRD_TransNo
325300190712                                  GICRD_PlacementDate
325400190712                                  GICRD_InvestmentCode
325500190712                                  GICRD_RedemptionAmt
325600190712                                  GICRD_GrossOrNet
325700190712                                  GICRD_RedemptionOrder
325800190712                                  GICRD_CallAction
325900190712                                  GICRD_InstructionNo
326000190712                                  GICRD_InstructionDate
326100190712                                  GICRD_SplitOption
326200190712                                  GICRD_ReplaceAmt
326300190712                                  GICRD_PenaltyAmt
326400190712                                  GICRD_TotalNetAmt
326500190712                                  GICRD_ContrRedemCode
326600190712                                  GICRD_TransType
326700190712                                  GICRD_CertArray
326800190712                                  GICRD_ProcessCode.
326900190712           IF GICRD_ProcessCode = ZERO OR SPACES
327000190712              PERFORM ProcessGICTrans
327100190712           ELSE
327200190712              DISPLAY "GICRDORDR error with return code: "
327300190712                       GICRD_ProcessCode
327400190712           END-IF.
327500190712
327600190712      * ---------------------------------
327700190715       GetGICTransInstructionDetails.
327800190712      * ---------------------------------
327900190712           INITIALIZE ld_InstructionDate, li_InstructionNo.
328000190715           SET lb_GICTransInsExistsYes TO TRUE.
328100190712           EXEC SQL
328200190715             SELECT MULTDP.INSTRUCTION_DATE, MULTDP.INSTRUCTION_NO
328300190712             INTO :ld_InstructionDate, :li_InstructionNo
328400190715             FROM MFAMULTDP MULTDP
328500190715             INNER JOIN MFAGICTROP GTROP ON
328600190715               MULTDP.INSTRUCTION_DATE = GTROP.INSTRUCTION_DATE AND
328700190715               MULTDP.INSTRUCTION_NO = GTROP.INSTRUCTION_NO
328800190715             WHERE MULTDP.PLACEMENT_DATE = :ld_PlaceDate
328900190715               AND MULTDP.TRANS_NO = :li_TransNo
329000190715               AND GTROP.ACCOUNT_NO = :li_AccountNo
329100190715               AND GTROP.INVESTMENT_CODE = :lc_OInvCode
329200190712           END-EXEC.
329300190712           MOVE SQLSTATE TO lc_sqlStates.
329400190712           EVALUATE TRUE
329500190712               WHEN lncc_sqlSuccessful
329600190712                    CONTINUE
329700190715               WHEN lncc_sqlEnd
329800190715                    SET lb_GICTransInsExistsNo TO TRUE
329900190712               WHEN OTHER
330000190712                    SET lncc_Err74 TO TRUE
330100190712                    MOVE lncc_ErrGetMFAMULTDP
330200190712                      TO lc_sqlErrShortDESCR
330300190712                    PERFORM SQLFailProcess
330400190712           END-EVALUATE.
330500190712
330600190712      * ---------------------------------
330700190712       ProcessGICTrans.
330800190712      * ---------------------------------
330900190712           EXEC SQL
331000190712             DECLARE GICTrans CURSOR FOR
331100190712             SELECT
331200190719               MULTDP.PLACEMENT_DATE, MULTDP.TRANS_NO
331300190719             FROM MFAMULTDP MULTDP
331400190719             INNER JOIN MFATRNP TRNP ON
331500190719               MULTDP.PLACEMENT_DATE = TRNP.PLACEMENT_DATE AND
331600190719               MULTDP.TRANS_NO = TRNP.TRANS_NO
331700190713             WHERE
331800190719               MULTDP.INSTRUCTION_DATE = :ld_InstructionDate       AND
331900190719               MULTDP.INSTRUCTION_NO   = :li_InstructionNo         AND
332000190719               TRNP.ACCOUNT_NO         = :li_AccountNo             AND
332100190719               TRNP.INVESTMENT_CODE    = :lc_OInvCode
332200190719             ORDER BY RRN(MULTDP)
332300190712           END-EXEC.
332400190712           EXEC SQL
332500190712             OPEN GICTrans
332600190712           END-EXEC.
332700190712           MOVE SQLSTATE TO lc_sqlStates.
332800190712           EVALUATE TRUE
332900190712               WHEN lncc_sqlSuccessful
333000190712                    CONTINUE
333100190712               WHEN OTHER
333200190712                    SET lncc_Err75 TO TRUE
333300190712                    MOVE lncc_ErrOpenGICTrans
333400190712                      TO lc_sqlErrShortDESCR
333500190712                    PERFORM SQLFailProcess
333600190712           END-EVALUATE.
333700190712           INITIALIZE ltb_GICTransTable.
333800190712           EXEC SQL
333900190712             FETCH NEXT FROM GICTrans
334000190712             FOR  :lnci_GICRec ROWS
334100190712             INTO :ltb_GICTransRecs
334200190712           END-EXEC.
334300190712           MOVE SQLSTATE TO lc_sqlStates.
334400190712           EVALUATE TRUE
334500190712               WHEN lncc_sqlSuccessful
334600190712                    COMPUTE li_NoOfGICTransRowsFetched = SQLERRD(3)
334700190712                    CONTINUE
334800190712               WHEN lncc_sqlEnd
334900190712                    COMPUTE li_NoOfGICTransRowsFetched = SQLERRD(3)
335000190712                    CONTINUE
335100190712               WHEN OTHER
335200190712                    SET lncc_Err76 TO TRUE
335300190712                    MOVE lncc_ErrFetchGICTrans
335400190712                      TO lc_sqlErrShortDESCR
335500190712                    PERFORM SQLFailProcess
335600190712           END-EVALUATE.
335700190712           PERFORM CloseGICTrans.
335800190712           IF li_NoOfGICTransRowsFetched > 0
335900190712             SET lb_HierUsedYes TO TRUE
336000190713             PERFORM SaveOriginalTrans
336100190712           END-IF.
336200190713           SET li_CounterGICTrans TO 1.
336300190712           IF lc_ACLVModFlag = lncc_Y OR lc_AccLevelACB = lncc_2
336400190712              PERFORM ReportGICTrans TEST BEFORE UNTIL
336500190712                   li_CounterGICTrans > li_NoOfGICTransRowsFetched
336600190712           ELSE
336700190712              PERFORM Post-ReportGICTrans TEST BEFORE UNTIL
336800190712                   li_CounterGICTrans > li_NoOfGICTransRowsFetched
336900190712           END-IF.
337000190712
337100190712      * ---------------------------------
337200190712       ReportGICTrans.
337300190712      * ---------------------------------
337400190712           MOVE ltb_GICPlaceDate(li_CounterGICTrans)
337500190715             TO ld_RP_PlaceDate, ld_HPlaceDate.
337600190712           MOVE ltb_GICTransNo(li_CounterGICTrans)
337700190715             TO li_RP_TransNo, li_HTransNo.
337800190715           PERFORM CreateTransHeader.
337900190712           INITIALIZE li_RP_OutstandingBal.
338000190712           MOVE "Full Withdrawal from requested fund" TO lc_RP_Reason.
338100190712           PERFORM GetTransDetails.
338200190712           COMPUTE ltb_MarketValue(li_CounterOgInv) =
338300190712                   ltb_MarketValue(li_CounterOgInv) - li_RP_Gross.
338400191025      *RFS184886 START
338500191025           COMPUTE ltb_OrigMarketValue(li_CounterOgInv) =
338600191025                   ltb_OrigMarketValue(li_CounterOgInv) - li_RP_Gross.
338700190712           COMPUTE li_RP_RemainingMV =
338800191025      *                               ltb_MarketValue(li_CounterOgInv).
338900191025                   ltb_OrigMarketValue(li_CounterOgInv).
339000191025      *RFS184886 END
339100190712           PERFORM PutReportRec.
339200190713           SET li_CounterGICTrans UP BY 1.
339300190712
339400190712      * ---------------------------------
339500190712       Post-ReportGICTrans.
339600190712      * ---------------------------------
339700190712           MOVE ltb_GICPlaceDate(li_CounterGICTrans)
339800190715             TO ld_WHPlaceDate, ld_RP_PlaceDate, ld_HPlaceDate.
339900190712           MOVE ltb_GICTransNo(li_CounterGICTrans)
340000190715             TO li_WHTransNo, li_RP_TransNo, li_HTransNo.
340100190715           PERFORM CreateTransHeader.
340200190712           PERFORM InsertTransInWorkFile
340300190712           IF lc_TrnOriginCode = lncc_AWR
340400190712              PERFORM GetGICTargetTransDetails
340500190712              MOVE ld_GICTargetPlaceDate TO ld_WHPlaceDate
340600190712              MOVE li_GICTargetTransNo TO li_WHTransNo
340700190712              PERFORM InsertTransInWorkFile
340800190712           END-IF.
340900190712           PERFORM PostTrans.
341000190912      *RFS1018639 START
341100190912           PERFORM GetTransDetails.
341200190912      *RFS1018639 END
341300190712           INITIALIZE li_RP_OutstandingBal.
341400190712           MOVE "Full Withdrawal from requested fund" TO lc_RP_Reason.
341500190712           COMPUTE ltb_MarketValue(li_CounterOgInv) =
341600190712                   ltb_MarketValue(li_CounterOgInv) - li_RP_Gross.
341700191025      *RFS184886 START
341800191025           COMPUTE ltb_OrigMarketValue(li_CounterOgInv) =
341900191025                   ltb_OrigMarketValue(li_CounterOgInv) - li_RP_Gross.
342000190712           COMPUTE li_RP_RemainingMV =
342100191025      *                               ltb_MarketValue(li_CounterOgInv).
342200191025                   ltb_OrigMarketValue(li_CounterOgInv).
342300191025      *RFS184886 END
342400190712           PERFORM PutReportRec.
342500190713           SET li_CounterGICTrans UP BY 1.
342600190712
342700190712      * ---------------------------------
342800190712       GetGICTargetTransDetails.
342900190712      * ---------------------------------
343000190712           INITIALIZE ld_GICTargetPlaceDate, li_GICTargetTransNo.
343100190712           EXEC SQL
343200190712             SELECT PLACEMENT_DATE_2, TRANS_NO_2
343300190712             INTO :ld_GICTargetPlaceDate, :li_GICTargetTransNo
343400190712             FROM MFATRNTGP
343500190712             WHERE PLACEMENT_DATE = :ld_WHPlaceDate
343600190712               AND TRANS_NO = :li_WHTransNo
343700190712               AND RELATIONSHIP_TYPE = :lncc_DSB
343800190712           END-EXEC.
343900190712           MOVE SQLSTATE TO lc_sqlStates.
344000190712           EVALUATE TRUE
344100190712               WHEN lncc_sqlSuccessful
344200190712                    CONTINUE
344300190712               WHEN OTHER
344400190712                    SET lncc_Err78 TO TRUE
344500190712                    MOVE lncc_ErrGetGICTargetTrans
344600190712                      TO lc_sqlErrShortDESCR
344700190712                    PERFORM SQLFailProcess
344800190712           END-EVALUATE.
344900190712
345000190627      * ---------------------------------
345100190627       BatchReconciliation.
345200190627      * ---------------------------------
345300190627           COMPUTE li_BatchAmt      = li_BatchAmt -
345400190627                                         li_BatchUpdAmt * -1.
345500190627           COMPUTE li_TransAmt      = li_TransAmt -
345600190627                                         li_BatchUpdAmt * -1.
345700190627
345800190627      * ---------------------------------
345900190627       GenerateHierTrans.
346000190627      * ---------------------------------
346100190627           MOVE li_AccountNo TO li_TransAccountNo.
346200190627           IF ltb_HierAssetCrit(li_CounterHier) = lncc_CM
346300190627            MOVE ltb_GICInvCode(li_CounterGIC) TO lc_TransInvCode
346400190627            MOVE ltb_GICFundCode(li_CounterGIC) TO lc_TransFundCode
346500190627           ELSE
346600190627            MOVE ltb_InvCode(li_CounterAccInv) TO lc_TransInvCode
346700190627            MOVE ltb_FundCode(li_CounterAccInv) TO lc_TransFundCode
346800190627           END-IF.
346900190627           MOVE "Withdrawal Hierarchy" to lc_RP_Reason.
347000190704           IF lc_OTrnTypeCode = lncc_FEE
347100190627              PERFORM ProcessFEE
347200190627           ELSE
347300190627              PERFORM ProcessAWD
347400190627           END-IF.
347500190627           PERFORM CreateTransHeader.
347600190627           PERFORM UpdateBatchTotal.
347700190627           PERFORM PostTrans.
347800190912      *RFS1018639 START
347900190912           PERFORM GetTransDetails.
348000190912      *RFS1018639 END
348100190726           IF li_HierWDClosingBal > 0
348200190726              PERFORM UpdateCalcValues
348300190726           ELSE
348400190726             INITIALIZE li_RP_RemainingMV
348500190726             IF ltb_HierAssetCrit(li_CounterHier) = lncc_CM
348600190726                PERFORM GetCurrentGICFund
348700190726                INITIALIZE ltb_MarketValue(li_CounterGICInv)
348800191025184886                     ltb_OrigMarketValue(li_CounterGICInv)
348900190726             ELSE
349000190726                INITIALIZE ltb_MarketValue(li_CounterAccInv)
349100191025184886                     ltb_OrigMarketValue(li_CounterAccInv)
349200190726                IF ltb_HierAssetCrit(li_CounterHier) = lncc_HM
349300190726                   INITIALIZE ltb_MaturedUnitsMV(li_CounterAccInv)
349400190726                END-IF
349500190726                IF ltb_HierAssetCrit(li_CounterHier) = lncc_HF
349600190726                   INITIALIZE ltb_FreeUnitsMV(li_CounterAccInv)
349700190726                END-IF
349800190726             END-IF
349900190726           END-IF.
350000190726           IF lb_HierTransRejNo
350100190726              PERFORM PutReportRec
350200190726           END-IF.
350300190627
350400190627      *---------------------------------
350500190627       ProcessAWD.
350600190627      *---------------------------------
350700190704           IF lc_GenTransType = lncc_SEL
350800190627              MOVE li_SELTransProcSeqNo TO li_TransProcSeqNo
350900190627           ELSE
351000190704              IF lc_GenTransType = lncc_SWO
351100190627                 MOVE li_SWOTransProcSeqNo TO li_TransProcSeqNo
351200190627              ELSE
351300190704                 IF lc_GenTransType = lncc_TRO
351400190627                    MOVE li_SWOTransProcSeqNo TO li_TransProcSeqNo
351500190627                 END-IF
351600190627              END-IF
351700190627           END-IF.
351800190627           PERFORM CreateTrans.
351900190627           MOVE ld_AsAtDate TO ld_WHPlaceDate, ld_RP_PlaceDate,
352000190627                               ld_HPlaceDate.
352100190627           MOVE li_TransNum TO li_WHTransNo, li_RP_TransNo,
352200190627                               li_HTransNo.
352300190627           PERFORM InsertTransInWorkFile.
352400190724           IF lc_TreatTxnAsAWD = SPACES
352500190724              MOVE lncc_Y TO lc_TreatTxnAsAWD
352600190724              MOVE lncc_N TO lc_WaiveDSC
352700190724           END-IF.
352800190627           PERFORM CreateTransRedemp.
352900200729      *RFS186053 START - ADD-TAX ON NEW TRADE
353000200729           IF lc_TaxSplitOption NOT = SPACES
353100200729              PERFORM CreateTransAdditionalTax
353200200729           END-IF.
353300200729      *RFS186053 END
353400190627           IF lc_PaymentTypeCode = lncc_C
353500190627              PERFORM CreateTransPayToCheque
353600190627           END-IF.
353700200729           IF lc_PaymentTypeCode = lncc_E
353800190627              PERFORM CreateTransPayToBank
353900190627           END-IF.
354000190627           IF lc_AccTypeRule = lncc_4
354100190627              MOVE lc_BeneSplitCode TO lc_RESPBeneSplitCode
354200190627              PERFORM CreateTransRESPDetails
354300190627           END-IF.
354400190627           IF ltb_HierAssetCrit(li_CounterHier) = lncc_CM
354500190627              MOVE ltb_GICIDNo(li_CounterGIC) TO li_GICIDNo
354600190627              PERFORM CreateGICTransRelation
354700190627              PERFORM CreateTransGICRedemption
354800190627           END-IF.
354900190627           IF lc_PaymentTypeCode = lncc_R
355000190704              IF lc_GenTransType = lncc_SWO
355100190704                 MOVE lncc_SWI TO lc_GenTransType
355200190627                 MOVE li_SWITransProcSeqNo TO li_TransProcSeqNo
355300190627              ELSE
355400190704                 MOVE lncc_TRI TO lc_GenTransType
355500190627                 MOVE li_TRITransProcSeqNo TO li_TransProcSeqNo
355600190627              END-IF
355700190627              MOVE li_TargetAccountNo TO li_TransAccountNo
355800190704              MOVE lc_TargetInvCode TO lc_TransInvCode
355900190704              MOVE lc_TargetFundCode TO lc_TransFundCode
356000190627              MOVE li_TransNum TO li_PrevTransNum
356100190627              PERFORM CreateTrans
356200190627              MOVE ld_AsAtDate TO ld_WHPlaceDate
356300190627              MOVE li_TransNum TO li_WHTransNo
356400190627              PERFORM InsertTransInWorkFile
356500190627              PERFORM CreateTransCommission
356600190627              IF lc_TargetAccTypeRule = lncc_4
356700190627                 MOVE lc_TargetBeneSplitCode TO lc_RESPBeneSplitCode
356800190627                 PERFORM CreateTransRESPDetails
356900190627              END-IF
357000190627              PERFORM CreateTransTarget
357100190627           END-IF.
357200190627
357300190627      *---------------------------------
357400190627       ProcessFEE.
357500190627      *---------------------------------
357600190627           MOVE li_FEETransProcSeqNo TO li_TransProcSeqNo.
357700190627           PERFORM CreateTrans.
357800190627           MOVE ld_AsAtDate TO ld_WHPlaceDate, ld_RP_PlaceDate,
357900190627                               ld_HPlaceDate.
358000190627           MOVE li_TransNum TO li_WHTransNo, li_RP_TransNo,
358100190627                               li_HTransNo.
358200190627           PERFORM InsertTransInWorkFile.
358300190724           IF lc_TreatTxnAsAWD = SPACES
358400190724              MOVE lncc_N TO lc_TreatTxnAsAWD
358500190724              MOVE lncc_Y TO lc_WaiveDSC, lc_WaiveERF
358600190724              MOVE lncc_N TO lc_WaiveCommChargeback
358700190724           END-IF.
358800190627           PERFORM CreateTransRedemp.
358900210401      * RFS180708 Starts
359000210406           IF lc_ChargeSalesTax = lncc_Y
359100210401              PERFORM WriteSalesTaxDetails
359200210401           END-IF.
359300210401      * RFS180708 Ends
359400190627           IF lc_TransSubType NOT = SPACES
359500190627              PERFORM CreateTransMiscDetails
359600190627           END-IF.
359700190627           IF ltb_HierAssetCrit(li_CounterHier) = lncc_CM
359800190718              MOVE ltb_GICIDNo(li_CounterGIC) TO li_GICIDNo
359900190627              PERFORM CreateGICTransRelation
360000190627              PERFORM CreateTransGICRedemption
360100190627           END-IF.
360200190627
360300190627      *---------------------------------
360400190627       CreateTrans.
360500190627      *---------------------------------
360600190627           INITIALIZE li_HierInvNet.
360700210507      *RFS1113861 Starts
360800210507           IF lc_OTrnTypeCode = lncc_SEL
360801210927      *RFS1119590 Starts
360802210927             IF lc_GrossOrNet = lncc_G
360803210927      *RFS1119590 Ends
360900210507              MOVE lncc_G TO lc_GenGrossOrNet
360901210927      *RFS1119590 Starts
360902210927             END-IF
360903210927      *RFS1119590 Ends
361000210507           ELSE
361100210507              MOVE lncc_N TO lc_GenGrossOrNet
361200210507           END-IF.
361300210507      *RFS1113861 Ends
361400190719           IF lc_GrossOrNet = lncc_N
361500190719              COMPUTE li_HierInvNet = li_HierInvGross
361600190719           END-IF.
361700190627           INITIALIZE li_ParmSystime.
361800190627           MOVE FUNCTION CURRENT-DATE(9:4) to li_ParmSystime.
361801210830      *RFS1118574 Start
361802210830      *    IF li_TransCnt NOT = 0
361803210830      *       COMPUTE li_TransNum = li_TransNum + 1
361804210830      *    END-IF.
361805210830           PERFORM GetTransNum.
361806210830      *RFS1118574 End
362200190627           COMPUTE li_TransCnt = li_TransCnt + 1.
362300190627           EXEC SQL
362400190627              INSERT INTO MFATRNP
362500190627              (    PLACEMENT_DATE,
362600190627                   TRANS_NO,
362700190627                   BATCH_DATE,
362800190627                   BATCH_CODE,
362900190627                   PROCESS_DATE,
363000190627                   TRADE_DATE,
363100190627                   SETTLEMENT_DATE,
363200190627                   SETTLED_GROSS_OR_NET,
363300190627                   TRANS_TYPE_CODE,
363400190627                   TRANS_ORIGIN_CODE,
363500190627                   ACCOUNT_NO,
363600190627                   INVESTMENT_CODE,
363700190627                   INDUSTRY_FUND_CODE,
363800190627                   GROSS_AMT,
363900190627                   NET_AMT,
364000190627                   UNIT_AMT,
364100190627                   UNIT_PRICE,
364200190627                   TRANS_PROC_SEQ_NO,
364300190627                   REJECTION_CODE,
364400190627                   GROSS_OR_NET,
364500190627                   CLOSING_UNIT_BAL,
364600190627                   TRANS_SEQ_NO,
364700190627                   DEALER_CODE,
364800190627                   DEALER_REP_CODE,
364900190627                   WIRE_ORDER_NO,
365000190627                   SETTLEMENT_AMT,
365100190627                   SUPPRESS_CONFIRMATION,
365200190627                   CONTR_REDEM_CODE,
365300190627                   TRANS_STATUS_CODE,
365400190627                   ORIGINAL_DOCUMENTS_RECVD,
365500190627                   HIDDEN_TRANS,
365600190627                   AVERAGE_UNIT_COST,
365700190627                   SPLIT_OPTION_CODE,
365800190627                   RECEIPTED,
365900190627                   RECEIPT_NUMBER,
366000190627                   INSTITUTION_CODE,
366100190627                   BRANCH_CODE,
366200190627                   CHANGED_DATE,
366300190627                   CHANGED_TIME,
366400190627                   CHANGED_BY_USER,
366500190627                   ENTERED_BY,
366600190627                   TIME_PLACED,
366700190627                   REVERSAL_CODE,
366800190627                   REVERSE,
366900190627                   ADJUST,
367000190627                   PAYMENT_TYPE_CODE
367100190627              ) VALUES (
367200190704                   :ld_AsAtDate,
367300190704                   :li_TransNum,
367400190705                   :ld_OBatchDate,
367500190704                   :lc_BatchCode,
367600190704                   :lncc_Zero,
367700190719                   :ld_TrnTradeDate,
367800190704                   :lncc_Zero,
367900210507      *RFS1113861 Starts
368000210507      *            :lc_GrossOrNet,
368100210507                   :lc_GenGrossOrNet,
368200210507      *RFS1113861 Ends
368300190704                   :lc_GenTransType,
368400190704                   :lc_TrnOriginCode,
368500190704                   :li_TransAccountNo,
368600190704                   :lc_TransInvCode,
368700190704                   :lc_TransFundCode,
368800190704                   :li_HierInvGross,
368900190704                   :li_HierInvNet,
369000190704                   :lncc_Zero,
369100190704                   :lncc_Zero,
369200190704                   :lncc_Zero,
369300190704                   :lncc_Space,
369400210507      *RFS1113861 Starts
369500210507      *            :lc_GrossOrNet,
369600210507                   :lc_GenGrossOrNet,
369700210507      *RFS1113861 Ends
369800190704                   :lncc_Zero,
369900190704                   :li_TransProcSeqNo,
370000190704                   :lc_DealerCode,
370100190704                   :lc_RepCode,
370200190704                   :lncc_Space,
370300190704                   :lncc_Zero,
370400190704                   :lc_SuppressConfirms,
370500190704                   :lc_ContRedCode,
370600190704                   :lncc_PND,
370700190704                   :lncc_N,
370800190704                   :lncc_N,
370900190704                   :lncc_Zero,
371000190704                   :lc_TransSplitOptionCode,
371100190704                   :lncc_N,
371200190704                   :lncc_Zero,
371201210927      *RFS1119590 Starts
371202210927      *            :lncc_Space,
371203210927      *            :lncc_Space,
371204210927                   :lc_InstitutionCode,
371205210927                   :lc_BranchCode,
371206210927      *RFS1119590 Ends
371500190704                   :lncc_Zero,
371600190704                   :lncc_Zero,
371700190704                   :lncc_Space,
371800190704                   :lncc_EnteredBy,
371900190704                   :li_ParmSystime,
372000190704                   :lncc_Space,
372100190704                   :lncc_Space,
372200190704                   :lncc_Space,
372300190704                   :lc_PaymentTypeCode
372400190627              )
372500190627           END-EXEC.
372600190627           MOVE SQLSTATE TO lc_sqlStates.
372700190627           EVALUATE TRUE
372800190627               WHEN lncc_sqlSuccessful
372900190627                    CONTINUE
373000190912      *RFS184781 START
373100190912               WHEN lncc_sqlDuplicate
373200190912                    SET lncc_Err84 TO TRUE
373300190912                    MOVE lncc_ErrDuplicateTrans
373400190912                      TO lc_sqlErrShortDESCR
373500190912                    PERFORM SQLFailProcess
373600190912      *RFS184781 END
373700190627               WHEN OTHER
373800190627                    SET lncc_Err29 TO TRUE
373900190627                    MOVE lncc_ErrInsMFATRNP
374000190627                      TO lc_sqlErrShortDESCR
374100190627                    PERFORM SQLFailProcess
374200190627           END-EVALUATE.
374300190627
374400190627      *---------------------------------
374500190627       CreateTransRedemp.
374600190627      *---------------------------------
374700190627           EXEC SQL
374800190627             INSERT INTO MFATRNREP
374900190627                    (PLACEMENT_DATE, TRANS_NO,
375000190627                     TREAT_TXN_AS_AWD,
375100190627                     WAIVE_DSC, DSC_WAIVE_REASON_CODE,
375200190627                     WAIVE_ERF, WAIVE_COMM_CHARGEBACK
375300210401180708              ,BYPASS_RULE, CHARGE_SALES_TAX
375400190627                     )
375500190627             VALUES (:ld_AsAtDate,
375600190627                     :li_TransNum,
375700190627                     :lc_TreatTxnAsAWD,
375800190627                     :lc_WaiveDSC,
375900190627                     :lc_DSCWaiveReason,
376000190627                     :lc_WaiveERF,
376100190627                     :lc_WaiveCommChargeback
376200210401180708              ,:lc_BypassRule
376300210401180708              ,:lc_ChargeSalesTax
376400190627                     )
376500190627           END-EXEC.
376600190627           MOVE SQLSTATE TO lc_sqlStates.
376700190627           EVALUATE TRUE
376800190627               WHEN lncc_sqlSuccessful
376900190627                    CONTINUE
377000190627               WHEN OTHER
377100190627                    SET lncc_Err32 TO TRUE
377200190627                    MOVE lncc_ErrInsTransRed
377300190627                      TO lc_sqlErrShortDESCR
377400190627                    PERFORM SQLFailProcess
377500190627           END-EVALUATE.
377600190627
377700190627      *---------------------------------
377800190627       CreateTransPayToCheque.
377900190627      *---------------------------------
378000190627           EXEC SQL
378100190627             INSERT INTO MFATRNCP
378200190627                    (PLACEMENT_DATE,
378300190627                     TRANS_NO,
378400190627                     PAYEE_NAME,
378500190627                     PAYEE_NAME2,
378600190627                     ADDR_NO
378700190627                     )
378800190627             VALUES (:ld_AsAtDate,
378900190627                     :li_TransNum,
379000190627                     :lc_PayeeName,
379100190627                     :lc_PayeeName2,
379200190627                     :li_AddrNo
379300190627                     )
379400190627           END-EXEC.
379500190627           MOVE SQLSTATE TO lc_sqlStates.
379600190627           EVALUATE TRUE
379700190627               WHEN lncc_sqlSuccessful
379800190627                    CONTINUE
379900190627               WHEN OTHER
380000190627                    SET lncc_Err40 TO TRUE
380100190627                    MOVE lncc_ErrInsTransCheque
380200190627                      TO lc_sqlErrShortDESCR
380300190627                    PERFORM SQLFailProcess
380400190627           END-EVALUATE.
380500190627
380600190627      *---------------------------------
380700190627       CreateTransPayToBank.
380800190627      *---------------------------------
380900190627           EXEC SQL
381000190627             INSERT INTO MFATRNBP
381100190627                    (PLACEMENT_DATE,
381200190627                     TRANS_NO,
381300190627                     BANK_SEQ_NO
381400190627                     )
381500190627             VALUES (:ld_AsAtDate,
381600190627                     :li_TransNum,
381700190627                     :li_BankSeqNo
381800190627                     )
381900190627           END-EXEC.
382000190627           MOVE SQLSTATE TO lc_sqlStates.
382100190627           EVALUATE TRUE
382200190627               WHEN lncc_sqlSuccessful
382300190627                    CONTINUE
382400190627               WHEN OTHER
382500190627                    SET lncc_Err41 TO TRUE
382600190627                    MOVE lncc_ErrInsTransBank
382700190627                      TO lc_sqlErrShortDESCR
382800190627                    PERFORM SQLFailProcess
382900190627           END-EVALUATE.
383000190627
383100190627      *---------------------------------
383200190627       CreateTransHeader.
383300190627      *---------------------------------
383400190627           COMPUTE li_DetailSeqNo = li_DetailSeqNo + 1.
383500190627           MOVE lncc_WDH TO lc_HeaderType.
383600190627           EXEC SQL
383700190627             INSERT INTO MFATRHDRP
383800190627                    (PLACEMENT_DATE, TRANS_NO,
383900190627                     HEADER_TYPE, HEADER_NO, DETAIL_SEQ_NO
384000190627                     )
384100190627             VALUES (:ld_HPlaceDate,
384200190627                     :li_HTransNo,
384300190627                     :lc_HeaderType,
384400190627                     :li_TransHeaderNo,
384500190627                     :li_DetailSeqNo
384600190627                     )
384700190627           END-EXEC.
384800190627           MOVE SQLSTATE TO lc_sqlStates.
384900190627           EVALUATE TRUE
385000190627               WHEN lncc_sqlSuccessful
385100190911184781           OR lncc_sqlDuplicate
385200190627                    CONTINUE
385300190627               WHEN OTHER
385400190627                    SET lncc_Err45 TO TRUE
385500190627                    MOVE lncc_ErrInsTransHeader
385600190627                      TO lc_sqlErrShortDESCR
385700190627                    PERFORM SQLFailProcess
385800190627           END-EVALUATE.
385900190627
386000190627      *---------------------------------
386100190627       CreateTransCommission.
386200190627      *---------------------------------
386300190627           EXEC SQL
386400190627             INSERT INTO MFATRNCMP
386500190627                    (PLACEMENT_DATE, TRANS_NO,
386600190627                     COMM_RATE, SPONSOR_RATE
386700190627                     )
386800190627             VALUES (:ld_AsAtDate,
386900190627                     :li_TransNum,
387000190627                     :lc_AWRCommRate,
387100190627                     :lc_AWRSponsorRate
387200190627                     )
387300190627           END-EXEC.
387400190627           MOVE SQLSTATE TO lc_sqlStates.
387500190627           EVALUATE TRUE
387600190627               WHEN lncc_sqlSuccessful
387700190627                    CONTINUE
387800190627               WHEN OTHER
387900190627                    SET lncc_Err57 TO TRUE
388000190627                    MOVE lncc_ErrInsTransComm
388100190627                      TO lc_sqlErrShortDESCR
388200190627                    PERFORM SQLFailProcess
388300190627           END-EVALUATE.
388400190627
388500190627      *---------------------------------
388600190627       CreateTransRESPDetails.
388700190627      *---------------------------------
388800190627           EXEC SQL
388900190627             INSERT INTO MFATRNRFP
389000190627                    (PLACEMENT_DATE, TRANS_NO, ACCOUNT_NO,
389100190627                     HRDC_FILE_SEQ_NO, HRDC_FILE_DATE,
389200190627                     BENEFICIARY_SPLIT_CODE, REPORTED, TRANSACTION_DATE
389300190627                     )
389400190627             VALUES (:ld_AsAtDate,
389500190627                     :li_TransNum,
389600190627                     :li_TransAccountNo,
389700190627                     0, 0,
389800190627                     :lc_RESPBeneSplitCode,
389900190627                     " ", 0
390000190627                     )
390100190627           END-EXEC.
390200190627           MOVE SQLSTATE TO lc_sqlStates.
390300190627           EVALUATE TRUE
390400190627               WHEN lncc_sqlSuccessful
390500190627                    CONTINUE
390600190627               WHEN OTHER
390700190627                    SET lncc_Err62 TO TRUE
390800190627                    MOVE lncc_ErrInsTransRESP
390900190627                      TO lc_sqlErrShortDESCR
391000190627                    PERFORM SQLFailProcess
391100190627           END-EVALUATE.
391200190627
391300190627      *---------------------------------
391400190627       CreateTransTarget.
391500190627      *---------------------------------
391600190627           EXEC SQL
391700190627             INSERT INTO MFATRNTGP
391800190627                    (PLACEMENT_DATE,
391900190627                     TRANS_NO,
392000190627                     PLACEMENT_DATE_2,
392100190627                     TRANS_NO_2,
392200190627                     RELATIONSHIP_TYPE
392300190627                     )
392400190627             VALUES (:ld_AsAtDate,
392500190720                     :li_PrevTransNum,
392600190627                     :ld_AsAtDate,
392700190720                     :li_TransNum,
392800190627                     :lncc_DSB
392900190627                     )
393000190627           END-EXEC.
393100190627           MOVE SQLSTATE TO lc_sqlStates.
393200190627           EVALUATE TRUE
393300190627               WHEN lncc_sqlSuccessful
393400190627                    CONTINUE
393500190627               WHEN OTHER
393600190627                    SET lncc_Err54 TO TRUE
393700190627                    MOVE lncc_ErrInsTransTarget
393800190627                      TO lc_sqlErrShortDESCR
393900190627                    PERFORM SQLFailProcess
394000190627           END-EVALUATE.
394100190627
394200190627      *---------------------------------
394300190627       CreateTransMiscDetails.
394400190627      *---------------------------------
394500190627           EXEC SQL
394600190627             INSERT INTO MFATRNMSCP
394700190627                    (PLACEMENT_DATE,
394800190627                     TRANS_NO,
394900190627                     TRANS_SUB_TYPE
395000190627                     )
395100190627             VALUES (:ld_AsAtDate,
395200190627                     :li_TransNum,
395300190627                     :lc_TransSubType
395400190627                     )
395500190627           END-EXEC.
395600190627           MOVE SQLSTATE TO lc_sqlStates.
395700190627           EVALUATE TRUE
395800190627               WHEN lncc_sqlSuccessful
395900190627                    CONTINUE
396000190627               WHEN OTHER
396100190627                    SET lncc_Err67 TO TRUE
396200190627                    MOVE lncc_ErrInsMFATRNMSCP
396300190627                      TO lc_sqlErrShortDESCR
396400190627                    PERFORM SQLFailProcess
396500190627           END-EVALUATE.
396600190627
396700190627      *---------------------------------
396800190627       CreateGICTransRelation.
396900190627      *---------------------------------
397000190627           EXEC SQL
397100190627           INSERT INTO MFAGITRP(
397200190627                 Placement_Date, Trans_No,
397300190627                 Certificate_Id_No,
397400190627                 Cert_Txn_Relationship,
397500190627                 Cert_Active_Flag,
397600190627                 Trade_Date,
397700190627                 GIC_FILED)
397800190627           VALUES(
397900190627                  :ld_AsAtDate,
398000190627                  :li_TransNum,
398100190627                  :li_GICIDNo,
398200190627                  "RED",
398300190627                  "Y",
398400190719                  :ld_TrnTradeDate,
398500190627                  " "
398600190627                  )
398700190627           END-EXEC.
398800190627           MOVE SQLSTATE TO lc_sqlStates.
398900190627           EVALUATE TRUE
399000190627               WHEN lncc_sqlSuccessful
399100190627                    CONTINUE
399200190627               WHEN OTHER
399300190627                    SET lncc_Err70 TO TRUE
399400190627                    MOVE lncc_ErrInsMFAGITRP
399500190627                      TO lc_sqlErrShortDESCR
399600190627                    PERFORM SQLFailProcess
399700190627           END-EVALUATE.
399800190627
399900190627      *---------------------------------
400000190627       CreateTransGICRedemption.
400100190627      *---------------------------------
400200190627            EXEC SQL
400300190627            INSERT INTO MFATRGIDP(
400400190627                Placement_Date, Trans_No,
400500190627                Certificate_Id_No_Redeemed,
400600190627                Penalty_Rate_Schedule_Code, Penalty_Rate,
400700190627                Replacement_Rate, Replacement_Amount,
400800190627                Penalty_Amount,
400900190627                Calculated_Penalty_Amount,
401000190627                Calculated_Replacement_Amount,
401100190627                Waive_Flag, Waive_Reason_Code,
401200190627                Redemption_Order
401300190627                ) VALUES (
401400190627                   :ld_AsAtDate,
401500190627                   :li_TransNum,
401600190627                   :li_GICIDNo,
401700190627                   :lncc_Space,
401800190627                   :lncc_Zero,
401900190627                   :lncc_Zero,
402000190627                   :lncc_Zero,
402100190627                   :lncc_Zero,
402200190627                   :lncc_Zero,
402300190627                   :lncc_Zero,
402400200303      *RFS1081196 - Begin
402500200303      *            :lncc_Space,
402600200729186053*            :lncc_N,
402700200729186053             :lc_DWaiveGIFeesFlag,
402800200303      *RFS1081196 - End
402900200729186053*            :lncc_Space,
403000200729186053             :lc_DWaiveGIFeesReasonCode,
403100190627                   :lncc_Zero
403200190627                 )
403300190627                END-EXEC.
403400190627           MOVE SQLSTATE TO lc_sqlStates.
403500190627           EVALUATE TRUE
403600190627               WHEN lncc_sqlSuccessful
403700190627                    CONTINUE
403800190627               WHEN OTHER
403900190627                    SET lncc_Err71 TO TRUE
404000190627                    MOVE lncc_ErrInsMFATRGIDP
404100190627                      TO lc_sqlErrShortDESCR
404200190627                    PERFORM SQLFailProcess
404300190627           END-EVALUATE.
404400190627
404500190627      *---------------------------------
404600190627       InsertTransInWorkFile.
404700190627      *---------------------------------
404800190627           EXEC SQL
404900190627             INSERT INTO QTEMP/WRKWHTRANS
405000190627             (SELECT * FROM MFATRNP
405100190627              WHERE PLACEMENT_DATE = :ld_WHPlaceDate
405200190627                AND TRANS_NO = :li_WHTransNo)
405300190627           END-EXEC.
405400190627           MOVE SQLSTATE TO lc_sqlStates.
405500190627           EVALUATE TRUE
405600190627               WHEN lncc_sqlSuccessful
405700190627                    CONTINUE
405800190627               WHEN OTHER
405900190627                    SET lncc_Err63 TO TRUE
406000190627                    MOVE lncc_ErrInsTransWF
406100190627                      TO lc_sqlErrShortDESCR
406200190627                    PERFORM SQLFailProcess
406300190627           END-EVALUATE.
406400190627
406500190627      *---------------------------------
406600190627       PostTrans.
406700190627      *---------------------------------
406800190826      *RFS1018257 START
406900190826           INITIALIZE Ws-Local-Data-Area.
407000190826           DISPLAY Ws-Local-Data-Area UPON Ws-Local.
407100190826      *RFS1018257 END
407200190627           CALL "QCMDEXC" USING OVRDBF-MFATRNLD-COMMAND
407300190627                                QCMDEXC-LENGTH.
407400190627           CALL "QCMDEXC" USING CHGDTAARA-LDA-COMMAND
407500190627                                QCMDEXC-LENGTH.
407600190708           MOVE ld_AsAtDate TO ld_TRNPSTDate.
407700190708           CALL "TRNPST" USING ld_TRNPSTDate.
407800190627           CANCEL "TRNPST".
407900190912      *RFS1018639 START
408000190911      *    CALL "QCMDEXC" USING DLTOVR-MFATRNLD-COMMAND
408100190911      *                         QCMDEXC-LENGTH.
408200190912      * Delete MFATRNLD override using QCAPCMD to avoid command error
408300190911           CALL QCAPCMD USING DLTOVR-MFATRNLD-COMMAND,
408400190911                           COMMAND-LENGTH,
408500190911                           QCA-PCMD-CPOP0100,
408600190911                           OPTIONS-SIZE, FORMAT-NAME, RECEIVER,
408700190911                           RECEIVER-LENGTH,
408800190911                           RECEIVER-LENGTH, QUS-EC.
408900190912      *RFS1018639 END
409000190627           CALL "QCMDEXC" USING CLRPFM-WorkFile-COMMAND
409100190627                                QCMDEXC-LENGTH.
409200190912      *RFS1018639 START
409300190912      *    PERFORM GetTransDetails.
409400190912      *RFS1018639 END
409500190627
409600190627      *---------------------------------
409700190627       GetTransDetails.
409800190627      *---------------------------------
409900190726           INITIALIZE li_HierWDClosingBal.
410000190720           SET lb_HierTransRejNo TO TRUE.
410100190627           EXEC SQL
410200190627             SELECT
410300190627               TRADE_DATE, INVESTMENT_CODE, INDUSTRY_FUND_CODE,
410400190704               TRANS_TYPE_CODE,
410500190726               GROSS_AMT, NET_AMT, UNIT_AMT, UNIT_PRICE,
410600190726               CLOSING_UNIT_BAL
410700190627             INTO :ld_RP_TradeDate,
410800190627                  :lc_RP_InvCode  ,
410900190627                  :lc_RP_FundCode ,
411000190704                  :lc_RP_TransType,
411100190627                  :li_RP_Gross    ,
411200190627                  :li_RP_Net      ,
411300190627                  :li_RP_Units    ,
411400190726                  :li_RP_Price    ,
411500190726                  :li_HierWDClosingBal
411600190627             FROM MFATRNP
411700190627             WHERE PLACEMENT_DATE = :ld_RP_PlaceDate
411800190627               AND TRANS_NO = :li_RP_TransNo
411900190720               AND TRANS_STATUS_CODE IN (:lncc_HST, :lncc_HSC)
412000190627           END-EXEC.
412100190627           MOVE SQLSTATE TO lc_sqlStates.
412200190627           EVALUATE TRUE
412300190627               WHEN lncc_sqlSuccessful
412400190627                    CONTINUE
412500190720               WHEN lncc_sqlEnd
412600190720                    SET lb_HierTransRejYes TO TRUE
412700190627               WHEN OTHER
412800190627                    SET lncc_Err65 TO TRUE
412900190627                    MOVE lncc_ErrGetTransDetails
413000190627                      TO lc_sqlErrShortDESCR
413100190627                    PERFORM SQLFailProcess
413200190627           END-EVALUATE.
413300190709           COMPUTE li_RemainingGross = li_RemainingGross - li_RP_Gross.
413400190627           IF lc_GrossOrNet = lncc_N
413500190627              IF li_RP_Net = 0
413600190627                COMPUTE li_RemainingNet = li_RemainingNet - li_RP_Gross
413700190627              ELSE
413800190627                COMPUTE li_RemainingNet = li_RemainingNet - li_RP_Net
413900190627              END-IF
414000190627           END-IF.
414100190703           INITIALIZE li_RP_OutstandingBal.
414200190720           IF lb_HierTransRejYes
414300190826      *RFS1018257 START
414400190827              MOVE ld_PlaceDate TO lc_PlaceDate
414500190827              MOVE li_TransNo   TO lc_TransNo
414600190826      *RFS1018257 END
414700190917184781*       INITIALIZE li_RemainingGross, li_RemainingNet
414800190720              SET lncc_Err80 TO TRUE
414900190720              STRING
415000190720                "Withdrawal hierarchy on " DELIMITED BY SIZE
415100190720                "Placement date: "         DELIMITED BY SIZE
415200190720                 lc_PlaceDate              DELIMITED BY "  "
415300190720                ", Trans no: "             DELIMITED BY SIZE
415400190720                 lc_TransNo                DELIMITED BY "  "
415500190720                " failed"                  DELIMITED BY SIZE
415600190720                INTO lc_sqlErrShortDESCR
415700190720              PERFORM Dsp-Error
415800190720           END-IF.
415900190719
416000190719      *---------------------------------
416100190726       UpdateCalcValues.
416200190719      *---------------------------------
416300190719           IF ltb_HierAssetCrit(li_CounterHier) = lncc_CM
416400190726            PERFORM GetCurrentGICFund
416500190726            COMPUTE ltb_MarketValue(li_CounterGICInv) =
416600190726                  ltb_MarketValue(li_CounterGICInv) - li_RP_Gross
416700191025      *RFS184886 START
416800191025            COMPUTE ltb_OrigMarketValue(li_CounterGICInv) =
416900191025                  ltb_OrigMarketValue(li_CounterGICInv) - li_RP_Gross
417000191025      *     MOVE ltb_MarketValue(li_CounterGICInv) TO li_RP_RemainingMV
417100191025            COMPUTE li_RP_RemainingMV =
417200191025                    ltb_OrigMarketValue(li_CounterGICInv)
417300191025      *RFS184886 END
417400190724            IF li_RP_RemainingMV > 0
417500190724               PERFORM GetCurrUnitBal
417600190724               IF li_CurrUnitBal = 0
417700190724                  INITIALIZE ltb_MarketValue(li_CounterGICInv),
417800190724                             li_RP_RemainingMV
417900191025184886                       ltb_OrigMarketValue(li_CounterGICInv)
418000190724               END-IF
418100190724            END-IF
418200190719           ELSE
418300190725            IF ltb_HierAssetCrit(li_CounterHier) = lncc_HM
418400190725              COMPUTE ltb_MaturedUnitsMV(li_CounterAccInv) =
418500190725                ltb_MaturedUnitsMV(li_CounterAccInv) - li_RP_Gross
418600190725            END-IF
418700190725            IF ltb_HierAssetCrit(li_CounterHier) = lncc_HF
418800190725              COMPUTE ltb_FreeUnitsMV(li_CounterAccInv) =
418900190725                ltb_FreeUnitsMV(li_CounterAccInv) - li_RP_Gross
419000190725            END-IF
419100190719            COMPUTE ltb_MarketValue(li_CounterAccInv) =
419200190719                    ltb_MarketValue(li_CounterAccInv) - li_RP_Gross
419300191025      *RFS184886 START
419400191025            COMPUTE ltb_OrigMarketValue(li_CounterAccInv) =
419500191025                    ltb_OrigMarketValue(li_CounterAccInv) - li_RP_Gross
419600191025      *     MOVE ltb_MarketValue(li_CounterAccInv) TO li_RP_RemainingMV
419700191025            COMPUTE li_RP_RemainingMV =
419800191025                    ltb_OrigMarketValue(li_CounterAccInv)
419900191025      *RFS184886 END
420000190724            IF li_RP_RemainingMV > 0 AND
420100190724               ltb_ProdTypeRule(li_CounterAccInv) = lncc_7
420200190724               PERFORM GetCurrUnitBal
420300190724               IF li_CurrUnitBal = 0
420400190724                  INITIALIZE ltb_MarketValue(li_CounterAccInv),
420500190724                             li_RP_RemainingMV
420600191025184886                       ltb_OrigMarketValue(li_CounterAccInv)
420700190724               END-IF
420800190724            END-IF
420900190719           END-IF.
421000190719
421100190719      * ---------------------------------
421200190726       GetCurrentGICFund.
421300190719      * ---------------------------------
421400190719           SET li_CounterGICInv TO 1.
421500190719           SEARCH ltb_AccInvRecs VARYING li_CounterGICInv
421600190719           WHEN ltb_InvCode(li_CounterGICInv) =
421700190719                ltb_GICInvCode(li_CounterGIC)
421800190726                CONTINUE
421900190719           END-SEARCH.
422000190724
422100190724      *---------------------------------
422200190724       GetCurrUnitBal.
422300190724      *---------------------------------
422400190724           INITIALIZE li_CurrUnitBal.
422500190724           EXEC SQL
422600190724             SELECT CURR_UNIT_BAL
422700190724             INTO :li_CurrUnitBal
422800190724             FROM MFAACCIVP
422900190724             WHERE ACCOUNT_NO = :li_AccountNo
423000190724               AND INVESTMENT_CODE = :lc_RP_InvCode
423100190724           END-EXEC.
423200190724           MOVE SQLSTATE TO lc_sqlStates.
423300190724           EVALUATE TRUE
423400190724               WHEN lncc_sqlSuccessful
423500190724                    CONTINUE
423600190724               WHEN OTHER
423700190724                    SET lncc_Err81 TO TRUE
423800190724                    MOVE lncc_ErrGetCurrUnitBal
423900190724                      TO lc_sqlErrShortDESCR
424000190724                    PERFORM SQLFailProcess
424100190724           END-EVALUATE.
424200190719
424300190627      *---------------------------------
424400190627       PutReportRec.
424500190627      *---------------------------------
424600190713           IF li_RP_RemainingMV < 0
424700190713             INITIALIZE li_RP_RemainingMV
424800190726           END-IF.
424900190627           EXEC SQL
425000190627             INSERT INTO WRKWDHIER VALUES
425100190627             (:li_AccountNo        ,
425200190627              :ld_RP_PlaceDate     ,
425300190627              :li_RP_TransNo       ,
425400190627              :ld_RP_TradeDate     ,
425500190627              :lc_RP_InvCode       ,
425600190627              :lc_RP_FundCode      ,
425700190704              :lc_RP_TransType     ,
425800190627              :lc_TrnOriginCode    ,
425900190627              :li_RP_Gross         ,
426000190627              :li_RP_Net           ,
426100190627              :li_RP_Units         ,
426200190627              :li_RP_Price         ,
426300190627              :li_GrossAmt         ,
426400190703              :li_RP_OutstandingBal,
426500190627              :li_RP_RemainingMV   ,
426600190627              :lc_RP_Reason)
426700190726           END-EXEC.
426800190726           MOVE SQLSTATE TO lc_sqlStates.
426900190627           EVALUATE TRUE
427000190627               WHEN lncc_sqlSuccessful
427100190627                    CONTINUE
427200190627               WHEN OTHER
427300190627                    SET lncc_Err68 TO TRUE
427400190627                    MOVE lncc_ErrInsReportRec
427500190627                      TO lc_sqlErrShortDESCR
427600190627                    PERFORM SQLFailProcess
427700190726           END-EVALUATE.
427800190627           INITIALIZE lc_ReportFields.
427900190627
428000190627      *---------------------------------
428100190627       ReportOutstandingBal.
428200190627      *---------------------------------
428300190704           INITIALIZE ld_RP_PlaceDate, li_RP_TransNo, li_RP_Gross,
428400190704             li_NetAmt, li_RP_Units, li_RP_Price, li_RP_RemainingMV.
428500190703           MOVE ld_TrnTradeDate TO ld_RP_TradeDate.
428600190703           MOVE lc_OInvCode TO lc_RP_InvCode.
428700190703           MOVE lc_OFundCode TO lc_RP_FundCode.
428800190704           MOVE lc_OTrnTypeCode TO lc_RP_TransType.
428900190715           IF lc_GrossOrNet = lncc_G
429000190715              MOVE li_RemainingGross TO li_RP_OutstandingBal
429100190715           ELSE
429200190715              MOVE li_RemainingNet TO li_RP_OutstandingBal
429300190715           END-IF.
429400190703           MOVE "Outstanding balance unpaid" TO lc_RP_Reason.
429500190703           PERFORM PutReportRec.
429600190627
429700190627      *---------------------------------
429800190627       UpdateBatchHeader.
429900190627      *---------------------------------
430000190627           EXEC SQL
430100190627             UPDATE MFABCHHDP
430200190627             SET BATCH_DOLLAR_AMT         = :li_BatchAmt
430300190627                ,TRANS_DOLLAR_AMT         = :li_TransAmt
430400190627                ,BATCH_UNIT_AMT           = :li_BatchUnit
430500190627                ,TRANS_UNIT_AMT           = :li_TransUnit
430600190627                ,MATCH_TOTAL_TRANSACTIONS = :li_BatchTransCnt
430700190627             WHERE BATCH_DATE = :ld_OBatchDate
430800190627               AND BATCH_CODE = :lc_BatchCode
430900190627           END-EXEC.
431000190627           MOVE SQLSTATE TO lc_sqlStates.
431100190627           EVALUATE TRUE
431200190627               WHEN lncc_sqlSuccessful
431300190627                    CONTINUE
431400190627               WHEN OTHER
431500190627                    SET lncc_Err36 TO TRUE
431600190627                    MOVE lncc_ErrUpdBatchInfo
431700190627                      TO lc_sqlErrShortDESCR
431800190627                    PERFORM SQLFailProcess
431900190627           END-EVALUATE.
432000190627
432100190627      *---------------------------------
432200190627       UpdateBatchTotal.
432300190627      *---------------------------------
432400190627           COMPUTE li_BatchTransCnt = li_BatchTransCnt + 1.
432500190627           COMPUTE li_BatchAmt      = li_BatchAmt +
432600190627                                      li_HierInvGross * -1.
432700190627           COMPUTE li_TransAmt      = li_TransAmt +
432800190627                                      li_HierInvGross * -1.
432900190627
433000190627      *---------------------------------
433100190627       UpdateTransNum.
433200190627      *---------------------------------
433300190627           MOVE lncc_STRNumType TO Pass-CTLP-Control-Code.
433400190627           MOVE li_TransCnt     TO Pass-CTLP-Add-NUMBER.
433500190627           SET PASS-CTLP-ACTION-GETUPD TO TRUE.
433600190627
433700190627           CALL "FXCTLP" USING Pass-CTLP-Control-Code
433800190627                               Pass-CTLP-NEXT-NUMBER
433900190627                               Pass-CTLP-Add-NUMBER
434000190627                               Pass-CTLP-Action-Code
434100190627                               Retn-CTLP-NEXT-NUMBER
434200190627                               Retn-CTLP-Code.
434300190627
434400190627           IF NOT RETN-CTLP-CODE-OK
434500190627              SET lncc_Err30 TO TRUE
434600190627              MOVE lncc_ErrUpdTransNo
434700190627                TO lc_sqlErrShortDESCR
434800190627              PERFORM SQLFailProcess
434900190627           END-IF.
435000190627
435100190627      * ---------------------------------
435200190627       Calculator.
435300190627      * ---------------------------------
435400210513      *RFS1113861 Starts
435500210524           IF lc_OTrnTypeCode   NOT = lncc_FEE AND
435600210524              lc_TaxSplitOption NOT = lncc_Space
435700210518              PERFORM InsertMFATRNATP
435800210518           END-IF.
435900210513      *RFS1113861 Ends
436000190627           MOVE lncc_Y TO Pass-CDSC-Calculator.
436100190719           MOVE ld_AsAtDate TO ld_TRNPSTDate.
436200190627           INITIALIZE Pass-Assignment-Certificate
436300190826      *RFS1018257 START
436400190826                      PASS-DQ-INDICATOR
436500190826                      PASS-DQ-LIB
436600190826      *RFS1018257 END
436700190627                      Pass-Seqno.
436800190627           MOVE 0 TO Pass-CDSC-Units.
436900210326      *RFS180708 Starts
437000210326           MOVE lc_TreatTxnAsAWD TO PASS-TREAT-AWD OF
437100210326                                    WS-LOCAL-DATA-AREA.
437200210326           MOVE lc_WaiveDSC      TO PASS-WAIVE-DSC OF
437300210326                                    WS-LOCAL-DATA-AREA.
437400210326           MOVE lc_WaiveErf      TO PASS-WAIVE-ERF OF
437500210326                                    WS-LOCAL-DATA-AREA.
437600210326      *RFS180708 Ends
437700210501      *RFS1113861 Starts
437800210501           MOVE lc_ContRedCode   TO PASS-REDEM-CODE OF
437900210501                                    WS-LOCAL-DATA-AREA.
438000210501      *RFS1113861 Ends
438100190627           SET Pass-Rejection-Code-OK TO TRUE.
438200190627           DISPLAY Ws-Local-Data-Area UPON Ws-Local.
438300190627           PERFORM Clean-Calc-Files.
438400190708           CALL "TRNPST" USING ld_TRNPSTDate.
438500190627           CANCEL "TRNPST".
438600190627           ACCEPT Ws-Local-Data-Area FROM Ws-Local.
438700190627           PERFORM Delete-Calc-Files.
438800210527      *RFS1113861 Starts
438900210527           IF lc_OTrnTypeCode   NOT = lncc_FEE AND
439000210527              lc_TaxSplitOption NOT = lncc_Space
439100210527              PERFORM DeleteMFATRNATP
439200210527           END-IF.
439300210527      *RFS1113861 Ends
439400190627
439500190627      * ---------------------------------
439600190627       Init-Calc-Files.
439700190627      * ---------------------------------
439800190627           MOVE lncc_InitMode TO lc_SETCALENV2Action.
439900190627           PERFORM Call-SETCALENV2.
440000190627
440100190627      * ---------------------------------
440200190627       Clean-Calc-Files.
440300190627      * ---------------------------------
440400190627           MOVE lncc_CleanMode TO lc_SETCALENV2Action.
440500190627           PERFORM Call-SETCALENV2.
440600210514      *RFS1113861 Starts
440700210514           MOVE lncc_T TO lc_SETCALENV2Action.
440800210514           PERFORM Call-SETCALENV2.
440900210514      *RFS1113861 Ends
441000190627
441100190627      * ---------------------------------
441200190627       Delete-Calc-Files.
441300190627      * ---------------------------------
441400190627           MOVE lncc_DeleteMode TO lc_SETCALENV2Action.
441500190627           PERFORM Call-SETCALENV2.
441600190627
441700190627      * ---------------------------------
441800190627       Call-SETCALENV2.
441900190627      * ---------------------------------
442000190627           MOVE SPACE TO lc_ReturnCode.
442100190627           MOVE ZEROS TO ld_TradeDate
442200190627           CALL   "SETCALENV2" USING lc_SETCALENV2Action,
442300190627                                     ld_TradeDate, lc_ReturnCode.
442400190627           CANCEL "SETCALENV2".
442500190627
442600191023      *RFS184886 START - ASSIGNMENT VALIDATIONS
442700191023      *---------------------------------
442800191023       CheckEntireAccAssign.
442900191023      *---------------------------------
443000191023           INITIALIZE lc_EntireAccAssign.
443100191023           EXEC SQL
443200191023             SELECT ENTIRE_ACCOUNT
443300191023             INTO :lc_EntireAccAssign
443400191023             FROM MFAACCASP
443500191023             WHERE ENTIRE_ACCOUNT    = :lncc_Y
443600191023               AND ASSIGNMENT_STATUS = :lncc_A
443700191023               AND ACCOUNT_NO        = :li_AccountNo
443800191023           END-EXEC.
443900191023           MOVE SQLSTATE TO lc_sqlStates.
444000191023           EVALUATE TRUE
444100191023               WHEN lncc_sqlSuccessful OR lncc_sqlEnd
444200191023                    CONTINUE
444300191023               WHEN OTHER
444400191023                    SET lncc_Err89 TO TRUE
444500191023                    MOVE lncc_ErrGETEntireAccAssign
444600191023                      TO lc_sqlErrShortDESCR
444700191023                    PERFORM SQLFailProcess
444800191023           END-EVALUATE.
444900191023
445000191023      *---------------------------------
445100191023       GetGICDIIFundAssignedValue.
445200191023      *---------------------------------
445300191023           INITIALIZE li_SumCDIC, li_SumNonCDIC, li_AssignedValue.
445400191023
445500191023      *GETTING CDIC ASSIGNED VALUE
445600191023           EXEC SQL
445700191023             SELECT COALESCE(SUM(UNITS),0)
445800191023             INTO :li_SumCDIC
445900191023             FROM MFAACCASP
446000191023             WHERE ACCOUNT_NO = :li_AccountNo
446100191023               AND INVESTMENT_CODE = :lc_InvCode
446200191023               AND ASSIGNMENT_STATUS = :lncc_A
446300191023               AND ASSIGNMENT_TYPE = :lncc_W
446400191023           END-EXEC.
446500191023           MOVE SQLSTATE TO lc_sqlStates.
446600191023           EVALUATE TRUE
446700191023               WHEN lncc_sqlSuccessful OR lncc_sqlEnd
446800191023                    CONTINUE
446900191023               WHEN OTHER
447000191023                    SET lncc_Err90 TO TRUE
447100191023                    MOVE lncc_ErrGETCDICAssign
447200191023                      TO lc_sqlErrShortDESCR
447300191023                    PERFORM SQLFailProcess
447400191023           END-EVALUATE.
447500191023
447600191023      *GETTING NON CDIC ASSIGNED VALUE
447700191023           EXEC SQL
447800191023             SELECT COALESCE(SUM(UNITS),0)
447900191023             INTO :li_SumNonCDIC
448000191023             FROM MFAACCASP
448100191023             WHERE ACCOUNT_NO = :li_AccountNo
448200191023               AND INVESTMENT_CODE = :lc_InvCode
448300191023               AND ASSIGNMENT_STATUS = :lncc_A
448400191023               AND ASSIGNMENT_TYPE <> :lncc_W
448500191023           END-EXEC.
448600191023           MOVE SQLSTATE TO lc_sqlStates.
448700191023           EVALUATE TRUE
448800191023               WHEN lncc_sqlSuccessful OR lncc_sqlEnd
448900191023                    CONTINUE
449000191023               WHEN OTHER
449100191023                    SET lncc_Err91 TO TRUE
449200191023                    MOVE lncc_ErrGETNonCDICAssign
449300191023                      TO lc_sqlErrShortDESCR
449400191023                    PERFORM SQLFailProcess
449500191023           END-EVALUATE.
449600191023
449700191023           IF li_SumCDIC > li_SumNonCDIC
449800191023              COMPUTE li_AssignedValue = li_SumCDIC
449900191023           ELSE
450000191023              COMPUTE li_AssignedValue = li_SumNonCDIC
450100191023           END-IF.
450200191023
450300191023      *---------------------------------
450400191023       GetGICAssignedValue.
450500191023      *---------------------------------
450600191023           INITIALIZE li_SumCDIC, li_SumNonCDIC, li_AssignedValue.
450700191023
450800191023      *GETTING CDIC GIC ASSIGNED VALUE
450900191023           EXEC SQL
451000191023             SELECT COALESCE(SUM(UNIT_AMT),0)
451100191023             INTO :li_SumCDIC
451200191023             FROM MFAGIAAP GIAAP
451300191023             INNER JOIN MFAACCASP CCASP ON
451400191023               GIAAP.ACCOUNT_NO = CCASP.ACCOUNT_NO AND
451500191023               GIAAP.ASSIGN_SEQ_NO = CCASP.ASSIGN_SEQ_NO
451600191023             WHERE GIAAP.ACCOUNT_NO = :li_AccountNo
451700191023               AND CCASP.ASSIGNMENT_TYPE = :lncc_W
451800191023               AND GIAAP.CERTIFICATE_ID_NO = :li_GICIDNo
451900191023               AND CCASP.ASSIGNMENT_STATUS = :lncc_A
452000191023             GROUP BY GIAAP.ACCOUNT_NO
452100191023           END-EXEC.
452200191023           MOVE SQLSTATE TO lc_sqlStates.
452300191023           EVALUATE TRUE
452400191023               WHEN lncc_sqlSuccessful OR lncc_sqlEnd
452500191023                    CONTINUE
452600191023               WHEN OTHER
452700191023                    SET lncc_Err92 TO TRUE
452800191023                    MOVE lncc_ErrGETCDICAssign
452900191023                      TO lc_sqlErrShortDESCR
453000191023                    PERFORM SQLFailProcess
453100191023           END-EVALUATE.
453200191023
453300191023      *GETTING NON CDIC GIC ASSIGNED VALUE
453400191023           EXEC SQL
453500191023             SELECT COALESCE(SUM(UNIT_AMT),0)
453600191023             INTO :li_SumNonCDIC
453700191023             FROM MFAGIAAP GIAAP
453800191023             INNER JOIN MFAACCASP CCASP ON
453900191023               GIAAP.ACCOUNT_NO = CCASP.ACCOUNT_NO AND
454000191023               GIAAP.ASSIGN_SEQ_NO = CCASP.ASSIGN_SEQ_NO
454100191023             WHERE GIAAP.ACCOUNT_NO = :li_AccountNo
454200191023               AND CCASP.ASSIGNMENT_TYPE <> :lncc_W
454300191023               AND GIAAP.CERTIFICATE_ID_NO = :li_GICIDNo
454400191023               AND CCASP.ASSIGNMENT_STATUS = :lncc_A
454500191023             GROUP BY GIAAP.ACCOUNT_NO
454600191023           END-EXEC.
454700191023           MOVE SQLSTATE TO lc_sqlStates.
454800191023           EVALUATE TRUE
454900191023               WHEN lncc_sqlSuccessful OR lncc_sqlEnd
455000191023                    CONTINUE
455100191023               WHEN OTHER
455200191023                    SET lncc_Err93 TO TRUE
455300191023                    MOVE lncc_ErrGETNonCDICAssign
455400191023                      TO lc_sqlErrShortDESCR
455500191023                    PERFORM SQLFailProcess
455600191023           END-EVALUATE.
455700191023
455800191023           IF li_SumCDIC > li_SumNonCDIC
455900191023              COMPUTE li_AssignedValue = li_SumCDIC
456000191023           ELSE
456100191023              COMPUTE li_AssignedValue = li_SumNonCDIC
456200191023           END-IF.
456300191023
456400191023      *---------------------------------
456500191023       GetSEGFundAssignedValue.
456600191023      *---------------------------------
456700191023           INITIALIZE li_AssignedUnitValue, li_AssignedAmt,
456800191023                      li_AssignedValue.
456900191023
457000191023      *ASSIGNED UNITS TO VALUE CONVERSION
457100191023           EXEC SQL
457200191023             SELECT
457300191023               (DECIMAL(
457400191023                 ROUND(
457500191024                  SUM(ACCASP.UNITS
457600191023                  *
457700191023                  COALESCE(
457800191023                   CASE WHEN InvuppY.Unit_Price > 0
457900191023                    THEN InvuppY.Unit_Price
458000191023                    ELSE InvuppS.Unit_Price
458100191023                   END, 0)
458200191023                  /
458300191023                  COALESCE(Exrhmp.Exchange_Rate,1))
458400191023                 , 2)
458500191023                ,13,2)
458600191023               )
458700191023               INTO :li_AssignedUnitValue:lb_Indicators
458800191023               FROM
458900191024                 MFAACCASP ACCASP
459000191023                 INNER JOIN Mfainvp invp ON
459100191024                 ACCASP.Investment_Code = invp.Investment_Code
459200191023                 LEFT OUTER JOIN Mfainvupp InvuppY ON
459300191023                 InvuppY.Trade_Date = :ld_AsAtDate AND
459400191024                 ACCASP.Investment_Code = InvuppY.Investment_Code AND
459500191023                 InvuppY.Distribution_Flag = :lncc_Y
459600191023                 LEFT OUTER JOIN Mfainvupp InvuppS ON
459700191023                 InvuppS.Trade_Date = :ld_AsAtDate AND
459800191024                 ACCASP.Investment_Code = InvuppS.Investment_Code AND
459900191023                 InvuppS.Distribution_Flag = :lncc_Space
460000191023                 LEFT OUTER JOIN Mfaexrhmp Exrhmp ON
460100191023                 Exrhmp.Currency = Invp.Currency AND
460200191023                 Exrhmp.Trade_Date = :ld_AsAtDate AND
460300191023                 Exrhmp.Exchange_Rate_Type = :lc_ExchangeRateType
460400191023               WHERE
460500191024                 ACCASP.Account_No = :li_AccountNo AND
460600191024                 ACCASP.Investment_code = :lc_InvCode AND
460700191024                 ACCASP.UNITS > 0 AND
460800191024                 ACCASP.ASSIGNMENT_STATUS = :lncc_A
460900191023           END-EXEC.
461000191023           MOVE SQLSTATE TO lc_sqlStates.
461100191023           EVALUATE TRUE
461200191023               WHEN lncc_sqlSuccessful
461300191023                    CONTINUE
461400191023               WHEN OTHER
461500191023                    SET lncc_Err94 TO TRUE
461600191023                    MOVE lncc_ErrGetAssignUnitValue
461700191023                      TO lc_sqlErrShortDESCR
461800191023                    PERFORM SQLFailProcess
461900191023           END-EVALUATE.
462000191023
462100191023      *GETTING ASSIGNED AMOUNT
462200191023           EXEC SQL
462300191023             SELECT COALESCE(SUM(ASSIGN_AMT),0)
462400191023             INTO :li_AssignedAmt
462500191023             FROM MFAACCASP
462600191023             WHERE ACCOUNT_NO = :li_AccountNo
462700191023               AND INVESTMENT_CODE = :lc_InvCode
462800191023               AND ASSIGNMENT_STATUS = :lncc_A
462900191023               AND ASSIGN_AMT > 0
463000191023           END-EXEC.
463100191023           MOVE SQLSTATE TO lc_sqlStates.
463200191023           EVALUATE TRUE
463300191023               WHEN lncc_sqlSuccessful OR lncc_sqlEnd
463400191023                    CONTINUE
463500191023               WHEN OTHER
463600191023                    SET lncc_Err95 TO TRUE
463700191023                    MOVE lncc_ErrGETAssignAmt
463800191023                      TO lc_sqlErrShortDESCR
463900191023                    PERFORM SQLFailProcess
464000191023           END-EVALUATE.
464100191023
464200191023           COMPUTE li_AssignedValue =
464300191023                   li_AssignedUnitValue + li_AssignedAmt.
464400191023      *RFS184886 END
464500191023
464600190627      *---------------------------------
464700190627       GetBatchInfo.
464800190627      *---------------------------------
464900190627           INITIALIZE lr_BatchRec.
465000190627           EXEC SQL
465100190627             SELECT
465200190627               BATCH_DOLLAR_AMT,
465300190627               TRANS_DOLLAR_AMT,
465400190627               BATCH_UNIT_AMT,
465500190627               TRANS_UNIT_AMT,
465600190627               MATCH_TOTAL_TRANSACTIONS
465700190627             INTO :lr_BatchRec:ltb_IndicatorsB
465800190627             FROM MFABCHHDP
465900190627             WHERE BATCH_DATE = :ld_OBatchDate
466000190627               AND BATCH_CODE = :lc_BatchCode
466100190627           END-EXEC.
466200190627           MOVE SQLSTATE TO lc_sqlStates.
466300190627           EVALUATE TRUE
466400190627               WHEN lncc_sqlSuccessful
466500190627                    CONTINUE
466600190627               WHEN lncc_sqlEnd
466700190627                    PERFORM GetBatchNum
466800190627               WHEN OTHER
466900190627                    SET lncc_Err25 TO TRUE
467000190627                    MOVE lncc_ErrGetBatchInfo
467100190627                      TO lc_sqlErrShortDESCR
467200190627                    PERFORM SQLFailProcess
467300190627           END-EVALUATE.
467400190627
467500190627      *---------------------------------
467600190627       GetBatchNum.
467700190627      *---------------------------------
467800190627           INITIALIZE lc_BatchNum
467900190627                      lc_BatchCode
468000190627                      Pass-CTLP-Control-Code
468100190627                      Pass-CTLP-NEXT-NUMBER
468200190627                      Pass-CTLP-Add-NUMBER
468300190627                      Pass-CTLP-Action-Code
468400190627                      Retn-CTLP-Code.
468500190627
468600190627           MOVE lncc_SBTNumType TO Pass-CTLP-Control-Code.
468700190627           SET PASS-CTLP-ADD-1 TO TRUE.
468800190627           SET PASS-CTLP-ACTION-GETUPD TO TRUE.
468900190627
469000190627           CALL "FXCTLP" USING Pass-CTLP-Control-Code
469100190627                               Pass-CTLP-NEXT-NUMBER
469200190627                               Pass-CTLP-Add-NUMBER
469300190627                               Pass-CTLP-Action-Code
469400190627                               Retn-CTLP-NEXT-NUMBER
469500190627                               Retn-CTLP-Code.
469600190627
469700190627           IF RETN-CTLP-CODE-OK
469800190627              MOVE Retn-CTLP-NEXT-NUMBER TO lc_BatchNum
469900190627              MOVE lc_BatchNum(6:4) TO lc_BatchCode
470000190627           ELSE
470100190627              SET lncc_Err26 TO TRUE
470200190627              MOVE lncc_ErrGetBatchNo
470300190627                TO lc_sqlErrShortDESCR
470400190627              PERFORM SQLFailProcess
470500190627           END-IF.
470600190627
470700190627
470800190627      *---------------------------------
470900190627       GetTransNum.
471000190627      *---------------------------------
471100190627           INITIALIZE li_TransNum.
471200190627           MOVE lncc_STRNumType TO Pass-CTLP-Control-Code.
471201210830      *RFS1118574 Start
471202210830      *    SET PASS-CTLP-ADD-0 TO TRUE.
471203210830      *    SET PASS-CTLP-ACTION-GETDTA TO TRUE.
471204210830           SET PASS-CTLP-ADD-1 TO TRUE.
471205210830           SET PASS-CTLP-ACTION-GETUPD TO TRUE.
471206210830      *RFS1118574 End
471600190627           CALL "FXCTLP" USING Pass-CTLP-Control-Code
471700190627                               Pass-CTLP-NEXT-NUMBER
471800190627                               Pass-CTLP-Add-NUMBER
471900190627                               Pass-CTLP-Action-Code
472000190627                               Retn-CTLP-NEXT-NUMBER
472100190627                               Retn-CTLP-Code.
472200190627
472300190627           IF RETN-CTLP-CODE-OK
472400190627              MOVE Retn-CTLP-NEXT-NUMBER TO li_TransNum
472500190627           ELSE
472600190627              SET lncc_Err27 TO TRUE
472700190627              MOVE lncc_ErrGetTransNo
472800190627                TO lc_sqlErrShortDESCR
472900190627              PERFORM SQLFailProcess
473000190627           END-IF.
473100190627
473200190627      *---------------------------------
473300190627       GetTransProcSeqNo.
473400190627      *---------------------------------
473500190627           INITIALIZE li_SELTransProcSeqNo.
473600190627           EXEC SQL
473700190627              SELECT COALESCE(TRANS_PROC_SEQ, 0)
473800190627               INTO :li_SELTransProcSeqNo
473900190627               FROM MFATRNTYP
474000190627               WHERE TRANS_TYPE_CODE = :lncc_SEL
474100190627           END-EXEC.
474200190627           MOVE SQLSTATE TO lc_sqlStates.
474300190627           EVALUATE TRUE
474400190627               WHEN lncc_sqlSuccessful
474500190627                    CONTINUE
474600190627               WHEN OTHER
474700190627                    SET lncc_Err28 TO TRUE
474800190627                    MOVE lncc_ErrGetSelProcSeq
474900190627                      TO lc_sqlErrShortDESCR
475000190627                    PERFORM SQLFailProcess
475100190627           END-EVALUATE.
475200190627           INITIALIZE li_FEETransProcSeqNo.
475300190627           EXEC SQL
475400190627              SELECT COALESCE(TRANS_PROC_SEQ, 0)
475500190627               INTO :li_FEETransProcSeqNo
475600190627               FROM MFATRNTYP
475700190627               WHERE TRANS_TYPE_CODE = :lncc_FEE
475800190627           END-EXEC.
475900190627           MOVE SQLSTATE TO lc_sqlStates.
476000190627           EVALUATE TRUE
476100190627               WHEN lncc_sqlSuccessful
476200190627                    CONTINUE
476300190627               WHEN OTHER
476400190627                    SET lncc_Err37 TO TRUE
476500190627                    MOVE lncc_ErrGetFEEProcSeq
476600190627                      TO lc_sqlErrShortDESCR
476700190627                    PERFORM SQLFailProcess
476800190627           END-EVALUATE.
476900190627           INITIALIZE li_SWOTransProcSeqNo.
477000190627           EXEC SQL
477100190627              SELECT COALESCE(TRANS_PROC_SEQ, 0)
477200190627               INTO :li_SWOTransProcSeqNo
477300190627               FROM MFATRNTYP
477400190627               WHERE TRANS_TYPE_CODE = :lncc_SWO
477500190627           END-EXEC.
477600190627           MOVE SQLSTATE TO lc_sqlStates.
477700190627           EVALUATE TRUE
477800190627               WHEN lncc_sqlSuccessful
477900190627                    CONTINUE
478000190627               WHEN OTHER
478100190627                    SET lncc_Err50 TO TRUE
478200190627                    MOVE lncc_ErrGetSWOProcSeq
478300190627                      TO lc_sqlErrShortDESCR
478400190627                    PERFORM SQLFailProcess
478500190627           END-EVALUATE.
478600190627           INITIALIZE li_SWITransProcSeqNo.
478700190627           EXEC SQL
478800190627              SELECT COALESCE(TRANS_PROC_SEQ, 0)
478900190627               INTO :li_SWITransProcSeqNo
479000190627               FROM MFATRNTYP
479100190627               WHERE TRANS_TYPE_CODE = :lncc_SWI
479200190627           END-EXEC.
479300190627           MOVE SQLSTATE TO lc_sqlStates.
479400190627           EVALUATE TRUE
479500190627               WHEN lncc_sqlSuccessful
479600190627                    CONTINUE
479700190627               WHEN OTHER
479800190627                    SET lncc_Err51 TO TRUE
479900190627                    MOVE lncc_ErrGetSWIProcSeq
480000190627                      TO lc_sqlErrShortDESCR
480100190627                    PERFORM SQLFailProcess
480200190627           END-EVALUATE.
480300190627           INITIALIZE li_TROTransProcSeqNo.
480400190627           EXEC SQL
480500190627              SELECT COALESCE(TRANS_PROC_SEQ, 0)
480600190627               INTO :li_TROTransProcSeqNo
480700190627               FROM MFATRNTYP
480800190627               WHERE TRANS_TYPE_CODE = :lncc_TRO
480900190627           END-EXEC.
481000190627           MOVE SQLSTATE TO lc_sqlStates.
481100190627           EVALUATE TRUE
481200190627               WHEN lncc_sqlSuccessful
481300190627                    CONTINUE
481400190627               WHEN OTHER
481500190627                    SET lncc_Err52 TO TRUE
481600190627                    MOVE lncc_ErrGetTROProcSeq
481700190627                      TO lc_sqlErrShortDESCR
481800190627                    PERFORM SQLFailProcess
481900190627           END-EVALUATE.
482000190627           INITIALIZE li_TRITransProcSeqNo.
482100190627           EXEC SQL
482200190627              SELECT COALESCE(TRANS_PROC_SEQ, 0)
482300190627               INTO :li_TRITransProcSeqNo
482400190627               FROM MFATRNTYP
482500190627               WHERE TRANS_TYPE_CODE = :lncc_TRI
482600190627           END-EXEC.
482700190627           MOVE SQLSTATE TO lc_sqlStates.
482800190627           EVALUATE TRUE
482900190627               WHEN lncc_sqlSuccessful
483000190627                    CONTINUE
483100190627               WHEN OTHER
483200190627                    SET lncc_Err53 TO TRUE
483300190627                    MOVE lncc_ErrGetTRIProcSeq
483400190627                      TO lc_sqlErrShortDESCR
483500190627                    PERFORM SQLFailProcess
483600190627           END-EVALUATE.
483700190627
483800190627      *---------------------------------
483900190627       GetTransHeaderNo.
484000190627      *---------------------------------
484100190627           INITIALIZE li_TransHeaderNo.
484200190627           EXEC SQL
484300190627              SELECT COALESCE(MAX(HEADER_NO), 0)
484400190627               INTO :li_TransHeaderNo
484500190627               FROM MFATRHDRP
484600190627               WHERE HEADER_TYPE = :lncc_WDH
484700190627           END-EXEC.
484800190627           MOVE SQLSTATE TO lc_sqlStates.
484900190627           EVALUATE TRUE
485000190627               WHEN lncc_sqlSuccessful
485100190627                    CONTINUE
485200190627               WHEN OTHER
485300190627                    SET lncc_Err44 TO TRUE
485400190627                    MOVE lncc_ErrGetHeaderNo
485500190627                      TO lc_sqlErrShortDESCR
485600190627                    PERFORM SQLFailProcess
485700190627           END-EVALUATE.
485800190627
485900190627
486000190627      * ---------------------------------
486100190627       GetExchangeType.
486200190627      * ---------------------------------
486300190627           INITIALIZE lc_ExchangeRateType.
486400190627           EXEC SQL
486500190627             SELECT COALESCE(Exchange_Rate_Type, " ")
486600190627               INTO :lc_ExchangeRateType:lb_Indicators
486700190627               FROM Mfaprgerp
486800190627              WHERE Program_Code   = :lncc_ProgramCode AND
486900190627                    Program_Action = :lncc_ProgramAction
487000190627           END-EXEC.
487100190627           MOVE SQLSTATE TO lc_sqlStates.
487200190627           EVALUATE TRUE
487300190627               WHEN lncc_sqlSuccessful
487400190627                    CONTINUE
487500190627               WHEN OTHER
487600190627                    SET lncc_Err23 TO TRUE
487700190627                    MOVE lncc_ErrGetExcType
487800190627                      TO lc_sqlErrShortDESCR
487900190627                    PERFORM SQLFailProcess
488000190627           END-EVALUATE.
488100190627
488200190627
488300190627      *---------------------------------
488400190627       CloseGetHier.
488500190627      *---------------------------------
488600190627           EXEC SQL
488700190627             CLOSE GetHier
488800190627           END-EXEC.
488900190627           MOVE SQLSTATE TO lc_sqlStates.
489000190627           EVALUATE TRUE
489100190627               WHEN lncc_sqlSuccessful
489200190627                    CONTINUE
489300190627               WHEN OTHER
489400190627                    SET lncc_Err15 TO TRUE
489500190627                    MOVE lncc_ErrCloseGetHier
489600190627                      TO lc_sqlErrShortDESCR
489700190627                    PERFORM SQLFailProcess
489800190627           END-EVALUATE.
489900190627      *---------------------------------
490000190627       CloseGetTrans.
490100190627      *---------------------------------
490200190627           EXEC SQL
490300190627             CLOSE GetTrans
490400190627           END-EXEC.
490500190627           MOVE SQLSTATE TO lc_sqlStates.
490600190627           EVALUATE TRUE
490700190627               WHEN lncc_sqlSuccessful
490800190627                    CONTINUE
490900190627               WHEN OTHER
491000190627                    SET lncc_Err18 TO TRUE
491100190627                    MOVE lncc_ErrCloseGetTrans
491200190627                      TO lc_sqlErrShortDESCR
491300190627                    PERFORM SQLFailProcess
491400190627           END-EVALUATE.
491500190627      *---------------------------------
491600190627       CloseGetAccInvs.
491700190627      *---------------------------------
491800190627           EXEC SQL
491900190627             CLOSE GetAccInvs
492000190627           END-EXEC.
492100190627           MOVE SQLSTATE TO lc_sqlStates.
492200190627           EVALUATE TRUE
492300190627               WHEN lncc_sqlSuccessful
492400190627                    CONTINUE
492500190627               WHEN OTHER
492600190627                    SET lncc_Err21 TO TRUE
492700190627                    MOVE lncc_ErrCloseGetAccInvs
492800190627                      TO lc_sqlErrShortDESCR
492900190627                    PERFORM SQLFailProcess
493000190627           END-EVALUATE.
493100190627      *---------------------------------
493200190627       CloseGICInvs.
493300190627      *---------------------------------
493400190627           EXEC SQL
493500190627             CLOSE GICInvs
493600190627           END-EXEC.
493700190627           MOVE SQLSTATE TO lc_sqlStates.
493800190627           EVALUATE TRUE
493900190627               WHEN lncc_sqlSuccessful
494000190627                    CONTINUE
494100190627               WHEN OTHER
494200190627                    SET lncc_Err49 TO TRUE
494300190627                    MOVE lncc_ErrCloseGICInvs
494400190627                      TO lc_sqlErrShortDESCR
494500190627                    PERFORM SQLFailProcess
494600190627           END-EVALUATE.
494700190712      *---------------------------------
494800190712       CloseGICTrans.
494900190712      *---------------------------------
495000190712           EXEC SQL
495100190712             CLOSE GICTrans
495200190712           END-EXEC.
495300190712           MOVE SQLSTATE TO lc_sqlStates.
495400190712           EVALUATE TRUE
495500190712               WHEN lncc_sqlSuccessful
495600190712                    CONTINUE
495700190712               WHEN OTHER
495800190712                    SET lncc_Err77 TO TRUE
495900190712                    MOVE lncc_ErrCloseGICTrans
496000190712                      TO lc_sqlErrShortDESCR
496100190712                    PERFORM SQLFailProcess
496200190712           END-EVALUATE.
496300190627
496400200728      *RFS186053 START
496500200728      *---------------------------------
496600200728       GetFirstAccountHierInv.
496700200728      *---------------------------------
496800200728           SET lb_HierInvMatchNo TO TRUE.
496900200728           INITIALIZE lc_PrevHierAssetCrit.
497000200728           PERFORM SortFundsByHMV.
497100200728           PERFORM VARYING li_CounterHier FROM 1 BY 1 UNTIL
497200200728            li_CounterHier > li_NoOfHierRowsFetched OR
497300200728            lb_HierInvMatchYes
497400200728            IF ltb_HierAssetCrit(li_CounterHier) NOT =
497500200728               lc_PrevHierAssetCrit
497600200728               MOVE ltb_HierAssetCrit(li_CounterHier)
497700200728                 TO lc_PrevHierAssetCrit
497800200728               PERFORM SortFunds
497900200728            END-IF
498000200728            SET li_CounterAccInv TO 1
498100200728            SEARCH ltb_AccInvRecs VARYING li_CounterAccInv
498200200728            WHEN li_CounterAccInv > li_NoOfInvRowsFetched
498300200728                 CONTINUE
498400200728            WHEN ltb_HierProdType(li_CounterHier) =
498500200728                 ltb_ProdTypeCode(li_CounterAccInv) AND
498600200728                 ((ltb_HierMMFFlag(li_CounterHier) =
498700200728                   ltb_MMFFlag(li_CounterAccInv))
498800200728                   OR
498900200728                  (ltb_HierMMFFlag(li_CounterHier) = lncc_N
499000200728                   AND ltb_MMFFlag(li_CounterAccInv) = SPACE)
499100200728                 ) AND
499200200728                 ((ltb_HierLoadStruc(li_CounterHier) =
499300200728                   ltb_LoadStruc(li_CounterAccInv)
499400200728                   AND ltb_HierExtLoad(li_CounterHier) =
499500200728                   ltb_ExtLoad(li_CounterAccInv))
499600200728                   OR
499700200728                   ltb_ProdTypeRule(li_CounterAccInv) = lncc_2
499800200728                   OR
499900200728                   ltb_ProdTypeRule(li_CounterAccInv) = lncc_7
500000200728                 )
500100210512      *RFS1113861 Starts
500200210512                 IF lb_FeegenCallNo OR
500300210512                    (lb_FeegenCallYes AND
500400210512                     ltb_HierAssetCrit(li_CounterHier) NOT = lncc_HF AND
500500210512                     ltb_HierAssetCrit(li_CounterHier) NOT = lncc_HM )
500600210512      *RFS1113861 Ends
500700200728                 SET lb_HierInvMatchYes TO TRUE
500800201105      *RFS1106613 Starts
500900201105                 IF ltb_HierAssetCrit(li_CounterHier) = lncc_CM
501000201105                    PERFORM GetFirstCMGIC
501100201105                 ELSE
501200201105                    MOVE ltb_InvCode(li_CounterAccInv)
501300201105                      TO pc_HIERWTDInvestmentCode
501400201105                 END-IF
501500210517      *RFS1113861 Starts
501600210512                 END-IF
501700210512      *RFS1113861 Ends
501800201105      *          MOVE ltb_InvCode(li_CounterAccInv)
501900201105      *            TO pc_HIERWTDInvestmentCode
502000201105      *RFS1106613 Ends
502100200728            END-SEARCH
502200200728           END-PERFORM.
502300200728
502400200728      *---------------------------------
502500200728       ProcessAWDInstructions.
502600200728      *---------------------------------
502700200729           INITIALIZE lc_DWaiveDSCFlag
502800200729                      lc_DWaiveDSCReasonCode
502900200729                      lc_DWaiveGIFeesFlag
503000200729                      lc_DWaiveGIFeesReasonCode
503100200729                      lc_TaxSplitOption
503200200729                      lc_AddReplaceTax
503300200729                      li_FedTaxAmt
503400200729                      li_FedTaxPercent
503500200729                      li_ProvTaxAmt
503600200729                      li_ProvTaxPercent.
503700200728           EXEC SQL
503800200728             SELECT
503900200826             COALESCE(ACAWDHP.WAIVE_DSC, "N"),
504000200826             COALESCE(ACAWDHP.DSC_WAIVE_REASON_CODE, " "),
504100200826             COALESCE(ACAWDHP.WAIVE_GI_FEES_FLAG, "N"),
504200200803             COALESCE(ACAWDHP.WAIVE_GI_FEES_REASON_CODE, " "),
504300200804             COALESCE(ACWATP.SPLIT_OPTION_CODE, " "),
504400200804             COALESCE(ACWATP.ADD_REPLACE_TAX, " "),
504500200803             COALESCE(ACWATP.FEDERAL_TAX_AMT, 0),
504600200803             COALESCE(ACWATP.FEDERAL_TAX_PERCENT, 0),
504700200803             COALESCE(ACWATP.PROVINCIAL_TAX_AMT, 0),
504800200803             COALESCE(ACWATP.PROVINCIAL_TAX_PERCENT, 0)
504900200728             INTO :lc_DWaiveDSCFlag, :lc_DWaiveDSCReasonCode,
505000200728             :lc_DWaiveGIFeesFlag, :lc_DWaiveGIFeesReasonCode,
505100200728             :lc_TaxSplitOption, :lc_AddReplaceTax,
505200200728             :li_FedTaxAmt, :li_FedTaxPercent,
505300200728             :li_ProvTaxAmt, :li_ProvTaxPercent
505400200803             FROM MFASUBAWDP SUBAWDP
505500200728             INNER JOIN MFAACCAIP ACCAIP ON
505600200728             SUBAWDP.ACCOUNT_NO = ACCAIP.ACCOUNT_NO AND
505700200728             SUBAWDP.AWD_SEQ_NO = ACCAIP.AWD_SEQ_NO
505800200728             LEFT JOIN MFAACAWDHP ACAWDHP ON
505900200728             ACAWDHP.ACCOUNT_NO = ACCAIP.ACCOUNT_NO AND
506000200728             ACAWDHP.AWD_SEQ_NO = ACCAIP.AWD_SEQ_NO
506100200728             LEFT JOIN MFAACWATP ACWATP ON
506200200728             ACCAIP.ACCOUNT_NO = ACWATP.ACCOUNT_NO AND
506300200728             ACCAIP.AWD_SEQ_NO = ACWATP.AWD_SEQ_NO AND
506400200728             ACCAIP.CONTR_REDEM_CODE = ACWATP.CONTR_REDEM_CODE AND
506500200728             ACCAIP.INVESTMENT_CODE = ACWATP.INVESTMENT_CODE
506600200728             WHERE
506700200803             SUBAWDP.PLACEMENT_DATE = :ld_PlaceDate AND
506800200728             SUBAWDP.TRANS_NO = :li_TransNo AND
506900200728             ACCAIP.ACCOUNT_NO = :li_AccountNo AND
507000200728             (ACCAIP.INVESTMENT_CODE = :lc_OInvCode OR
507100200728              ACCAIP.INVESTMENT_CODE = " ")
507200200728             AND ACCAIP.CONTR_REDEM_CODE = :lc_ContRedCode
507300200728           END-EXEC.
507400200728           MOVE SQLSTATE TO lc_sqlStates.
507500200728           EVALUATE TRUE
507600200728               WHEN lncc_sqlSuccessful OR lncc_sqlEnd
507700200728                    CONTINUE
507800200728               WHEN OTHER
507900200728                    SET lncc_Err96 TO TRUE
508000200728                    MOVE lncc_ErrGETAWDInstructions
508100200728                      TO lc_sqlErrShortDESCR
508200200728                    PERFORM SQLFailProcess
508300200728           END-EVALUATE.
508400200729           IF lc_DWaiveDSCFlag NOT = SPACES
508500200729              MOVE lc_DWaiveDSCFlag TO lc_WaiveDSC
508600200729              MOVE lc_DWaiveDSCReasonCode TO lc_DSCWaiveReason
508700200729              MOVE lncc_Y TO lc_TreatTxnAsAWD
508800200729           END-IF.
508900200729           IF lc_DWaiveGIFeesFlag = SPACES
509000200804              MOVE lncc_N TO lc_DWaiveGIFeesFlag
509100200729              INITIALIZE lc_DWaiveGIFeesReasonCode
509200200729           END-IF.
509201210929      *RFS1120884 START
509202210929           IF lc_ATPSplitOption NOT = SPACES
509203210929              MOVE lc_ATPSplitOption TO lc_TaxSplitOption
509204210929              MOVE lc_ATPAddRepTax   TO lc_AddReplaceTax
509205210929              MOVE li_ATPFedTaxAmt   TO li_FedTaxAmt
509206210929              MOVE li_ATPFedTaxPerc  TO li_FedTaxPercent
509207210929              MOVE li_ATPProvTaxAmt  TO li_ProvTaxAmt
509208210929              MOVE li_ATPProvTaxPerc TO li_ProvTaxPercent
509209210929           END-IF.
509210211004           COMPUTE li_ATPIRemFedTaxAmt  ROUNDED = li_ATPIFedTaxAmt.
509211211004           COMPUTE li_ATPIRemProvTaxAmt ROUNDED = li_ATPIProvTaxAmt.
509212210929      *RFS1120884 END
509300200807           COMPUTE li_RemFedTaxAmt  ROUNDED = li_FedTaxAmt.
509400200807           COMPUTE li_RemProvTaxAmt ROUNDED = li_ProvTaxAmt.
509500210530
509600200729      *---------------------------------
509700200729       UpdateTransAdditionalTax.
509800200729      *---------------------------------
509900200729           INITIALIZE  li_TransFedTaxAmt
510000200729                       li_TransProvTaxAmt.
510001211004      *RFS1120884 START
510002211004           INITIALIZE  li_ATPITransFedTaxAmt
510003211004                       li_ATPITransProvTaxAmt.
510004211004      *RFS1120884 END
510100200729
510200200729           IF li_NetAmt > 0
510300200729              MOVE li_NetAmt TO li_TotAmtForTax
510400200729           ELSE
510500200729              MOVE li_GrossAmt TO li_TotAmtForTax
510600200729           END-IF.
510700200729
510800200729           PERFORM GetAccountMV.
510900200729
511000200828           IF li_AccountMV > ltb_MarketValue(li_CounterOgInv)
511100200729             COMPUTE li_TransFedTaxAmt ROUNDED =
511200200828              (ltb_MarketValue(li_CounterOgInv) * li_FedTaxAmt) /
511300200828               li_TotAmtForTax
511400200729             COMPUTE li_TransProvTaxAmt ROUNDED =
511500200828              (ltb_MarketValue(li_CounterOgInv) * li_ProvTaxAmt) /
511600200828               li_TotAmtForTax
511601211004      *RFS1120884 START
511602211004             COMPUTE li_ATPITransFedTaxAmt ROUNDED =
511603211004              (ltb_MarketValue(li_CounterOgInv) * li_ATPIFedTaxAmt) /
511604211004               li_TotAmtForTax
511605211004             COMPUTE li_ATPITransProvTaxAmt ROUNDED =
511606211004              (ltb_MarketValue(li_CounterOgInv) * li_ATPIProvTaxAmt) /
511607211004               li_TotAmtForTax
511608211004      *RFS1120884 END
511700200729           ELSE
511800200729             COMPUTE li_TransFedTaxAmt  ROUNDED = li_RemFedTaxAmt
511900200729             COMPUTE li_TransProvTaxAmt ROUNDED = li_RemProvTaxAmt
511901211004      *RFS1120884 START
511902211004             COMPUTE li_ATPITransFedTaxAmt  ROUNDED =
511903211004                     li_ATPIRemFedTaxAmt
511904211004             COMPUTE li_ATPITransProvTaxAmt ROUNDED =
511905211004                     li_ATPIRemProvTaxAmt
511906211004      *RFS1120884 END
512000200729           END-IF.
512100200729
512200200807           COMPUTE li_RemFedTaxAmt ROUNDED =
512300200729             li_RemFedTaxAmt - li_TransFedTaxAmt.
512400200807           COMPUTE li_RemProvTaxAmt ROUNDED =
512500200729             li_RemProvTaxAmt - li_TransProvTaxAmt.
512501211004      *RFS1120884 START
512502211004           COMPUTE li_ATPIRemFedTaxAmt ROUNDED =
512503211004             li_ATPIRemFedTaxAmt - li_ATPITransFedTaxAmt.
512504211004           COMPUTE li_ATPIRemProvTaxAmt ROUNDED =
512505211004             li_ATPIRemProvTaxAmt - li_ATPITransProvTaxAmt.
512506211004      *RFS1120884 END
512600200729
512700200729           EXEC SQL
512800200729             UPDATE MFATRNATP
512900200729             SET FEDERAL_TAX_AMT    = :li_TransFedTaxAmt,
513000200729                 PROVINCIAL_TAX_AMT = :li_TransProvTaxAmt
513001211004      *RFS1120884 START
513002211004                ,INPUT_FEDERAL_TAX_AMT    = :li_ATPITransFedTaxAmt
513003211004                ,INPUT_PROVINCIAL_TAX_AMT = :li_ATPITransProvTaxAmt
513004211004      *RFS1120884 END
513100200729             WHERE PLACEMENT_DATE = :ld_PlaceDate
513200200729               AND TRANS_NO = :li_TransNo
513300200729           END-EXEC.
513400200729           MOVE SQLSTATE TO lc_sqlStates.
513500200729           EVALUATE TRUE
513600200729               WHEN lncc_sqlSuccessful
513700200729                    CONTINUE
513800200729               WHEN OTHER
513900200729                    SET lncc_Err97 TO TRUE
514000200729                    MOVE lncc_ErrUpdMFATRNATP
514100200729                      TO lc_sqlErrShortDESCR
514200200729                    PERFORM SQLFailProcess
514300200729           END-EVALUATE.
514400200729
514500200729      *---------------------------------
514600200729       CreateTransAdditionalTax.
514700200729      *---------------------------------
514800200729           INITIALIZE  li_TransFedTaxAmt
514900200729                       li_TransProvTaxAmt.
514901211004      *RFS1120884 START
514902211004           INITIALIZE  li_ATPITransFedTaxAmt
514903211004                       li_ATPITransProvTaxAmt.
514904211004      *    IF lc_TaxSplitOption = lncc_Dollar AND
514905211004      *     (li_FedTaxAmt > 0 OR li_ProvTaxAmt > 0)
514906211004           IF (lc_TaxSplitOption = lncc_Dollar AND
514907211004               (li_FedTaxAmt > 0 OR li_ProvTaxAmt > 0))
514908211004              OR
514909211004              (lc_ATPISplitOption = lncc_Dollar AND
514910211004               (li_ATPIFedTaxAmt > 0 OR li_ATPIProvTaxAmt > 0))
514911211004      *RFS1120884 END
515200200729
515300200729             IF li_HierInvGross = 0
515400200729               IF ltb_HierAssetCrit(li_CounterHier) = lncc_CM
515500200729                 MOVE ltb_GICMarketValue(li_CounterGIC)
515600200729                   TO li_TransAmtForTax
515700200729               ELSE
515800200729                 MOVE ltb_MarketValue(li_CounterAccInv)
515900200729                   TO li_TransAmtForTax
516000200729               END-IF
516100200729             ELSE
516200200729               MOVE li_HierInvGross TO li_TransAmtForTax
516300200729             END-IF
516400200729
516500200729             IF li_NetAmt > 0
516600200729               MOVE li_NetAmt TO li_TotAmtForTax
516700200807               COMPUTE li_TmpRemAmt ROUNDED = li_RemainingNet   -
516800200729                                      li_TransAmtForTax
516900200729             ELSE
517000200729               MOVE li_GrossAmt TO li_TotAmtForTax
517100200807               COMPUTE li_TmpRemAmt ROUNDED = li_RemainingGross -
517200200729                                      li_TransAmtForTax
517300200729             END-IF
517400200729
517500200729             PERFORM GetAccountMV
517600200729
517700200828             IF li_AccountMV > li_TransAmtForTax AND li_TmpRemAmt > 0
517800200828               COMPUTE li_TransFedTaxAmt ROUNDED = (li_TransAmtForTax *
517900200828                li_FedTaxAmt) / li_TotAmtForTax
518000200828               COMPUTE li_TransProvTaxAmt ROUNDED = (li_TransAmtForTax *
518100200828                li_ProvTaxAmt) / li_TotAmtForTax
518101211004      *RFS1120884 START
518102211004               COMPUTE li_ATPITransFedTaxAmt ROUNDED =
518103211004               (li_TransAmtForTax * li_ATPIFedTaxAmt) / li_TotAmtForTax
518104211004               COMPUTE li_ATPITransProvTaxAmt ROUNDED =
518105211004               (li_TransAmtForTax * li_ATPIProvTaxAmt) / li_TotAmtForTax
518106211004      *RFS1120884 END
518200200729             ELSE
518300200729               COMPUTE li_TransFedTaxAmt ROUNDED = li_RemFedTaxAmt
518400200729               COMPUTE li_TransProvTaxAmt ROUNDED = li_RemProvTaxAmt
518401211004      *RFS1120884 START
518402211004               COMPUTE li_ATPITransFedTaxAmt ROUNDED =
518403211004                       li_ATPIRemFedTaxAmt
518404211004               COMPUTE li_ATPITransProvTaxAmt ROUNDED =
518405211004                       li_ATPIRemProvTaxAmt
518406211004      *RFS1120884 END
518500200729             END-IF
518600200729
518700200807             COMPUTE li_RemFedTaxAmt ROUNDED = li_RemFedTaxAmt -
518800200729                                       li_TransFedTaxAmt
518900200807             COMPUTE li_RemProvTaxAmt ROUNDED = li_RemProvTaxAmt -
519000200729                                        li_TransProvTaxAmt
519001211004      *RFS1120884 START
519002211004             COMPUTE li_ATPIRemFedTaxAmt ROUNDED =
519003211004               li_ATPIRemFedTaxAmt - li_ATPITransFedTaxAmt
519004211004             COMPUTE li_ATPIRemProvTaxAmt ROUNDED =
519005211004               li_ATPIRemProvTaxAmt - li_ATPITransProvTaxAmt
519006211004      *RFS1120884 END
519100200729           END-IF.
519200200729
519300200729           EXEC SQL
519400200729             INSERT INTO MFATRNATP
519500200729                    (PLACEMENT_DATE, TRANS_NO,
519600200729                     SPLIT_OPTION_CODE, ADD_REPLACE_TAX,
519700200729                     FEDERAL_TAX_AMT, FEDERAL_TAX_PERCENT,
519800200729                     PROVINCIAL_TAX_AMT, PROVINCIAL_TAX_PERCENT
519801210929      *RFS1120884 START
519802210929                     ,INPUT_SPLIT_OPTION_CODE, INPUT_ADD_REPLACE_TAX,
519803210929                     INPUT_FEDERAL_TAX_AMT, INPUT_FEDERAL_TAX_PERCENT,
519804210929                     INPUT_PROVINCIAL_TAX_AMT,
519805210929                     INPUT_PROVINCIAL_TAX_PERCENT
519806210929      *RFS1120884 END
519900200729                     )
520000200729             VALUES (:ld_AsAtDate,
520100200729                     :li_TransNum,
520200200729                     :lc_TaxSplitOption ,
520300200729                     :lc_AddReplaceTax  ,
520400200729                     :li_TransFedTaxAmt,
520500200729                     :li_FedTaxPercent  ,
520600200729                     :li_TransProvTaxAmt,
520700200729                     :li_ProvTaxPercent
520701210929      *RFS1120884 START
520702210929                    ,:lc_ATPISplitOption
520703210929                    ,:lc_ATPIAddRepTax
520704211004                    ,:li_ATPITransFedTaxAmt
520705210929                    ,:li_ATPIFedTaxPerc
520706211004                    ,:li_ATPITransProvTaxAmt
520707210929                    ,:li_ATPIProvTaxPerc
520708210929      *RFS1120884 END
520800200729                     )
520900200729           END-EXEC.
521000200729           MOVE SQLSTATE TO lc_sqlStates.
521100200729           EVALUATE TRUE
521200200729               WHEN lncc_sqlSuccessful
521300200729                    CONTINUE
521400200729               WHEN OTHER
521500200729                    SET lncc_Err98 TO TRUE
521600200729                    MOVE lncc_ErrInsMFATRNATP
521700200729                      TO lc_sqlErrShortDESCR
521800200729                    PERFORM SQLFailProcess
521900200729           END-EVALUATE.
522000200729
522100200729      *---------------------------------
522200200729       GetAccountMV.
522300200729      *---------------------------------
522400200729           INITIALIZE li_AccountMV.
522500200729           PERFORM VARYING li_MVCounter FROM 1 BY 1 UNTIL
522600200729            li_MVCounter > li_NoOfInvRowsFetched
522700200807             COMPUTE li_AccountMV ROUNDED = li_AccountMV +
522800200729               ltb_MarketValue(li_MVCounter)
522900200729           END-PERFORM.
523000200728      *RFS186053 END
523100200728
523200201029      *RFS1106613 Starts
523300201029      *---------------------------------
523400201029       GetFirstCMGIC.
523500201029      *---------------------------------
523600201105           INITIALIZE pc_HIERWTDInvestmentCode.
523700201105
523800201105           EXEC SQL
523900201105              SELECT GICDP.INVESTMENT_CODE
524000201105              INTO  :pc_HIERWTDInvestmentCode
524100201105              FROM   MFAGICDP GICDP
524200201105              WHERE  GICDP.ACCOUNT_NO       = :li_AccountNo
524300201105              AND    GICDP.CERT_STATUS_CODE = :lncc_A
524400201105              ORDER BY GICDP.MATURITY_DATE
524500201105                      ,GICDP.INT_RATE
524600201105                      ,GICDP.CERTIFICATE_NO
524700201105              FETCH FIRST ROW ONLY
524800201105           END-EXEC.
524900201105
525000201105           MOVE SQLSTATE TO lc_sqlStates.
525100201105           EVALUATE TRUE
525200201105               WHEN lncc_sqlSuccessful
525300201105                    CONTINUE
525400201105               WHEN OTHER
525500201105                    SET lncc_Err99 TO TRUE
525600201105                    MOVE lncc_ErrGetFirstCMGIC
525700201105                      TO lc_sqlErrShortDESCR
525800201105                    PERFORM Dsp-Error
525900210429           END-EVALUATE.
526000201105      *RFS1106613 Ends
526100210401
526200210401      *RFS180708 Starts
526300210401      *---------------------------------
526400210401       WriteSalesTaxDetails.
526500210401      *---------------------------------
526600210401           EXEC SQL
526700210401             INSERT INTO MFATRNTXDP
526800210401             SELECT :ld_AsAtDate
526900210401                   ,:li_TransNum
527000210401                   ,:lncc_Fee
527100210401                   ,TRNTXP.SALES_TAX_CODE
527200210401                   ,TRNTXP.FEDERAL_TAX_PERCENT
527300210401                   ,TRNTXP.PROVINCIAL_TAX_PERCENT
527400210401                   ,TRNTXP.GROSS_OR_NET
527500210401                   ,TRNTXP.COMPOUND_TAX
527600210401
527700210401             FROM   MFATRNTXP TRNTXP
527800210401
527900210401             INNER JOIN MFAIVRP IVRP ON
528000210401             IVRP.COUNTRY_CODE  = TRNTXP.COUNTRY_CODE AND
528100210401             IVRP.PROVINCE_CODE = TRNTXP.PROVINCE_CODE
528200210401
528300210401             INNER JOIN MFAACCNTP ACCNTP ON
528400210401             ACCNTP.INVESTOR_NO = IVRP.INVESTOR_NO
528500210401
528600210401             WHERE ACCNTP.ACCOUNT_NO      = :li_TransAccountNo
528700210401             AND   TRNTXP.TRANS_TYPE_CODE = :lncc_Fee
528800210405             AND   TRNTXP.DEFAULT_FLAG    = :lncc_Y
528900210401           END-EXEC.
529000210401
529100210401           MOVE SQLSTATE TO lc_sqlStates.
529200210401           IF NOT lncc_sqlSuccessful
529300210401              SET lncc_ErrA1 TO TRUE
529400210401              MOVE lncc_ErrorInsertMFATRNTXDP TO lc_sqlErrShortDESCR
529500210401              PERFORM Dsp-Error
529600210401           END-IF.
529700201105
529800210501      *RFS1113861 Starts
529900210427
530000210427      *---------------------------------
530100210427       Calculate-GST-PST.
530200210427      *---------------------------------
530300210518           INITIALIZE li_DivFactorGst
530400210427                    , li_DivFactorPst
530500210530                    , li_NetAmt
530600210530                    , li_GstAmt
530700210530                    , li_PstAmt
530800210530                    , li_NetAmtTaxed.
530900210427
531000210501           COMPUTE li_DivFactorGst = li_GstPercent / 100.
531100210501           COMPUTE li_DivFactorPst = li_PstPercent / 100.
531200210501
531300210501           IF lc_CompoundTax = lncc_Y
531400210520              COMPUTE li_NetAmt ROUNDED = li_NetAmtAvail /
531500210501              (1 + li_DivFactorGst + li_DivFactorPst +
531600210501                                  (li_DivFactorGst * li_DivFactorPst ))
531700210501           ELSE
531800210520              COMPUTE li_NetAmt ROUNDED = li_NetAmtAvail /
531900210501                              (1 + li_DivFactorGst + li_DivFactorPst)
532000210501           END-IF.
532100210501
532200210530           COMPUTE li_GstAmt ROUNDED = li_NetAmt *
532300210530                                       (li_GstPercent / 100).
532400210530
532500210530           IF lc_CompoundTax = lncc_Y
532600210530              COMPUTE li_PstAmt ROUNDED = (li_NetAmt + li_GstAmt)
532700210530                                          * (li_PstPercent / 100)
532800210530           ELSE
532900210530              COMPUTE li_PstAmt ROUNDED = li_NetAmt *
533000210530                                        (li_PstPercent / 100)
533100210530           END-IF.
533200210530
533300210530           COMPUTE li_NetAmtTaxed    = li_NetAmt + li_GstAmt
533400210530                                                 + li_PstAmt.
533500210530
533600210530            IF li_NetAmtTaxed < li_NetAmtAvail
533700210530               COMPUTE li_NetAmt = li_NetAmtAvail - li_GstAmt
533800210530                                                  - li_PstAmt
533900210530            END-IF.
534000210530
534100210428      *---------------------------------
534200210428       UpdateFeeTrans.
534300210428      *---------------------------------
534400210429           INITIALIZE li_ParmSystime.
534500210429           MOVE FUNCTION CURRENT-DATE(9:4) to li_ParmSystime.
534600210429
534700210428           EXEC SQL
534800210428             UPDATE MFATRNP
534900210507             SET    Gross_Amt         = :li_NetAmt
535000210429                   ,Net_Amt           = :li_NetAmt
535100210429                   ,Settlement_Amt    = :li_NetAmt
535200210429                   ,CHANGED_DATE      = :ld_AsAtDate
535300210429                   ,CHANGED_TIME      = :li_ParmSystime
535400210429                   ,CHANGED_BY_USER   = :lncc_EnteredBy
535500210429             WHERE  Placement_Date    = :ld_PlaceDate
535600210429               AND  Trans_No          = :li_TransNo
535700210429           END-EXEC.
535800210428
535900210428           MOVE SQLSTATE to lc_sqlStates.
536000210428           IF lncc_sqlSuccessful
536100210428              CONTINUE
536200210428           ELSE
536300210428              SET lncc_Err35 TO TRUE
536400210428              MOVE lncc_ErrUpdMFATRNP
536500210428                   TO lc_sqlErrShortDESCR
536600210428              PERFORM SQLFailProcess
536700210428           END-IF.
536800210427
536900210501      *---------------------------------
537000210501       GetDSCMethod.
537100210501      *---------------------------------
537200210510           IF lb_DSCMETYes
537300210518              INITIALIZE LNK-GETDSCMET-PARAMETERS
537400210501              MOVE li_AccountNo     TO  LNK-ACCOUNT-NO
537500210501              MOVE lc_OTrnTypeCode  TO  LNK-TRANS-TYPE-CODE
537600210501              MOVE lc_TrnOriginCode TO  LNK-TRANS-ORIGIN-CODE
537700210501              MOVE lc_TransSubType  TO  LNK-TRANS-SUBTYPE
537800210501              CALL "GETDSCMET" USING LNK-GETDSCMET-PARAMETERS
537900210518              IF LNK-RET-CODE-OK
538000210518                 PERFORM InsertMFADSCRDP
538100210518              END-IF
538200210501           END-IF.
538300210501
538400210507      *---------------------------------
538500210507       CalculatorForFee.
538600210507      *---------------------------------
538700210507           MOVE li_AccountNo TO Pass-CDSC-Account.
538800210510           MOVE lc_CalcFeeInv TO Pass-CDSC-Investment.
538900210507           MOVE lncc_Dollar TO Pass-Split-Option.
539000210507           MOVE 0 TO Pass-CDSC-Gross, Pass-CDSC-Net
539100210507           INITIALIZE PASS-CERT-ID-N.
539200210507           MOVE ld_AsAtDate TO Pass-CDSC-Trade-Date.
539300210507           MOVE li_FeeInvMV TO Pass-CDSC-Gross.
539400210515           PERFORM GetDSCMethod.
539500210515           PERFORM Calculator.
539600210515           MOVE Pass-CDSC-Net TO li_NetAmtAvail, li_OrigNetAmt.
539700210518           IF LNK-RET-CODE-OK
539800210518              PERFORM DeleteMFADSCRDPRec
539900210518           END-IF.
540000210512
540100210507
540200210507      *---------------------------------
540300210507       GetSalesTaxDetails.
540400210507      *---------------------------------
540500210518           INITIALIZE li_GstPercent
540600210518                    , li_PstPercent
540700210518                    , lc_CompoundTax.
540800210518
540900210507           EXEC SQL
541000210507             SELECT FEDERAL_TAX_PERCENT
541100210507                   ,PROVINCIAL_TAX_PERCENT
541200210507                   ,COMPOUND_TAX
541300210507             INTO   :li_GstPercent
541400210507                   ,:li_PstPercent
541500210507                   ,:lc_CompoundTax
541600210507             FROM   MFATRNTXDP
541700210507             WHERE  PLACEMENT_DATE = :ld_PlaceDate
541800210507             AND    TRANS_NO       = :li_TransNo
541900210507           END-EXEC.
542000210507
542100210507           MOVE SQLSTATE TO lc_sqlStates.
542200210507           IF lncc_sqlSuccessful OR lncc_sqlEnd
542300210507              CONTINUE
542400210507           ELSE
542500210507              SET lncc_ErrA2 TO TRUE
542600210507              MOVE lncc_ErrorGetGstPstDetails TO lc_sqlErrShortDESCR
542700210507              PERFORM Dsp-Error
542800210507           END-IF.
542900210512
543000210512      *---------------------------------
543100210513       InsertMFADSCRDP.
543200210512      *---------------------------------
543300210512           EXEC SQL
543400210513             INSERT INTO MFADSCRDP
543500210512             SELECT :lncc_SEL
543600210512                   ,CRDP.TRANS_ORIGIN_CODE
543700210512                   ,CRDP.ACCOUNT_TYPE_CODE
543800210512                   ,:lncc_Space
543900210512                   ,:LNK-DSC-REDUCTION-METHOD
544000210512              FROM  MFADSCRDP CRDP
544100210512              INNER JOIN MFAACCNTP ACCNTP ON
544200210512              CRDP.ACCOUNT_TYPE_CODE       = ACCNTP.ACCOUNT_TYPE_CODE
544300210512              WHERE ACCNTP.ACCOUNT_NO      = :LNK-ACCOUNT-NO
544400210512              AND   CRDP.TRANS_ORIGIN_CODE = :LNK-TRANS-ORIGIN-CODE
544500210512              AND   CRDP.TRANS_SUB_TYPE    = :LNK-TRANS-SUBTYPE
544600210512            END-EXEC.
544700210512
544800210512            MOVE SQLSTATE TO lc_SqlStates.
544900210512            IF lncc_sqlSuccessful OR lncc_sqlEnd
545000210512               CONTINUE
545100210512            ELSE
545200210512               SET lncc_ErrA3 TO TRUE
545300210512               MOVE lncc_ErrorInsertMFADSCRDP TO  lc_sqlErrShortDESCR
545400210512               PERFORM Dsp-Error
545500210512            END-IF.
545600210512
545700210512      *---------------------------------
545800210513       DeleteMFADSCRDPRec.
545900210512      *---------------------------------
546000210513             EXEC SQL
546100210513             DELETE FROM  MFADSCRDP CRDP
546200210513              WHERE CRDP.TRANS_ORIGIN_CODE = :LNK-TRANS-ORIGIN-CODE
546300210513              AND   CRDP.TRANS_SUB_TYPE    = :lncc_Space
546400210513              AND   CRDP.TRANS_TYPE_CODE   = :lncc_SEL
546500210513              AND   CRDP.ACCOUNT_TYPE_CODE = (SELECT ACCOUNT_TYPE_CODE
546600210513                    FROM MFAACCNTP
546700210513                    WHERE ACCOUNT_NO       = :LNK-ACCOUNT-NO )
546800210513              END-EXEC.
546900210512
547000210513            MOVE SQLSTATE TO lc_SqlStates.
547100210519            IF lncc_sqlSuccessful or lncc_SqlEnd
547200210519               CONTINUE
547300210513            ELSE
547400210513               SET lncc_ErrA4 TO TRUE
547500210513               MOVE lncc_ErrorDeleteMFADSCRDP TO  lc_sqlErrShortDESCR
547600210513               PERFORM Dsp-Error
547700210513            END-IF.
547800210513
547900210513      *---------------------------------
548000210513       InsertMFATRNATP.
548100210513      *---------------------------------
548200210513            EXEC SQL
548300210524             INSERT INTO QTEMP/MFATRNATP
548400210524                    (PLACEMENT_DATE, TRANS_NO,
548500210524                     SPLIT_OPTION_CODE, ADD_REPLACE_TAX,
548600210524                     FEDERAL_TAX_AMT, FEDERAL_TAX_PERCENT,
548700210524                     PROVINCIAL_TAX_AMT, PROVINCIAL_TAX_PERCENT
548701210929      *RFS1120884 START
548702210929                     ,INPUT_SPLIT_OPTION_CODE, INPUT_ADD_REPLACE_TAX,
548703210929                     INPUT_FEDERAL_TAX_AMT, INPUT_FEDERAL_TAX_PERCENT,
548704210929                     INPUT_PROVINCIAL_TAX_AMT,
548705210929                     INPUT_PROVINCIAL_TAX_PERCENT
548706210929      *RFS1120884 END
548800210524                     )
548900210524             VALUES (:lncc_zero,
549000210524                     :lncc_zero,
549100210524                     :lc_TaxSplitOption ,
549200210524                     :lc_AddReplaceTax  ,
549300210524                     :li_RemFedTaxAmt   ,
549400210524                     :li_FedTaxPercent  ,
549500210524                     :li_RemProvTaxAmt  ,
549600210524                     :li_ProvTaxPercent
549601210929      *RFS1120884 START
549602210929                    ,:lc_ATPISplitOption
549603210929                    ,:lc_ATPIAddRepTax
549604211004                    ,:li_ATPIRemFedTaxAmt
549605210929                    ,:li_ATPIFedTaxPerc
549606211004                    ,:li_ATPIRemProvTaxAmt
549607210929                    ,:li_ATPIProvTaxPerc
549608210929      *RFS1120884 END
549700210524                     )
549800210524           END-EXEC.
549900210513            MOVE SQLSTATE TO lc_SqlStates.
550000210519            IF lncc_sqlSuccessful OR lncc_sqlEnd
550100210513               CONTINUE
550200210513            ELSE
550300210513               SET lncc_ErrA5 TO TRUE
550400210513               MOVE lncc_ErrInsMFATRNATP TO  lc_sqlErrShortDESCR
550500210513               PERFORM Dsp-Error
550600210513            END-IF.
550700210514
550800210518      *---------------------------------
550900210518       TransCalcforFEE.
551000210518      *---------------------------------
551100210518             MOVE ltb_MarketValue(li_CounterAccInv) TO
551200210518                  li_FeeInvMV
551300210601             MOVE ltb_InvCode(li_CounterAccInv)     TO
551400210601                  lc_CalcFeeInv
551500210531             PERFORM CalculatorForFee
551600210526             IF lc_ChargeSalesTax = lncc_Y AND
551700210526                lb_IndstExistsNo
551800210518                PERFORM Calculate-GST-PST
551900210518             ELSE
552000210518                MOVE li_NetAmtAvail TO li_NetAmt
552100210518             END-IF
552200210518             IF li_NetAmt < li_RemainingNet
552300210518                MOVE li_NetAmt       TO li_HierInvNet,
552400210518                     li_HierInvGross
552500210518             ELSE
552600210518                MOVE li_RemainingNet TO li_HierInvNet,
552700210518                     li_HierInvGross
552800210518             END-IF.
552900210526      *---------------------------------
553000210526       CheckINDST.
553100210526      *---------------------------------
553200210526             INITIALIZE li_INDSTCount.
553300210526
553400210526             SET lb_IndstExistsNo TO TRUE.
553500210526
553600210526             EXEC SQL
553700210526               SELECT COUNT(*)
553800210526               INTO  :li_INDSTCount
553900210526               FROM   MFAACCATP
554000210526               WHERE  ACCOUNT_NO             = :li_AccountNo
554100210526               AND    ACCOUNT_ATTRIBUTE_CODE = :lncc_INDST
554200210526             END-EXEC.
554300210526
554400210526            MOVE SQLSTATE TO lc_SqlStates.
554500210526            IF lncc_sqlSuccessful OR lncc_sqlEnd
554600210526               CONTINUE
554700210526            ELSE
554800210526               SET lncc_ErrA6 TO TRUE
554900210526               MOVE lncc_ErrGetIndstCount TO lc_sqlErrShortDESCR
555000210526               PERFORM Dsp-Error
555100210526            END-IF.
555200210526
555300210526            IF  li_INDSTCount > lncc_zero
555400210526                SET lb_IndstExistsYes TO TRUE
555500210526            END-IF.
555600210527
555700210527      *---------------------------------
555800210527       DeleteMFATRNATP.
555900210527      *---------------------------------
556000210527            EXEC SQL
556100210527              DELETE FROM QTEMP/MFATRNATP
556200210527              WHERE PLACEMENT_DATE = :lncc_zero
556300210527              AND   TRANS_NO       = :lncc_zero
556400210527            END-EXEC.
556500210527
556600210527            MOVE SQLSTATE TO lc_SqlStates.
556700210527            IF lncc_sqlSuccessful OR lncc_sqlEnd
556800210527               CONTINUE
556900210527            ELSE
557000210527               SET lncc_ErrA7 TO TRUE
557100210527               MOVE lncc_ErrorDeleteMFATRNATP TO lc_sqlErrShortDESCR
557200210527               PERFORM Dsp-Error
557300210527            END-IF.
557400210501      *RFS1113861 Ends
557500210427
557600190627      *---------------------------------
557700190627       SQLFailProcess.
557800190627      *---------------------------------
557900190627           PERFORM Dsp-Error.
558000190627           PERFORM Force-Msgw.
558100190627
558200190627      *---------------------------------
558300190627       EndOfProgram.
558400190627      *---------------------------------
558500190627           GOBACK.
558600190627
558700190627      *---------------------------------
558800190627      * DSP-ERROR and FORCE-MSGW Routines
558900190627      *---------------------------------
559000190627           COPY CPYSQLRTN.
559100190627      *
559200190627
